* Converted with 6502to68k by JOTD
*
* make sure you call "cpu_init" first so bits 8-15 of data registers
* are zeroed out so we can use (ax,dy.w) addressing mode
* without systematic masking
*
* WARNING: you also have to add clr.w d1 and clr.w d2
* at start of any interrupt you could hook
* we don't want to mask those at each X,Y indexed instruction
* for performance reasons


	.macro	SBC_X	address
	INVERT_XC_FLAGS
	GET_ADDRESS	\address
	move.b	(a0,d1.w),d4
	subx.b	d4,d0
	INVERT_XC_FLAGS
	.endm
	
	.macro	SBC_Y	address
	INVERT_XC_FLAGS
	GET_ADDRESS	\address
	move.b	(a0,d2.w),d4
	subx.b	d4,d0
	INVERT_XC_FLAGS
	.endm
	
	.macro	SBC	address
	INVERT_XC_FLAGS
	GET_ADDRESS	\address
	move.b	(a0),d4
	subx.b	d4,d0
	INVERT_XC_FLAGS
	.endm
	
	.macro	SBC_IMM	param
	INVERT_XC_FLAGS
	move.b	#\param,d4
	subx.b	d4,d0
	INVERT_XC_FLAGS
	.endm

	.macro INVERT_XC_FLAGS
	PUSH_SR
	move.w	(sp),d4
	eor.b	#0x11,d4
	move.w	d4,(sp)
	POP_SR
	.endm

* useful to recall C from X (add then move then bcx)
	.macro	SET_C_FROM_X
	PUSH_SR
	move.w	(sp),d4
	bset	#0,d4   | set C
	btst	#4,d4
	bne.b	0f
	bclr	#0,d4   | X is clear: clear C
0:
	move.w	d4,(sp)
	POP_SR
	.endm

	.macro	SET_X_FROM_CLEARED_C
	PUSH_SR
	move.w	(sp),d4
	bset	#4,d4   | set X
	btst	#0,d4
	beq.b	0f
	bclr	#4,d4   | C is set: clear X
0:
	move.w	d4,(sp)
	POP_SR
	.endm

.macro CLR_XC_FLAGS
	moveq	#0,d7
	roxl.b	#1,d7
	.endm
	.macro SET_XC_FLAGS
	st	d7
	roxl.b	#1,d7
	.endm

	.macro CLR_V_FLAG
	moveq	#0,d3
	add.b	d3,d3
	.endm

	.macro SET_I_FLAG
.error "TODO: insert interrupt disable code here"
	.endm
	.macro CLR_I_FLAG
.error  "TODO: insert interrupt enable code here"
	.endm
	.ifdef	MC68020
	.macro PUSH_SR
	move.w	ccr,-(sp)
	.endm
	.macro POP_SR
	move.w	(sp)+,ccr
	.endm
	.else
	.macro PUSH_SR
	move.w	sr,-(sp)
	.endm
	.macro POP_SR
	move.w	(sp)+,sr
	.endm
	.endif

	.macro READ_LE_WORD	srcreg
	PUSH_SR
	move.b	(1,\srcreg),d4
	lsl.w	#8,d4
	move.b	(\srcreg),d4
	move.w	d4,\srcreg
	POP_SR
	.endm

	.macro GET_ADDRESS	offset
	lea	\offset,a0
	jbsr	get_address
	.endm

	.macro GET_ADDRESS_X	offset
	lea	\offset,a0
	jbsr	get_address
	lea	(a0,d1.w),a0
	READ_LE_WORD	a0
	jbsr	get_address
	.endm

	.macro GET_ADDRESS_Y	offset
	GET_ADDRESS	\offset
	READ_LE_WORD	a0
	jbsr	get_address
	.endm


cpu_init:
	moveq	#0,d0
	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	rts

get_address:
	.error    "TODO: implement this by adding memory base to a0"
	rts

*	map(0x0000, 0x07ff).ram().share("rambase");
*	map(0x0c00, 0x0c0f).ram().w(m_palette, FUNC(palette_device::write8)).share("palette");
*	map(0x1000, 0x13ff).ram().share("videoram");
*	map(0x1400, 0x17ff).ram().share("colorram");
*	map(0x1800, 0x1bff).rw(FUNC(btime_state::btime_mirrorvideoram_r), FUNC(btime_state::btime_mirrorvideoram_w));
*	map(0x1c00, 0x1fff).rw(FUNC(btime_state::btime_mirrorcolorram_r), FUNC(btime_state::btime_mirrorcolorram_w));
*	map(0x4000, 0x4000).portr("P1").nopw();
*	map(0x4001, 0x4001).portr("P2");
*	map(0x4002, 0x4002).portr("SYSTEM").w(FUNC(btime_state::btime_video_control_w));
*	map(0x4003, 0x4003).portr("DSW1").w(m_soundlatch, FUNC(generic_latch_8_device::write));
*	map(0x4004, 0x4004).portr("DSW2").w(FUNC(btime_state::bnj_scroll1_w));
*	map(0xb000, 0xffff).rom();

*	PORT_START("P1")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT ) PORT_4WAY
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT ) PORT_4WAY
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_JOYSTICK_UP ) PORT_4WAY
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN ) PORT_4WAY
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON1 )
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_UNUSED )
*
*	PORT_START("P2")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT ) PORT_4WAY PORT_COCKTAIL
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT ) PORT_4WAY PORT_COCKTAIL
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_JOYSTICK_UP ) PORT_4WAY PORT_COCKTAIL
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN ) PORT_4WAY PORT_COCKTAIL
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_COCKTAIL
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_UNUSED )
*
*	PORT_START("SYSTEM")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_START1 )
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_START2 )
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_TILT )
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x40, IP_ACTIVE_HIGH, IPT_COIN1 ) PORT_CHANGED_MEMBER(DEVICE_SELF, btime_state,coin_inserted_irq_hi, 0)
*	PORT_BIT( 0x80, IP_ACTIVE_HIGH, IPT_COIN2 ) PORT_CHANGED_MEMBER(DEVICE_SELF, btime_state,coin_inserted_irq_hi, 0)
*
*	PORT_START("DSW1") // At location 15D on sound PCB
*	PORT_DIPNAME( 0x03, 0x03, DEF_STR( Coin_A ) )     PORT_DIPLOCATION("SW1:1,2")
*	PORT_DIPSETTING(    0x00, DEF_STR( 2C_1C ) )
*	PORT_DIPSETTING(    0x03, DEF_STR( 1C_1C ) )
*	PORT_DIPSETTING(    0x02, DEF_STR( 1C_2C ) )
*	PORT_DIPSETTING(    0x01, DEF_STR( 1C_3C ) )
*	PORT_DIPNAME( 0x0c, 0x0c, DEF_STR( Coin_B ) )     PORT_DIPLOCATION("SW1:3,4")
*	PORT_DIPSETTING(    0x00, DEF_STR( 2C_1C ) )
*	PORT_DIPSETTING(    0x0c, DEF_STR( 1C_1C ) )
*	PORT_DIPSETTING(    0x08, DEF_STR( 1C_2C ) )
*	PORT_DIPSETTING(    0x04, DEF_STR( 1C_3C ) )
*	PORT_DIPNAME( 0x10, 0x10, "Leave Off" )           PORT_DIPLOCATION("SW1:5") // Must be OFF. No test mode in ROM
*	PORT_DIPSETTING(    0x10, DEF_STR( Off ) )                                  // so this locks up the game at boot-up if on
*	PORT_DIPSETTING(    0x00, DEF_STR( On ) )
*	PORT_DIPUNUSED_DIPLOC( 0x20, IP_ACTIVE_LOW, "SW1:6" )
*	PORT_DIPNAME( 0x40, 0x00, DEF_STR( Cabinet ) )    PORT_DIPLOCATION("SW1:7")
*	PORT_DIPSETTING(    0x00, DEF_STR( Upright ) )
*	PORT_DIPSETTING(    0x40, DEF_STR( Cocktail ) )
*//  PORT_DIPNAME( 0x80, 0x00, "Screen" )              PORT_DIPLOCATION("SW1:8") // Manual states this is Screen Invert
*//  PORT_DIPSETTING(    0x00, "Normal" )
*//  PORT_DIPSETTING(    0x80, "Invert" )
*	PORT_BIT( 0x80, IP_ACTIVE_HIGH, IPT_CUSTOM  ) PORT_VBLANK("screen")  // Schematics show this is connected to DIP SW2.8
*
*	PORT_START("DSW2") // At location 14D on sound PCB
*	PORT_DIPNAME( 0x01, 0x01, DEF_STR( Lives ) )      PORT_DIPLOCATION("SW2:1")
*	PORT_DIPSETTING(    0x01, "3" )
*	PORT_DIPSETTING(    0x00, "5" )
*	PORT_DIPNAME( 0x06, 0x02, DEF_STR( Bonus_Life ) ) PORT_DIPLOCATION("SW2:2,3")
*	PORT_DIPSETTING(    0x06, "10000" )
*	PORT_DIPSETTING(    0x04, "15000" )
*	PORT_DIPSETTING(    0x02, "20000"  )
*	PORT_DIPSETTING(    0x00, "30000"  )
*	PORT_DIPNAME( 0x08, 0x08, "Enemies" )             PORT_DIPLOCATION("SW2:4")
*	PORT_DIPSETTING(    0x08, "4" )
*	PORT_DIPSETTING(    0x00, "6" )
*	PORT_DIPNAME( 0x10, 0x00, "End of Level Pepper" ) PORT_DIPLOCATION("SW2:5")
*	PORT_DIPSETTING(    0x10, DEF_STR( No ) )
*	PORT_DIPSETTING(    0x00, DEF_STR( Yes ) )
*	PORT_DIPUNUSED_DIPLOC( 0x20, 0x20, "SW2:6" )  // should be OFF according to the manual
*	PORT_DIPUNUSED_DIPLOC( 0x40, 0x40, "SW2:7" )  // should be OFF according to the manual
*	PORT_DIPUNUSED_DIPLOC( 0x80, 0x80, "SW2:8" )  // should be OFF according to the manual
	jra	l_cf3c                             	| [$c000: jmp $cf3c]
	jra	l_c00f                             	| [$c003: jmp $c00f]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c006: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c008: nop]
l_c009:
	jra	l_b003                             	| [$c009: jmp $b003]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c00c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c00e: nop]
l_c00f:
	SET_I_FLAG                             	| [$c00f: sei]
	nop                                    	| [$c010: cld]
	st.b	d1                                	| [$c011: ldx #$ff]
	illegal   <-- TODO: unsupported transfer to stack register	| [$c013: txs]
	GET_ADDRESS	0x4003                     	| [$c014: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$c017: and #$10]
	beq	l_c009                             	| [$c019: beq $c009]
	clr.b	d0                               	| [$c01b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x01                       	| [$c01d: sta $01]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf9                       	| [$c01f: sta $f9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x4000                     	| [$c021: sta $4000]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c332                            	| [$c024: jsr $c332]
	jbsr	l_c31d                            	| [$c027: jsr $c31d]
	move.b	#0x01,d0                        	| [$c02a: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x01                       	| [$c02c: sta $01]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$c02e: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1a                       	| [$c030: sta $1a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c70d                            	| [$c032: jsr $c70d]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c035: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c037: nop]
l_c038:
	move.b	#0xfe,d0                        	| [$c038: lda #$fe]
	PUSH_SR
	GET_ADDRESS	0x5005                     	| [$c03a: sta $5005]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$c03d: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x4002                     	| [$c03f: sta $4002]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x1b                       	| [$c042: sta $1b]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x20                       	| [$c044: sta $20]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$c046: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1c                       	| [$c048: sta $1c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c416                            	| [$c04a: jsr $c416]
	st.b	d1                                	| [$c04d: ldx #$ff]
	jbsr	l_ca2c                            	| [$c04f: jsr $ca2c]
	jbsr	l_c3d9                            	| [$c052: jsr $c3d9]
	st.b	d1                                	| [$c055: ldx #$ff]
	jbsr	l_ca2c                            	| [$c057: jsr $ca2c]
	jbsr	l_c478                            	| [$c05a: jsr $c478]
	move.b	#0x3f,d1                        	| [$c05d: ldx #$3f]
	jbsr	l_ca2c                            	| [$c05f: jsr $ca2c]
	jbsr	l_c561                            	| [$c062: jsr $c561]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c065: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c067: nop]
l_c068:
	jbsr	l_c70d                            	| [$c068: jsr $c70d]
	jbsr	l_c748                            	| [$c06b: jsr $c748]
	move.b	#0x01,d0                        	| [$c06e: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1c                       	| [$c070: sta $1c]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$c072: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c074: nop]
l_c075:
	jbsr	l_c767                            	| [$c075: jsr $c767]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c078: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c07a: nop]
l_c07b:
	GET_ADDRESS	0x4003                     	| [$c07b: lda $4003]
	move.b	(a0),d0                         	| [...]
	bpl	l_c07b                             	| [$c07e: bpl $c07b]
	CLR_I_FLAG                             	| [$c080: cli]
	nop                                    	| [$c081: nop]
	nop                                    	| [$c082: nop]
	nop                                    	| [$c083: nop]
	nop                                    	| [$c084: nop]
	SET_I_FLAG                             	| [$c085: sei]
	jbsr	l_d045                            	| [$c086: jsr $d045]
	jbsr	l_d06e                            	| [$c089: jsr $d06e]
	GET_ADDRESS	timer1_0013                	| [$c08c: inc timer1_0013]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	timer1_0013                	| [$c08e: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x3f,d0                         	| [$c090: and #$3f]
	bne	l_c097                             	| [$c092: bne $c097]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c094: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c096: nop]
l_c097:
	GET_ADDRESS	timer1_0014                	| [$c097: inc timer1_0014]
	addq.b	#1,(a0)                         	| [...]
	bne	l_c09e                             	| [$c099: bne $c09e]
	GET_ADDRESS	0x15                       	| [$c09b: inc $15]
	addq.b	#1,(a0)                         	| [...]
	nop                                    	| [$c09d: nop]
l_c09e:
	GET_ADDRESS	0x16                       	| [$c09e: inc $16]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x4000                     	| [$c0a0: lda $4000]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x4001                     	| [$c0a3: adc $4001]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x16                       	| [$c0a6: adc $16]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x16                       	| [$c0a8: sta $16]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$c0aa: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c0ac: nop]
l_c0ad:
	GET_ADDRESS	0x4003                     	| [$c0ad: lda $4003]
	move.b	(a0),d0                         	| [...]
	bmi	l_c0ad                             	| [$c0b0: bmi $c0ad]
	jbsr	l_c8e6                            	| [$c0b2: jsr $c8e6]
	jbsr	l_d17b                            	| [$c0b5: jsr $d17b]
	jbsr	l_d796                            	| [$c0b8: jsr $d796]
	jbsr	l_d898                            	| [$c0bb: jsr $d898]
	GET_ADDRESS	0x1b                       	| [$c0be: lda $1b]
	move.b	(a0),d0                         	| [...]
	beq	l_c0ce                             	| [$c0c0: beq $c0ce]
	jbsr	l_db28                            	| [$c0c2: jsr $db28]
	jbsr	l_dbbb                            	| [$c0c5: jsr $dbbb]
	jbsr	l_dc77                            	| [$c0c8: jsr $dc77]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c0cb: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c0cd: nop]
l_c0ce:
	jbsr	l_dd65                            	| [$c0ce: jsr $dd65]
	jbsr	l_ea8d                            	| [$c0d1: jsr $ea8d]
	jbsr	l_e6df                            	| [$c0d4: jsr $e6df]
	jbsr	l_e141                            	| [$c0d7: jsr $e141]
	jbsr	l_e190                            	| [$c0da: jsr $e190]
	jbsr	l_e835                            	| [$c0dd: jsr $e835]
	jbsr	l_e760                            	| [$c0e0: jsr $e760]
	jbsr	l_e86c                            	| [$c0e3: jsr $e86c]
	GET_ADDRESS	current_player_001f        	| [$c0e6: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_pepper_002b         	| [$c0e8: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bne	l_c119                             	| [$c0ea: bne $c119]
	GET_ADDRESS	timer1_0013                	| [$c0ec: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x3f,d0                         	| [$c0ee: and #$3f]
	bne	l_c10b                             	| [$c0f0: bne $c10b]
	move.b	#0xfc,d1                        	| [$c0f2: ldx #$fc]
	move.b	#0xc0,d2                        	| [$c0f4: ldy #$c0]
	jbsr	l_c9bc                            	| [$c0f6: jsr $c9bc]
	jra	l_c119                             	| [$c0f9: jmp $c119]
l_C0FC:
	.byte	0x3A
00
l_C0FF:
	.byte	0x00
l_C100:
	.byte	0x00
10
52
FF
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c108: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c10a: nop]
l_c10b:
	cmp.b	#0x0f,d0                         	| [$c10b: cmp #$0f]
	bne	l_c119                             	| [$c10d: bne $c119]
	move.b	#0x02,d1                        	| [$c10f: ldx #$02]
	move.b	#0xc1,d2                        	| [$c111: ldy #$c1]
	jbsr	l_c9bc                            	| [$c113: jsr $c9bc]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c116: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c118: nop]
l_c119:
	GET_ADDRESS	0xc6                       	| [$c119: lda $c6]
	move.b	(a0),d0                         	| [...]
	bne	l_c12a                             	| [$c11b: bne $c12a]
	GET_ADDRESS	0xc5                       	| [$c11d: lda $c5]
	move.b	(a0),d0                         	| [...]
	beq	l_c124                             	| [$c11f: beq $c124]
	jra	l_c075                             	| [$c121: jmp $c075]
l_c124:
	jra	l_c07b                             	| [$c124: jmp $c07b]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c127: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c129: nop]
l_c12a:
	clr.b	d0                               	| [$c12a: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xc6                       	| [$c12c: sta $c6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1b                       	| [$c12e: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	bne	l_c13d                             	| [$c130: bne $c13d]
	move.b	#0x3f,d1                        	| [$c132: ldx #$3f]
	jbsr	l_ca2c                            	| [$c134: jsr $ca2c]
	jra	l_c038                             	| [$c137: jmp $c038]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c13a: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa320                     	| [$c13c: ldx $a320]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d2                           	| [$c13f: iny]
	jbsr	l_cbe3                            	| [$c140: jsr $cbe3]
	GET_ADDRESS	0x21                       	| [$c143: lda $21]
	move.b	(a0),d0                         	| [...]
	bne	l_c15e                             	| [$c145: bne $c15e]
	GET_ADDRESS	player_lives_0029          	| [$c147: lda player_lives_0029]
	move.b	(a0),d0                         	| [...]
	bmi	l_c158                             	| [$c149: bmi $c158]
	move.b	#0x01,d0                        	| [$c14b: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x20                       	| [$c14d: sta $20]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_c075                             	| [$c152: jmp $c075]
F5
F1
85
l_c15e:
	GET_ADDRESS	current_player_001f        	| [$c15e: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	bne	l_c1af                             	| [$c160: bne $c1af]
	GET_ADDRESS	player_lives_0029          	| [$c162: lda player_lives_0029]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x2a                       	| [$c164: and $2a]
	and.b	(a0),d0                          	| [...]
	bmi	l_c1a9                             	| [$c166: bmi $c1a9]
	GET_ADDRESS	0x2a                       	| [$c168: lda $2a]
	move.b	(a0),d0                         	| [...]
	bpl	l_c179                             	| [$c16a: bpl $c179]
	jbsr	l_c26d                            	| [$c16c: jsr $c26d]
	move.b	#0x01,d0                        	| [$c16f: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x20                       	| [$c171: sta $20]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_c075                             	| [$c173: jmp $c075]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c176: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c178: nop]
l_c179:
	GET_ADDRESS	player_lives_0029          	| [$c179: lda player_lives_0029]
	move.b	(a0),d0                         	| [...]
	bpl	l_c186                             	| [$c17b: bpl $c186]
	jbsr	l_c295                            	| [$c17d: jsr $c295]
	jbsr	l_c8a3                            	| [$c180: jsr $c8a3]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c183: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0320                     	| [$c185: ldx $0320]
	move.b	(a0),d1                         	| [...]
	move.b	#0x01,d0                        	| [$c189: lda #$01]
	PUSH_SR
	GET_ADDRESS	current_player_001f        	| [$c18b: sta current_player_001f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0x20                     	| [$c18d: adc ($20, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x4003                     	| [$c18f: cmp $4003]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	and.b	#0x40,d0                         	| [$c192: and #$40]
	beq	l_c1a3                             	| [$c194: beq $c1a3]
	clr.b	d0                               	| [$c196: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x5005                     	| [$c198: sta $5005]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$c19b: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x4002                     	| [$c19d: sta $4002]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf7                       	| [$c1a0: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c1a2: nop]
l_c1a3:
	jbsr	l_c281                            	| [$c1a3: jsr $c281]
	jra	l_c075                             	| [$c1a6: jmp $c075]
l_c1a9:
	jra	l_c1f1                             	| [$c1a9: jmp $c1f1]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c1ac: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2aa5                     	| [$c1ae: ldx $2aa5]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_lives_0029          	| [$c1b1: and player_lives_0029]
	and.b	(a0),d0                          	| [...]
	bmi	l_c1f1                             	| [$c1b3: bmi $c1f1]
	GET_ADDRESS	player_lives_0029          	| [$c1b5: lda player_lives_0029]
	move.b	(a0),d0                         	| [...]
	bpl	l_c1c6                             	| [$c1b7: bpl $c1c6]
	move.b	#0x01,d0                        	| [$c1b9: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x20                       	| [$c1bb: sta $20]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xc2                     	| [$c1be: eor ($c2, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jra	l_c075                             	| [$c1c0: jmp $c075]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c1c3: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2aa5                     	| [$c1c5: ldx $2aa5]
	move.b	(a0),d1                         	| [...]
	bpl	l_c1d3                             	| [$c1c8: bpl $c1d3]
	jbsr	l_c2ad                            	| [$c1ca: jsr $c2ad]
	jbsr	l_c8a3                            	| [$c1cd: jsr $c8a3]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c1d0: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c1d2: nop]
l_c1d3:
	jbsr	l_c303                            	| [$c1d3: jsr $c303]
	clr.b	d0                               	| [$c1d6: lda #$00]
	PUSH_SR
	GET_ADDRESS	current_player_001f        	| [$c1d8: sta current_player_001f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$c1da: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x20                       	| [$c1dc: sta $20]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xfe                       	| [$c1de: lda $fe]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x5005                     	| [$c1e0: sta $5005]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$c1e3: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x4002                     	| [$c1e5: sta $4002]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c26d                            	| [$c1e8: jsr $c26d]
	jra	l_c075                             	| [$c1eb: jmp $c075]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c1ee: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c1f0: nop]
l_c1f1:
	jbsr	l_c2c5                            	| [$c1f1: jsr $c2c5]
	jbsr	l_c8a3                            	| [$c1f4: jsr $c8a3]
	move.b	#0xfe,d0                        	| [$c1f7: lda #$fe]
	PUSH_SR
	GET_ADDRESS	0x5005                     	| [$c1f9: sta $5005]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$c1fc: lda $00]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x4002                     	| [$c1fe: sta $4002]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$c201: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xcb                       	| [$c203: sta $cb]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2d                       	| [$c205: lda $2d]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xcc                       	| [$c207: sta $cc]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2e                       	| [$c209: lda $2e]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xcd                       	| [$c20b: sta $cd]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2f                       	| [$c20d: lda $2f]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xce                       	| [$c20f: sta $ce]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_eff3                            	| [$c211: jsr $eff3]
	jbsr	l_c8a3                            	| [$c214: jsr $c8a3]
	GET_ADDRESS	0x4003                     	| [$c217: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$c21a: and #$40]
	beq	l_c22b                             	| [$c21c: beq $c22b]
	clr.b	d0                               	| [$c21e: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x5005                     	| [$c220: sta $5005]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$c223: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x4002                     	| [$c225: sta $4002]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf7                       	| [$c228: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c22a: nop]
l_c22b:
	move.b	#0x01,d0                        	| [$c22b: lda #$01]
	PUSH_SR
	GET_ADDRESS	0xcb                       	| [$c22d: sta $cb]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x30                       	| [$c22f: lda $30]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xcc                       	| [$c231: sta $cc]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x31                       	| [$c233: lda $31]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xcd                       	| [$c235: sta $cd]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x32                       	| [$c237: lda $32]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xce                       	| [$c239: sta $ce]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_eff3                            	| [$c23b: jsr $eff3]
	clr.b	d1                               	| [$c23e: ldx #$00]
	PUSH_SR
	GET_ADDRESS	0x1b                       	| [$c240: stx $1b]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1d                       	| [$c242: lda $1d]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x1e                       	| [$c244: ora $1e]
	or.b	(a0),d0                           	| [...]
	beq	l_c24d                             	| [$c246: beq $c24d]
	GET_ADDRESS	0x1a                       	| [$c248: inc $1a]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c24a: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c24c: nop]
l_c24d:
	jra	l_c038                             	| [$c24d: jmp $c038]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c250: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c252: nop]
	move.b	#0xe8,d1                        	| [$c253: ldx #$e8]
	move.b	#0xc2,d2                        	| [$c255: ldy #$c2]
	jbsr	l_c9bc                            	| [$c257: jsr $c9bc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c25a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c25c: nop]
l_c25d:
	move.b	#0x03,d0                        	| [$c25d: lda #$03]
	jbsr	l_ea5d                            	| [$c25f: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c262: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c264: nop]
l_c265:
	move.b	#0x1f,d1                        	| [$c265: ldx #$1f]
	jbsr	l_ca2c                            	| [$c267: jsr $ca2c]
	rts                                    	| [$c26a: rts]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c26b: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c26d:
	nop                                    	| [$c26d: nop]
	move.b	#0xd2,d1                        	| [$c26e: ldx #$d2]
	move.b	#0xc2,d2                        	| [$c270: ldy #$c2]
	jbsr	l_c9bc                            	| [$c272: jsr $c9bc]
	move.b	#0xe8,d1                        	| [$c275: ldx #$e8]
	move.b	#0xc2,d2                        	| [$c277: ldy #$c2]
	jbsr	l_c9bc                            	| [$c279: jsr $c9bc]
	jra	l_c25d                             	| [$c27c: jmp $c25d]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c27f: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c281:
	nop                                    	| [$c281: nop]
	move.b	#0xdd,d1                        	| [$c282: ldx #$dd]
	move.b	#0xc2,d2                        	| [$c284: ldy #$c2]
	jbsr	l_c9bc                            	| [$c286: jsr $c9bc]
	move.b	#0xe8,d1                        	| [$c289: ldx #$e8]
	move.b	#0xc2,d2                        	| [$c28b: ldy #$c2]
	jbsr	l_c9bc                            	| [$c28d: jsr $c9bc]
	jra	l_c25d                             	| [$c290: jmp $c25d]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c293: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c295:
	nop                                    	| [$c295: nop]
	GET_ADDRESS	0xc8                       	| [$c296: inc $c8]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xd2,d1                        	| [$c298: ldx #$d2]
	move.b	#0xc2,d2                        	| [$c29a: ldy #$c2]
	jbsr	l_c9bc                            	| [$c29c: jsr $c9bc]
	GET_ADDRESS	0xc8                       	| [$c29f: inc $c8]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xf5,d1                        	| [$c2a1: ldx #$f5]
	move.b	#0xc2,d2                        	| [$c2a3: ldy #$c2]
	jbsr	l_c9bc                            	| [$c2a5: jsr $c9bc]
	jra	l_c265                             	| [$c2a8: jmp $c265]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c2ab: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c2ad:
	nop                                    	| [$c2ad: nop]
	GET_ADDRESS	0xc8                       	| [$c2ae: inc $c8]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xdd,d1                        	| [$c2b0: ldx #$dd]
	move.b	#0xc2,d2                        	| [$c2b2: ldy #$c2]
	jbsr	l_c9bc                            	| [$c2b4: jsr $c9bc]
	GET_ADDRESS	0xc8                       	| [$c2b7: inc $c8]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xf5,d1                        	| [$c2b9: ldx #$f5]
	move.b	#0xc2,d2                        	| [$c2bb: ldy #$c2]
	jbsr	l_c9bc                            	| [$c2bd: jsr $c9bc]
	jra	l_c265                             	| [$c2c0: jmp $c265]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c2c3: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c2c5:
	nop                                    	| [$c2c5: nop]
	GET_ADDRESS	0xc8                       	| [$c2c6: inc $c8]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xf5,d1                        	| [$c2c8: ldx #$f5]
	move.b	#0xc2,d2                        	| [$c2ca: ldy #$c2]
	jbsr	l_c9bc                            	| [$c2cc: jsr $c9bc]
	jra	l_c265                             	| [$c2cf: jmp $c265]
	GET_ADDRESS	0x1a11                     	| [$c2d2: cmp $1a11]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0b                       	| [$c2d5: asl $0b, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
brk $02
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x1a11                     	| [$c2dd: cmp $1a11]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0b                       	| [$c2e0: asl $0b, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
brk $03
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_Y	0x0b                     	| [$c2ea: ora ($0b), y]
	or.b	(a0,d2.w),d0                      	| [...]
brk $1c
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0xff23                     	| [$c2f2: asl $ff23]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS_Y	0x0b                     	| [$c2f7: ora ($0b), y]
	or.b	(a0,d2.w),d0                      	| [...]
brk $19
   ^^^^ TODO: unknown/unsupported instruction brk
	jbsr	l_1c0f                            	| [$c2fd: jsr $1c0f]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c301: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c303:
	nop                                    	| [$c303: nop]
	clr.b	d2                               	| [$c304: ldy #$00]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c306: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c308: nop]
l_c309:
	GET_ADDRESS	0x0200                     	| [$c309: lda $0200, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d1                           	| [$c30c: tax]
	GET_ADDRESS	0x0300                     	| [$c30d: lda $0300, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x0200                     	| [$c310: sta $0200, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	move.b	d1,d0                           	| [$c313: txa]
	PUSH_SR
	GET_ADDRESS	0x0300                     	| [$c314: sta $0300, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	move.b	d0,d2                           	| [$c317: tay]
	bne	l_c309                             	| [$c318: bne $c309]
	rts                                    	| [$c31a: rts]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c31b: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c31d:
	GET_ADDRESS	0x00a9                     	| [$c31d: ldx $00a9]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x5005                     	| [$c320: sta $5005]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x25                       	| [$c323: sta $25]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X_IND	0x03                         	| [$c325: sbc ($03, x)]
rti
	move.b	#0x80,d0                        	| [$c328: lda #$80]
	PUSH_SR
	GET_ADDRESS	0x27                       	| [$c32a: sta $27]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X_IND	0x00                         	| [$c32c: sbc ($00, x)]
rti
	GET_ADDRESS	0xf6                       	| [$c330: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c332:
	nop                                    	| [$c332: nop]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c333: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00a9                     	| [$c335: ldx $00a9]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$c338: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x10,d0                        	| [$c33a: lda #$10]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$c33c: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x10                       	| [$c33e: rol $10]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0xf6                       	| [$c340: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c342: nop]
l_c343:
	clr.b	d2                               	| [$c343: ldy #$00]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c345: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00a9                     	| [$c347: ldx $00a9]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c34a: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$c34c: tay]
	bne	l_c348                             	| [$c34d: bne $c348]
	GET_ADDRESS	0x04                       	| [$c34f: inc $04]
	addq.b	#1,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$c351: dex]
	bne	l_c343                             	| [$c352: bne $c343]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c354: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0195                     	| [$c356: ldx $0195]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d1                           	| [$c359: inx]
	cmp.b	#0xe1,d1                         	| [$c35a: cpx #$e1]
	bne	l_c357                             	| [$c35c: bne $c357]
	clr.b	d1                               	| [$c35e: ldx #$00]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c360: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c362: nop]
l_c363:
	PUSH_SR
	GET_ADDRESS	0x0200                     	| [$c363: sta $0200, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	SBC_IND_Y	0x00                         	| [$c366: sbc ($00), y]
	addq.b	#1,d1                           	| [$c369: inx]
	bne	l_c363                             	| [$c36a: bne $c363]
	move.b	#0x02,d0                        	| [$c36c: lda #$02]
	PUSH_SR
	GET_ADDRESS	0x35                       	| [$c36e: sta $35]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x80,d0                        	| [$c370: lda #$80]
	PUSH_SR
	GET_ADDRESS	0x34                       	| [$c372: sta $34]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$c374: lda $00]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x33                       	| [$c376: sta $33]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x23,d1                        	| [$c378: ldx #$23]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c37a: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xb3bd                     	| [$c37c: ldx $b3bd]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x36                       	| [$c380: sta $36, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$c382: dex]
	bpl	l_c37d                             	| [$c383: bpl $c37d]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c385: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00a0                     	| [$c387: ldx $00a0]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c38a: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00a2                     	| [$c38c: ldx $00a2]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c38f: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c391: nop]
l_c392:
	GET_ADDRESS	0xc3a3                     	| [$c392: lda $c3a3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x0c00                     	| [$c395: sta $0c00, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c398: iny]
	addq.b	#1,d1                           	| [$c399: inx]
	cmp.b	#0x10,d1                         	| [$c39a: cpx #$10]
	bne	l_c392                             	| [$c39c: bne $c392]
	cmp.b	#0x20,d2                         	| [$c39e: cpy #$20]
	bne	l_c38d                             	| [$c3a0: bne $c38d]
	rts                                    	| [$c3a2: rts]
brk $d0
   ^^^^ TODO: unknown/unsupported instruction brk
	cmp.b	#0xf8,d2                         	| [$c3a6: cpy #$f8]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	SBC_X_IND	0xd4                         	| [$c3a9: sbc ($d4, x)]
brk $f8
   ^^^^ TODO: unknown/unsupported instruction brk
	cmp.b	#0x38,d2                         	| [$c3b1: cpy #$38]
brk $80
   ^^^^ TODO: unknown/unsupported instruction brk
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_X	0x00                     	| [$c3b8: ora ($00, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	0x00                       	| [$c3ba: sty $00, x]
    move.b	d2,(a0,d1.w)                 	| [...]
	POP_SR
	bvc	l_c423                             	| [$c3bc: bvc $c423]
brk $50
   ^^^^ TODO: unknown/unsupported instruction brk
	movem.w	d0,-(sp)                       	| [$c3c0: pha]
brk $ff
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x0f                       	| [$c3c5: ora $0f, x]
	or.b	(a0,d1.w),d0                      	| [...]
	CLR_XC_FLAGS                           	| [$c3c7: clc]
	GET_ADDRESS	0x1113                     	| [$c3c9: cmp $1113]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x1218                     	| [$c3cc: ora $1218, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x1515                     	| [$c3cf: cmp $1515]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xff12                     	| [$c3d2: cmp $ff12]
	cmp.b	(a0),d0                          	| [...]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$c3d7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c3d9:
	nop                                    	| [$c3d9: nop]
	jbsr	l_c8a3                            	| [$c3da: jsr $c8a3]
	jbsr	l_cbe3                            	| [$c3dd: jsr $cbe3]
	move.b	#0x0f,d1                        	| [$c3e0: ldx #$0f]
	move.b	#0xce,d2                        	| [$c3e2: ldy #$ce]
	jbsr	l_c9bc                            	| [$c3e4: jsr $c9bc]
	move.b	#0x29,d1                        	| [$c3e7: ldx #$29]
	move.b	#0xce,d2                        	| [$c3e9: ldy #$ce]
	jbsr	l_c9bc                            	| [$c3eb: jsr $c9bc]
	move.b	#0xbe,d1                        	| [$c3ee: ldx #$be]
	move.b	#0xce,d2                        	| [$c3f0: ldy #$ce]
	jbsr	l_c9bc                            	| [$c3f2: jsr $c9bc]
	GET_ADDRESS	0x5b                       	| [$c3f5: ldx $5b]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d1                           	| [$c3f7: inx]
	PUSH_SR
	GET_ADDRESS	0x12d5                     	| [$c3f8: stx $12d5]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x5a                       	| [$c3fb: lda $5a]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$c3fd: and #$f0]
	lsr.b	#1,d0                            	| [$c3ff: lsr a]
	lsr.b	#1,d0                            	| [$c400: lsr a]
	lsr.b	#1,d0                            	| [$c401: lsr a]
	lsr.b	#1,d0                            	| [$c402: lsr a]
	move.b	d0,d1                           	| [$c403: tax]
	addq.b	#1,d1                           	| [$c404: inx]
	PUSH_SR
	GET_ADDRESS	0x12d6                     	| [$c405: stx $12d6]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d1                        	| [$c408: ldx #$01]
	PUSH_SR
	GET_ADDRESS	0x12d7                     	| [$c40a: stx $12d7]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x12d8                     	| [$c40d: stx $12d8]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x12d9                     	| [$c410: stx $12d9]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$c413: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c414: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c416:
	nop                                    	| [$c416: nop]
	jbsr	l_c8a3                            	| [$c417: jsr $c8a3]
	jbsr	l_cbe3                            	| [$c41a: jsr $cbe3]
	move.b	#0x0f,d1                        	| [$c41d: ldx #$0f]
	move.b	#0xce,d2                        	| [$c41f: ldy #$ce]
	jbsr	l_c9bc                            	| [$c421: jsr $c9bc]
	move.b	#0xef,d1                        	| [$c424: ldx #$ef]
	move.b	#0xce,d2                        	| [$c426: ldy #$ce]
	jbsr	l_c9bc                            	| [$c428: jsr $c9bc]
	move.b	#0xc9,d0                        	| [$c42b: lda #$c9]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$c42d: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x11,d0                        	| [$c42f: lda #$11]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$c431: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x12,d1                        	| [$c433: ldx #$12]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c435: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c437: nop]
l_c438:
	clr.b	d2                               	| [$c438: ldy #$00]
	GET_ADDRESS	0x36                       	| [$c43a: lda $36, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c43c: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c43e: iny]
	GET_ADDRESS	0x37                       	| [$c43f: lda $37, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c441: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c443: iny]
	GET_ADDRESS	0x38                       	| [$c444: lda $38, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c446: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$c448: clc]
	GET_ADDRESS	0x03                       	| [$c449: lda $03]
	move.b	(a0),d0                         	| [...]
	move.b	#0x40,d4	| [$c44b: adc #$40]
	addx.b	d4,d0                        	| [$c44b: adc #$40]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$c44d: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$c44f: lda $04]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d4	| [$c451: adc #$00]
	addx.b	d4,d0                        	| [$c451: adc #$00]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$c453: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d1                           	| [$c455: inx]
	addq.b	#1,d1                           	| [$c456: inx]
	addq.b	#1,d1                           	| [$c457: inx]
	cmp.b	#0x21,d1                         	| [$c458: cpx #$21]
	* bcc=>bcs
	bcs	l_c438                             	| [$c45a: bcc $c438]
	move.b	#0x03,d1                        	| [$c45c: ldx #$03]
	jbsr	l_c94e                            	| [$c45e: jsr $c94e]
	move.b	#0x04,d1                        	| [$c461: ldx #$04]
	jbsr	l_c94e                            	| [$c463: jsr $c94e]
	move.b	#0x05,d1                        	| [$c466: ldx #$05]
	jbsr	l_c94e                            	| [$c468: jsr $c94e]
	move.b	#0x06,d1                        	| [$c46b: ldx #$06]
	jbsr	l_c94e                            	| [$c46d: jsr $c94e]
	move.b	#0x07,d1                        	| [$c470: ldx #$07]
	jbsr	l_c94e                            	| [$c472: jsr $c94e]
	rts                                    	| [$c475: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c476: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c478:
	nop                                    	| [$c478: nop]
	st.b	d0                                	| [$c479: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0x19                       	| [$c47b: sta $19]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$c47d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c47f: nop]
	move.b	#0x01,d0                        	| [$c480: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1c                       	| [$c482: sta $1c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c748                            	| [$c484: jsr $c748]
	jbsr	l_c767                            	| [$c487: jsr $c767]
	move.b	#0x01,d2                        	| [$c48a: ldy #$01]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$c48c: sty $68]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c48e: iny]
	PUSH_SR
	GET_ADDRESS	0x69                       	| [$c48f: sty $69]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c491: iny]
	PUSH_SR
	GET_ADDRESS	0x6a                       	| [$c492: sty $6a]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	move.b	#0x90,d0                        	| [$c494: lda #$90]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$c496: sta $1802]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x4d,d0                        	| [$c499: lda #$4d]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$c49b: sta $1803]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x60,d0                        	| [$c49e: lda #$60]
	PUSH_SR
	GET_ADDRESS	0x1806                     	| [$c4a0: sta $1806]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x3d,d0                        	| [$c4a3: lda #$3d]
	PUSH_SR
	GET_ADDRESS	0x1807                     	| [$c4a5: sta $1807]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x30,d0                        	| [$c4a8: lda #$30]
	PUSH_SR
	GET_ADDRESS	0x180a                     	| [$c4aa: sta $180a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x3d,d0                        	| [$c4ad: lda #$3d]
	PUSH_SR
	GET_ADDRESS	0x180b                     	| [$c4af: sta $180b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x40,d0                        	| [$c4b2: lda #$40]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$c4b4: sta $a9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xaa                       	| [$c4b6: sta $aa]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xab                       	| [$c4b8: sta $ab]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xb0                       	| [$c4ba: sta $b0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x04,d0                        	| [$c4bc: lda #$04]
	PUSH_SR
	GET_ADDRESS	game_speed_00a8            	| [$c4be: sta game_speed_00a8]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xba                       	| [$c4c0: sta $ba]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x18,d0                        	| [$c4c2: lda #$18]
	PUSH_SR
	GET_ADDRESS	0x181e                     	| [$c4c4: sta $181e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x1d,d0                        	| [$c4c7: lda #$1d]
	PUSH_SR
	GET_ADDRESS	0x181f                     	| [$c4c9: sta $181f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_dd65                            	| [$c4cc: jsr $dd65]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c4cf: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c4d1: nop]
l_c4d2:
	move.b	#0x01,d1                        	| [$c4d2: ldx #$01]
	jbsr	l_ca2c                            	| [$c4d4: jsr $ca2c]
	GET_ADDRESS	timer1_0013                	| [$c4d7: inc timer1_0013]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x07,d1                        	| [$c4d9: ldx #$07]
	jbsr	l_d3c3                            	| [$c4db: jsr $d3c3]
	beq	l_c4e4                             	| [$c4de: beq $c4e4]
	rts                                    	| [$c4e0: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c4e1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c4e3: nop]
l_c4e4:
	move.b	#0x07,d1                        	| [$c4e4: ldx #$07]
	jbsr	l_d269                            	| [$c4e6: jsr $d269]
	jbsr	l_d898                            	| [$c4e9: jsr $d898]
	jbsr	l_ea8d                            	| [$c4ec: jsr $ea8d]
	jbsr	l_e190                            	| [$c4ef: jsr $e190]
	GET_ADDRESS	0x19                       	| [$c4f2: lda $19]
	move.b	(a0),d0                         	| [...]
	bne	l_c4fc                             	| [$c4f4: bne $c4fc]
	jra	l_c4d2                             	| [$c4f6: jmp $c4d2]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c4f9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c4fb: nop]
l_c4fc:
	move.b	#0x0f,d1                        	| [$c4fc: ldx #$0f]
	move.b	#0xc5,d2                        	| [$c4fe: ldy #$c5]
	jbsr	l_c9bc                            	| [$c500: jsr $c9bc]
	st.b	d1                                	| [$c503: ldx #$ff]
	jbsr	l_ca2c                            	| [$c505: jsr $ca2c]
	clr.b	d0                               	| [$c508: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x19                       	| [$c50a: sta $19]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c50c: iny]
	GET_ADDRESS	0x86                       	| [$c50e: cpy $86]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_Y	0x3b                     	| [$c510: ora ($3b), y]
	or.b	(a0,d2.w),d0                      	| [...]
rti
	rts                                    	| [$c513: rts]
3D
l_C516:
	.byte	0x42
l_C517:
	.byte	0x00
l_C518:
	.byte	0x32
61
l_C51C:
	.byte	0x62
15
l_C520:
	.byte	0x00
l_C521:
	.byte	0x00
l_C522:
	.byte	0x00
l_C523:
	.byte	0x00
l_C524:
	.byte	0x00
l_C525:
	.byte	0x00
l_C526:
	.byte	0x00
l_C527:
	.byte	0x00
l_C528:
	.byte	0x00
l_C529:
	.byte	0x00
l_C52A:
	.byte	0x00
l_C52B:
	.byte	0x00
10
60
31
33
62
14
l_C53D:
	.byte	0x00
l_C53E:
	.byte	0x00
l_C53F:
	.byte	0x00
l_C540:
	.byte	0x00
l_C541:
	.byte	0x00
l_C542:
	.byte	0x00
l_C543:
	.byte	0x00
l_C544:
	.byte	0x00
l_C545:
	.byte	0x00
l_C546:
	.byte	0x00
l_C547:
	.byte	0x00
11
60
35
61
l_C552:
	.byte	0x62
15
l_C556:
	.byte	0x00
l_C557:
	.byte	0x00
l_C558:
	.byte	0x00
l_C559:
	.byte	0x00
l_C55A:
	.byte	0x00
l_C55B:
	.byte	0x00
00
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c55f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c561:
	nop                                    	| [$c561: nop]
	jbsr	l_c748                            	| [$c562: jsr $c748]
	jbsr	l_c767                            	| [$c565: jsr $c767]
	move.b	#0x01,d2                        	| [$c568: ldy #$01]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$c56a: sty $68]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	cmp.b	#0x69,d2                         	| [$c56c: cpy #$69]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x6a                       	| [$c56f: sty $6a]
	move.b	d2,(a0)                         	| [...]
	GET_ADDRESS	0x6b                       	| [$c571: sty $6b]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c573: iny]
	PUSH_SR
	GET_ADDRESS	0x6c                       	| [$c574: sty $6c]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	cmp.b	#0x6d,d2                         	| [$c576: cpy #$6d]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0x1d,d0                        	| [$c578: lda #$1d]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$c57a: sta $1803]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X_IND	0x07                         	| [$c57d: sbc ($07, x)]
	CLR_XC_FLAGS                           	| [$c57f: clc]
	PUSH_SR
	GET_ADDRESS	0x180b                     	| [$c580: sta $180b]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x180f                     	| [$c583: sta $180f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X_IND	timer1_0013                  	| [$c586: sbc (timer1_0013, x)]
	CLR_XC_FLAGS                           	| [$c588: clc]
	PUSH_SR
	GET_ADDRESS	0x1817                     	| [$c589: sta $1817]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X_IND	current_player_001f          	| [$c58c: sbc (current_player_001f, x)]
	CLR_XC_FLAGS                           	| [$c58e: clc]
	GET_ADDRESS	0x8540                     	| [$c58f: eor $8540]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	move.b	#0x85,d0                        	| [$c592: lda #$85]
	move.b	d0,d1                           	| [$c594: tax]
	GET_ADDRESS_X	0xab                     	| [$c595: cmp ($ab, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_X	0xac                     	| [$c597: cmp ($ac, x)]
	cmp.b	(a0),d0                          	| [...]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xad                       	| [$c599: sta $ad]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xae                       	| [$c59b: sta $ae]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x89                       	| [$c59d: lda $89]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$c59f: sta $1802]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x59,d0                        	| [$c5a2: lda #$59]
	PUSH_SR
	GET_ADDRESS	0x1806                     	| [$c5a4: sta $1806]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x60                       	| [$c5a7: lda $60]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x180a                     	| [$c5a9: sta $180a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x90                       	| [$c5ac: lda $90]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x180e                     	| [$c5ae: sta $180e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x97,d0                        	| [$c5b1: lda #$97]
	PUSH_SR
	GET_ADDRESS	0x1812                     	| [$c5b3: sta $1812]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x30                       	| [$c5b6: lda $30]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1816                     	| [$c5b8: sta $1816]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x18,d0                        	| [$c5bb: lda #$18]
	PUSH_SR
	GET_ADDRESS	0x181e                     	| [$c5bd: sta $181e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$c5c0: lda #$01]
	PUSH_SR
	GET_ADDRESS	timer1_0013                	| [$c5c2: sta timer1_0013]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0x14                     	| [$c5c4: adc ($14, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR                                	| [$c5c6: php]
	GET_ADDRESS	0xdd                       	| [$c5c7: adc $dd]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c5c9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c5cb: nop]
l_c5cc:
	move.b	#0x01,d1                        	| [$c5cc: ldx #$01]
	jbsr	l_ca2c                            	| [$c5ce: jsr $ca2c]
	GET_ADDRESS	timer1_0013                	| [$c5d1: inc timer1_0013]
	addq.b	#1,(a0)                         	| [...]
	bne	l_c5d8                             	| [$c5d3: bne $c5d8]
	GET_ADDRESS	timer1_0014                	| [$c5d5: inc timer1_0014]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x07a2                     	| [$c5d7: ror $07a2]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	jbsr	l_d3c3                            	| [$c5da: jsr $d3c3]
	beq	l_c5fa                             	| [$c5dd: beq $c5fa]
	GET_ADDRESS	timer1_0014                	| [$c5df: lda timer1_0014]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$c5e1: cmp #$04]
	* bcc=>bcs
	bcs	l_c621                             	| [$c5e3: bcc $c621]
	move.b	#0x30,d1                        	| [$c5e5: ldx #$30]
	move.b	#0xc6,d2                        	| [$c5e7: ldy #$c6]
	jbsr	l_c9bc                            	| [$c5e9: jsr $c9bc]
	st.b	d1                                	| [$c5ec: ldx #$ff]
	jbsr	l_ca2c                            	| [$c5ee: jsr $ca2c]
	move.b	#0x40,d1                        	| [$c5f1: ldx #$40]
	jbsr	l_ca2c                            	| [$c5f3: jsr $ca2c]
	rts                                    	| [$c5f6: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c5f7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c5f9: nop]
l_c5fa:
	GET_ADDRESS	0x6e                       	| [$c5fa: lda $6e]
	move.b	(a0),d0                         	| [...]
	bpl	l_c621                             	| [$c5fc: bpl $c621]
	move.b	#0x07,d1                        	| [$c5fe: ldx #$07]
	jbsr	l_d269                            	| [$c600: jsr $d269]
	GET_ADDRESS	0x181e                     	| [$c603: lda $181e]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x22,d0                         	| [$c606: cmp #$22]
	beq	l_c615                             	| [$c608: beq $c615]
	cmp.b	#0x4a,d0                         	| [$c60a: cmp #$4a]
	beq	l_c615                             	| [$c60c: beq $c615]
	cmp.b	#0x82,d0                         	| [$c60e: cmp #$82]
	bne	l_c621                             	| [$c610: bne $c621]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c612: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c614: nop]
l_c615:
	jbsr	l_d1ad                            	| [$c615: jsr $d1ad]
	GET_ADDRESS	0x181e                     	| [$c618: inc $181e]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x181e                     	| [$c61b: inc $181e]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c61e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c620: nop]
l_c621:
	jbsr	l_d796                            	| [$c621: jsr $d796]
	jbsr	l_d898                            	| [$c624: jsr $d898]
	jbsr	l_e6df                            	| [$c627: jsr $e6df]
	jbsr	l_e190                            	| [$c62a: jsr $e190]
	jra	l_c5cc                             	| [$c62d: jmp $c5cc]
10
l_C632:
	.byte	0x32
64
l_C636:
	.byte	0x42
l_C637:
	.byte	0x00
2F
42
00
3E
40
FE
14
l_C648:
	.byte	0x00
l_C649:
	.byte	0x00
l_C64A:
	.byte	0x00
l_C64B:
	.byte	0x00
l_C64C:
	.byte	0x00
l_C64D:
	.byte	0x00
l_C64E:
	.byte	0x00
l_C64F:
	.byte	0x00
l_C650:
	.byte	0x00
l_C651:
	.byte	0x00
l_C652:
	.byte	0x00
l_C653:
	.byte	0x00
l_C654:
	.byte	0x00
l_C655:
	.byte	0x00
l_C656:
	.byte	0x00
l_C657:
	.byte	0x00
l_C658:
	.byte	0x00
l_C659:
	.byte	0x00
l_C65A:
	.byte	0x00
11
3D
00
42
42
l_C667:
	.byte	0x00
37
l_C66A:
	.byte	0x42
00
3A
00
37
33
15
l_C679:
	.byte	0x00
l_C67A:
	.byte	0x00
l_C67B:
	.byte	0x00
l_C67C:
	.byte	0x00
l_C67D:
	.byte	0x00
l_C67E:
	.byte	0x00
l_C67F:
	.byte	0x00
l_C680:
	.byte	0x00
l_C681:
	.byte	0x00
l_C682:
	.byte	0x00
l_C683:
	.byte	0x00
l_C684:
	.byte	0x00
l_C685:
	.byte	0x00
l_C686:
	.byte	0x00
l_C687:
	.byte	0x00
l_C688:
	.byte	0x00
l_C689:
	.byte	0x00
l_C68A:
	.byte	0x00
l_C68B:
	.byte	0x00
l_C68C:
	.byte	0x00
l_C68D:
	.byte	0x00
l_C68E:
	.byte	0x00
l_C68F:
	.byte	0x00
l_C690:
	.byte	0x00
11
2F
l_C696:
	.byte	0x40
33
42
l_C69C:
	.byte	0x40
3E
3E
40
00
00
3D
41
41
15
l_C6B3:
	.byte	0x00
l_C6B4:
	.byte	0x00
l_C6B5:
	.byte	0x00
l_C6B6:
	.byte	0x00
l_C6B7:
	.byte	0x00
l_C6B8:
	.byte	0x00
l_C6B9:
	.byte	0x00
l_C6BA:
	.byte	0x00
l_C6BB:
	.byte	0x00
l_C6BC:
	.byte	0x00
l_C6BD:
	.byte	0x00
l_C6BE:
	.byte	0x00
l_C6BF:
	.byte	0x00
l_C6C0:
	.byte	0x00
l_C6C1:
	.byte	0x00
l_C6C2:
	.byte	0x00
l_C6C3:
	.byte	0x00
l_C6C4:
	.byte	0x00
l_C6C5:
	.byte	0x00
l_C6C6:
	.byte	0x00
l_C6C7:
	.byte	0x00
l_C6C8:
	.byte	0x00
l_C6C9:
	.byte	0x00
l_C6CA:
	.byte	0x00
l_C6CB:
	.byte	0x00
l_C6CC:
	.byte	0x00
l_C6CD:
	.byte	0x00
l_C6CE:
	.byte	0x00
11
3A
3B
l_C6D7:
	.byte	0x00
3D
41
l_C6DD:
	.byte	0x4A
3D
34
33
00
00
40
33
FE
15
l_C6F0:
	.byte	0x00
l_C6F1:
	.byte	0x00
l_C6F2:
	.byte	0x00
l_C6F3:
	.byte	0x00
l_C6F4:
	.byte	0x00
l_C6F5:
	.byte	0x00
l_C6F6:
	.byte	0x00
l_C6F7:
	.byte	0x00
l_C6F8:
	.byte	0x00
l_C6F9:
	.byte	0x00
l_C6FA:
	.byte	0x00
l_C6FB:
	.byte	0x00
l_C6FC:
	.byte	0x00
l_C6FD:
	.byte	0x00
l_C6FE:
	.byte	0x00
l_C6FF:
	.byte	0x00
l_C700:
	.byte	0x00
l_C701:
	.byte	0x00
l_C702:
	.byte	0x00
l_C703:
	.byte	0x00
l_C704:
	.byte	0x00
l_C705:
	.byte	0x00
l_C706:
	.byte	0x00
l_C707:
	.byte	0x00
l_C708:
	.byte	0x00
l_C709:
	.byte	0x00
F5
l_c70d:
	GET_ADDRESS	0x04ad                     	| [$c70d: ldx $04ad]
	move.b	(a0),d1                         	| [...]
rti
	not.b	d0                               	| [$c711: eor #$ff]
	move.b	d0,d2                           	| [$c713: tay]
	move.b	#0x02,d1                        	| [$c714: ldx #$02]
	and.b	#0x01,d0                         	| [$c716: and #$01]
	beq	l_c71f                             	| [$c718: beq $c71f]
	move.b	#0x04,d1                        	| [$c71a: ldx #$04]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c71c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2986                     	| [$c71e: ldx $2986]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x2a                       	| [$c721: stx $2a]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	move.b	d2,d0                           	| [$c723: tya]
	lsr.b	#1,d0                            	| [$c724: lsr a]
	and.b	#0x03,d0                         	| [$c725: and #$03]
	move.b	d0,d1                           	| [$c727: tax]
	GET_ADDRESS	0xc73e                     	| [$c728: lda $c73e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x5a                       	| [$c72b: sta $5a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0x5c                     	| [$c72d: adc ($5c, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS_X	0x5e                     	| [$c72f: cmp ($5e, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xc742                     	| [$c731: lda $c742, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x5b                       	| [$c734: sta $5b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0x5d                     	| [$c736: adc ($5d, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x5f                       	| [$c738: sta $5f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_ebc3                            	| [$c73a: jsr $ebc3]
	rts                                    	| [$c73d: rts]
brk $50
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x01                     	| [$c742: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$c746: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c748:
	nop                                    	| [$c748: nop]
	move.b	#0x01,d0                        	| [$c749: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x61                       	| [$c74b: sta $61]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0x62                     	| [$c74d: adc ($62, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x2004                     	| [$c74f: eor $2004]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0xa9ea                     	| [$c752: eor $a9ea, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
brk $85
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x85                       	| [$c757: adc $85]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x85                       	| [$c759: ror $85]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x0320                     	| [$c75e: cpy $0320]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x61                       	| [$c762: dec $61]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$c765: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c767:
	GET_ADDRESS	0xa320                     	| [$c767: ldx $a320]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d2                           	| [$c76a: iny]
	GET_ADDRESS	0x20                       	| [$c76b: lda $20]
	move.b	(a0),d0                         	| [...]
	bne	l_c79b                             	| [$c76d: bne $c79b]
	move.b	#0x04,d0                        	| [$c76f: lda #$04]
	jbsr	l_ea5d                            	| [$c771: jsr $ea5d]
	GET_ADDRESS	0x4004                     	| [$c774: lda $4004]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$c777: and #$10]
	bne	l_c78d                             	| [$c779: bne $c78d]
	GET_ADDRESS	0x1b                       	| [$c77b: lda $1b]
	move.b	(a0),d0                         	| [...]
	beq	l_c78d                             	| [$c77d: beq $c78d]
	GET_ADDRESS	current_player_001f        	| [$c77f: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_pepper_002b         	| [$c781: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$c783: clc]
	illegal   <-- TODO: unsupported set decimal mode	| [$c784: sed]
	move.b	#0x01,d4	| [$c785: adc #$01]
	addx.b	d4,d0                        	| [$c785: adc #$01]
	PUSH_SR
	GET_ADDRESS	player_pepper_002b         	| [$c787: sta player_pepper_002b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	nop                                    	| [$c789: cld]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c78a: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1fa6                     	| [$c78c: ldx $1fa6]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x61                       	| [$c78f: inc $61, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$c791: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x65                       	| [$c793: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x85                       	| [$c797: cpx $85]
	cmp.b	(a0),d1                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	SBC_X	0xea                             	| [$c799: sbc $ea, x]
l_c79b:
	clr.b	d0                               	| [$c79b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x20                       	| [$c79d: sta $20]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1fa6                     	| [$c7a1: cpy $1fa6]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x61                       	| [$c7a4: ldy $61, x]
	move.b	(a0,d1.w),d2                    	| [...]
	subq.b	#1,d2                           	| [$c7a6: dey]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c7a7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c7a9: nop]
l_c7aa:
	cmp.b	#0x06,d2                         	| [$c7aa: cpy #$06]
	* bcc=>bcs
	bcs	l_c7b9                             	| [$c7ac: bcc $c7b9]
	move.b	d2,d0                           	| [$c7ae: tya]
	SET_XC_FLAGS                           	| [$c7af: sec]
	SBC_IMM	0x06                           	| [$c7b0: sbc #$06]
	move.b	d0,d2                           	| [$c7b2: tay]
	jra	l_c7aa                             	| [$c7b3: jmp $c7aa]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c7b6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c7b8: nop]
l_c7b9:
	PUSH_SR
	GET_ADDRESS	0x63                       	| [$c7b9: sty $63]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x61                       	| [$c7bb: ldy $61, x]
	move.b	(a0,d1.w),d2                    	| [...]
	subq.b	#1,d2                           	| [$c7bd: dey]
	cmp.b	#0x06,d2                         	| [$c7be: cpy #$06]
	* bcc=>bcs
	bcs	l_c7c7                             	| [$c7c0: bcc $c7c7]
	move.b	#0x05,d2                        	| [$c7c2: ldy #$05]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c7c4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x6484                     	| [$c7c6: ldx $6484]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x63                       	| [$c7c9: ldy $63]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0xcdef                     	| [$c7cb: lda $cdef, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181c                     	| [$c7ce: sta $181c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xcdf7                     	| [$c7d1: lda $cdf7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$c7d4: sta $181d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xff                       	| [$c7d7: lda $ff, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x1e8d                     	| [$c7d9: cmp $1e8d]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	CLR_XC_FLAGS                           	| [$c7dc: clc]
	GET_ADDRESS	0xce07                     	| [$c7dd: eor $ce07, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	PUSH_SR
	GET_ADDRESS	0x181f                     	| [$c7e0: sta $181f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x07,d1                        	| [$c7e3: ldx #$07]
	st.b	d0                                	| [$c7e5: lda #$ff]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c7e7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c7e9: nop]
l_c7ea:
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$c7ea: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	move.b	d0,d1                           	| [$c7ec: tax]
	bpl	l_c7ea                             	| [$c7ed: bpl $c7ea]
	move.b	#0x07,d1                        	| [$c7ef: ldx #$07]
	move.b	#0x01,d0                        	| [$c7f1: lda #$01]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c7f3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x9995                     	| [$c7f5: ldx $9995]
	move.b	(a0),d1                         	| [...]
	subq.b	#1,d1                           	| [$c7f8: dex]
	bpl	l_c7f6                             	| [$c7f9: bpl $c7f6]
	move.b	#0x07,d1                        	| [$c7fb: ldx #$07]
	move.b	#0x04,d0                        	| [$c7fd: lda #$04]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c7ff: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c801: nop]
l_c802:
	PUSH_SR
	GET_ADDRESS	0xa1                       	| [$c802: sta $a1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$c804: dex]
	bpl	l_c802                             	| [$c805: bpl $c802]
	move.b	#0x07,d1                        	| [$c807: ldx #$07]
	clr.b	d0                               	| [$c809: lda #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c80b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c80d: nop]
l_c80e:
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$c80e: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$c810: dex]
	bpl	l_c80e                             	| [$c811: bpl $c80e]
	PUSH_SR
	GET_ADDRESS	0x6f                       	| [$c813: sta $6f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x03,d0                        	| [$c815: lda #$03]
	PUSH_SR
	GET_ADDRESS	game_speed_00a8            	| [$c817: sta game_speed_00a8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$c819: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xc5                       	| [$c81b: sta $c5]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xc4                       	| [$c81d: sta $c4]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_da89                            	| [$c81f: jsr $da89]
	jbsr	l_c8c6                            	| [$c822: jsr $c8c6]
	GET_ADDRESS	0x21                       	| [$c825: lda $21]
	move.b	(a0),d0                         	| [...]
	beq	l_c834                             	| [$c827: beq $c834]
	GET_ADDRESS	current_player_001f        	| [$c829: lda current_player_001f]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x01,d0                         	| [$c82b: eor #$01]
	move.b	d0,d1                           	| [$c82d: tax]
	jbsr	l_c94e                            	| [$c82e: jsr $c94e]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c831: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c833: nop]
l_c834:
	GET_ADDRESS	current_player_001f        	| [$c834: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	jbsr	l_c94e                            	| [$c836: jsr $c94e]
	move.b	#0x02,d1                        	| [$c839: ldx #$02]
	jbsr	l_c94e                            	| [$c83b: jsr $c94e]
	jbsr	l_ca54                            	| [$c83e: jsr $ca54]
	jbsr	l_ca94                            	| [$c841: jsr $ca94]
	GET_ADDRESS	current_player_001f        	| [$c844: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	jbsr	l_cac4                            	| [$c846: jsr $cac4]
	jbsr	l_cb1e                            	| [$c849: jsr $cb1e]
	move.b	#0x3e,d0                        	| [$c84c: lda #$3e]
	PUSH_SR
	GET_ADDRESS	timer1_0013                	| [$c84e: sta timer1_0013]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1b                       	| [$c850: lda $1b]
	move.b	(a0),d0                         	| [...]
	beq	l_c858                             	| [$c852: beq $c858]
	rts                                    	| [$c854: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c855: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c857: nop]
l_c858:
	move.b	#0x01,d0                        	| [$c858: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$c85a: sta $68]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x02,d0                        	| [$c85c: lda #$02]
	PUSH_SR
	GET_ADDRESS	0x69                       	| [$c85e: sta $69]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x03,d0                        	| [$c860: lda #$03]
	PUSH_SR
	GET_ADDRESS	0x6a                       	| [$c862: sta $6a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x90,d0                        	| [$c864: lda #$90]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$c866: sta $1802]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x4d,d0                        	| [$c869: lda #$4d]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$c86b: sta $1803]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x60,d0                        	| [$c86e: lda #$60]
	PUSH_SR
	GET_ADDRESS	0x1806                     	| [$c870: sta $1806]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x3d,d0                        	| [$c873: lda #$3d]
	PUSH_SR
	GET_ADDRESS	0x1807                     	| [$c875: sta $1807]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x30,d0                        	| [$c878: lda #$30]
	PUSH_SR
	GET_ADDRESS	0x180a                     	| [$c87a: sta $180a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x3d,d0                        	| [$c87d: lda #$3d]
	PUSH_SR
	GET_ADDRESS	0x180b                     	| [$c87f: sta $180b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x80,d0                        	| [$c882: lda #$80]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$c884: sta $a9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xaa                       	| [$c886: sta $aa]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xab                       	| [$c888: sta $ab]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x40,d0                        	| [$c88a: lda #$40]
	PUSH_SR
	GET_ADDRESS	0xb0                       	| [$c88c: sta $b0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x18,d0                        	| [$c88e: lda #$18]
	PUSH_SR
	GET_ADDRESS	0x181e                     	| [$c890: sta $181e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x1d,d0                        	| [$c893: lda #$1d]
	PUSH_SR
	GET_ADDRESS	0x181f                     	| [$c895: sta $181f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	st.b	d0                                	| [$c898: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0xa1                       	| [$c89a: sta $a1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xa2                       	| [$c89c: sta $a2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xa3                       	| [$c89e: sta $a3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$c8a0: rts]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c8a1: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c8a3:
	nop                                    	| [$c8a3: nop]
	clr.b	d2                               	| [$c8a4: ldy #$00]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$c8a6: sty $03]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	move.b	#0x10,d0                        	| [$c8a8: lda #$10]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$c8aa: sta $04]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf6                       	| [$c8ac: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c8ae: nop]
l_c8af:
	clr.b	d0                               	| [$c8af: lda #$00]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c8b1: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c8b3: iny]
	bne	l_c8af                             	| [$c8b4: bne $c8af]
	GET_ADDRESS	0x04                       	| [$c8b6: inc $04]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x04                       	| [$c8b8: lda $04]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x18,d0                         	| [$c8ba: cmp #$18]
	bne	l_c8af                             	| [$c8bc: bne $c8af]
	move.b	#0x01,d1                        	| [$c8be: ldx #$01]
	jbsr	l_ca2c                            	| [$c8c0: jsr $ca2c]
	rts                                    	| [$c8c3: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c8c4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c8c6:
	nop                                    	| [$c8c6: nop]
	move.b	#0x35,d1                        	| [$c8c7: ldx #$35]
	move.b	#0xc9,d2                        	| [$c8c9: ldy #$c9]
	jbsr	l_c9bc                            	| [$c8cb: jsr $c9bc]
	move.b	#0x29,d1                        	| [$c8ce: ldx #$29]
	move.b	#0xc9,d2                        	| [$c8d0: ldy #$c9]
	jbsr	l_c9bc                            	| [$c8d2: jsr $c9bc]
	GET_ADDRESS	0x21                       	| [$c8d5: lda $21]
	move.b	(a0),d0                         	| [...]
	beq	l_c8e3                             	| [$c8d7: beq $c8e3]
	move.b	#0x40,d1                        	| [$c8d9: ldx #$40]
	move.b	#0xc9,d2                        	| [$c8db: ldy #$c9]
	jbsr	l_c9bc                            	| [$c8dd: jsr $c9bc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c8e0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c8e2: nop]
l_c8e3:
	rts                                    	| [$c8e3: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c8e4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c8e6:
	nop                                    	| [$c8e6: nop]
	GET_ADDRESS	0x21                       	| [$c8e7: lda $21]
	move.b	(a0),d0                         	| [...]
	beq	l_c928                             	| [$c8e9: beq $c928]
	GET_ADDRESS	timer1_0013                	| [$c8eb: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x3f,d0                         	| [$c8ed: and #$3f]
	bne	l_c90b                             	| [$c8ef: bne $c90b]
	GET_ADDRESS	current_player_001f        	| [$c8f1: lda current_player_001f]
	move.b	(a0),d0                         	| [...]
	bne	l_c900                             	| [$c8f3: bne $c900]
	move.b	#0x2f,d1                        	| [$c8f5: ldx #$2f]
	move.b	#0xc9,d2                        	| [$c8f7: ldy #$c9]
	jbsr	l_c9bc                            	| [$c8f9: jsr $c9bc]
	rts                                    	| [$c8fc: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c8fd: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c8ff: nop]
l_c900:
	move.b	#0x46,d1                        	| [$c900: ldx #$46]
	move.b	#0xc9,d2                        	| [$c902: ldy #$c9]
	jbsr	l_c9bc                            	| [$c904: jsr $c9bc]
	rts                                    	| [$c907: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c908: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c90a: nop]
l_c90b:
	cmp.b	#0x0f,d0                         	| [$c90b: cmp #$0f]
	bne	l_c928                             	| [$c90d: bne $c928]
	GET_ADDRESS	current_player_001f        	| [$c90f: lda current_player_001f]
	move.b	(a0),d0                         	| [...]
	bne	l_c91e                             	| [$c911: bne $c91e]
	move.b	#0x29,d1                        	| [$c913: ldx #$29]
	move.b	#0xc9,d2                        	| [$c915: ldy #$c9]
	jbsr	l_c9bc                            	| [$c917: jsr $c9bc]
	rts                                    	| [$c91a: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c91b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x40a2                     	| [$c91d: ldx $40a2]
	move.b	(a0),d1                         	| [...]
	move.b	#0xc9,d2                        	| [$c920: ldy #$c9]
	jbsr	l_c9bc                            	| [$c922: jsr $c9bc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c925: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2460                     	| [$c927: ldx $2460]
	move.b	(a0),d1                         	| [...]
	bpl	l_c952                             	| [$c92a: bpl $c952]
	GET_ADDRESS	0x24ff                     	| [$c92d: rol $24ff, x]
	move.b	(a0,d1.w),d4	| [...]
	roxl.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	bpl	l_c932                             	| [$c930: bpl $c932]
l_c932:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	and.b	#0x10,d0                         	| [$c935: and #$10]
	GET_ADDRESS	0x37                       	| [$c937: rol $37, x]
	move.b	(a0,d1.w),d4	| [...]
	roxl.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	eor.b	#0x41,d0                         	| [$c939: eor #$41]
	GET_ADDRESS_Y	0x3d                     	| [$c93b: and ($3d), y]
	and.b	(a0,d2.w),d0                     	| [...]
rti
	bpl	l_c96a                             	| [$c941: bpl $c96a]
	GET_ADDRESS	0x34ff                     	| [$c944: rol $34ff, x]
	move.b	(a0,d1.w),d4	| [...]
	roxl.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	bpl	l_c949                             	| [$c947: bpl $c949]
l_c949:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c94c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c94e:
	GET_ADDRESS	0x0386                     	| [$c94e: ldx $0386]
	move.b	(a0),d1                         	| [...]
	move.b	d1,d0                           	| [$c951: txa]
l_c952:
	asl.b	#1,d0                            	| [$c952: asl a]
	move.b	d0,d2                           	| [$c953: tay]
	CLR_XC_FLAGS                           	| [$c954: clc]
	GET_ADDRESS	0x03                       	| [$c955: adc $03]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$c957: tax]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c958: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c95a:
	nop                                    	| [$c95a: nop]
	GET_ADDRESS	0xc9a0                     	| [$c95b: lda $c9a0, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$c95e: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xc9a1                     	| [$c960: lda $c9a1, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$c963: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$c965: bit $05]
	tst.b	(a0)                             	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c967: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c969: nop]
l_c96a:
	GET_ADDRESS	0x2d                       	| [$c96a: lda $2d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$c96c: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$c96e: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$c970: inc $05]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x05                       	| [$c972: lda $05]
	move.b	(a0),d0                         	| [...]
l_c974:
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c974: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	#0xb5,d2                        	| [$c976: ldy #$b5]
	GET_ADDRESS	0x4a4a                     	| [$c978: and $4a4a]
	and.b	(a0),d0                          	| [...]
	lsr.b	#1,d0                            	| [$c97b: lsr a]
	lsr.b	#1,d0                            	| [$c97c: lsr a]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$c97d: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa505                     	| [$c97f: ror $a505]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x91                       	| [$c982: ora $91]
	or.b	(a0),d0                           	| [...]
	jra	(0x1088)                           	| [$c985: jmp ($1088)]
	SBC_X_IND	0xc8                         	| [$c988: sbc ($c8, x)]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c98a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03b1                     	| [$c98c: ldx $03b1]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x01,d0                         	| [$c98f: cmp #$01]
	bne	l_c99f                             	| [$c991: bne $c99f]
	clr.b	d0                               	| [$c993: lda #$00]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$c995: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$c997: tay]
	cmp.b	#0x05,d2                         	| [$c998: cpy #$05]
	bne	l_c98d                             	| [$c99a: bne $c98d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$c99c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4260                     	| [$c99e: ldx $4260]
	move.b	(a0),d1                         	| [...]
	bpl	l_c9f5                             	| [$c9a1: bpl $c9f5]
	bpl	l_c9ef                             	| [$c9a3: bpl $c9ef]
	bpl	l_c974                             	| [$c9a5: bpl $c974]
	GET_ADDRESS_Y	0x0d                     	| [$c9a7: ora ($0d), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x8d12                     	| [$c9aa: eor $8d12]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x9212                     	| [$c9ae: cmp $9212]
	cmp.b	(a0),d0                          	| [...]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xf6                       	| [$c9ba: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_c9bc:
	GET_ADDRESS	0x0386                     	| [$c9bc: ldx $0386]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x04,d2                         	| [$c9bf: cpy #$04]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xf6                       	| [$c9c1: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c9c3: nop]
l_c9c4:
	clr.b	d2                               	| [$c9c4: ldy #$00]
	PUSH_SR
	GET_ADDRESS	0x08                       	| [$c9c6: sty $08]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_Y	0x03                     	| [$c9c8: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$c9ca: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	d0,d2                           	| [$c9cc: tay]
	GET_ADDRESS_Y	0x03                     	| [$c9cd: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$c9cf: sta $06]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf6                       	| [$c9d1: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c9d3: nop]
l_c9d4:
	addq.b	#1,d2                           	| [$c9d4: iny]
	GET_ADDRESS_Y	0x03                     	| [$c9d5: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$c9d7: cmp #$ff]
	beq	l_ca25                             	| [$c9d9: beq $ca25]
	cmp.b	#0xfe,d0                         	| [$c9db: cmp #$fe]
	beq	l_c9fc                             	| [$c9dd: beq $c9fc]
	cmp.b	#0xfd,d0                         	| [$c9df: cmp #$fd]
	beq	l_ca0f                             	| [$c9e1: beq $ca0f]
	PUSH_SR
	GET_ADDRESS	0x07                       	| [$c9e3: sty $07]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$c9e5: iny]
	PUSH_SR                                	| [$c9e6: php]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$c9e7: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x08                       	| [$c9e9: inc $08]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x07                       	| [$c9eb: ldy $07]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0xc8                       	| [$c9ed: lda $c8]
	move.b	(a0),d0                         	| [...]
l_c9ef:
	beq	l_c9d4                             	| [$c9ef: beq $c9d4]
	move.b	#0x0a,d1                        	| [$c9f1: ldx #$0a]
	jbsr	l_ca2c                            	| [$c9f3: jsr $ca2c]
	jra	l_c9d4                             	| [$c9f6: jmp $c9d4]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$c9f9: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$c9fb: nop]
l_c9fc:
	addq.b	#1,d2                           	| [$c9fc: iny]
	CLR_XC_FLAGS                           	| [$c9fd: clc]
	move.b	d2,d0                           	| [$c9fe: tya]
	GET_ADDRESS	0x03                       	| [$c9ff: adc $03]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$ca01: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$ca03: lda $04]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d4	| [$ca05: adc #$00]
	addx.b	d4,d0                        	| [$ca05: adc #$00]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$ca07: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_c9c4                             	| [$ca09: jmp $c9c4]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$ca0c: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ca0e: nop]
l_ca0f:
	CLR_XC_FLAGS                           	| [$ca0f: clc]
	GET_ADDRESS	0x05                       	| [$ca10: lda $05]
	move.b	(a0),d0                         	| [...]
	move.b	#0x20,d4	| [$ca12: adc #$20]
	addx.b	d4,d0                        	| [$ca12: adc #$20]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$ca14: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$ca16: lda $06]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d4	| [$ca18: adc #$00]
	addx.b	d4,d0                        	| [$ca18: adc #$00]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$ca1a: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$ca1c: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x08                       	| [$ca1e: sta $08]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	beq	l_c9d4                             	| [$ca20: beq $c9d4]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$ca22: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ca24: nop]
l_ca25:
	clr.b	d0                               	| [$ca25: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xc8                       	| [$ca27: sta $c8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$ca29: rts]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$ca2a: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_ca2c:
	nop                                    	| [$ca2c: nop]
l_ca2d:
	GET_ADDRESS	0x4003                     	| [$ca2d: lda $4003]
	move.b	(a0),d0                         	| [...]
	bpl	l_ca2d                             	| [$ca30: bpl $ca2d]
	CLR_I_FLAG                             	| [$ca32: cli]
	nop                                    	| [$ca33: nop]
	nop                                    	| [$ca34: nop]
	nop                                    	| [$ca35: nop]
	nop                                    	| [$ca36: nop]
	SET_I_FLAG                             	| [$ca37: sei]
	jbsr	l_d045                            	| [$ca38: jsr $d045]
	GET_ADDRESS	0x1a                       	| [$ca3b: lda $1a]
	move.b	(a0),d0                         	| [...]
	beq	l_ca49                             	| [$ca3d: beq $ca49]
	move.b	d1,d0                           	| [$ca3f: txa]
	movem.w	d0,-(sp)                       	| [$ca40: pha]
	jbsr	l_d06e                            	| [$ca41: jsr $d06e]
	movem.w	(sp)+,d0                       	| [$ca44: pla]
	move.b	d0,d1                           	| [$ca45: tax]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$ca46: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ca48: nop]
l_ca49:
	GET_ADDRESS	0x4003                     	| [$ca49: lda $4003]
	move.b	(a0),d0                         	| [...]
	bmi	l_ca49                             	| [$ca4c: bmi $ca49]
	subq.b	#1,d1                           	| [$ca4e: dex]
	bne	l_ca2d                             	| [$ca4f: bne $ca2d]
	rts                                    	| [$ca51: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ca52: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_ca54:
	nop                                    	| [$ca54: nop]
	GET_ADDRESS	current_player_001f        	| [$ca55: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	SET_XC_FLAGS                           	| [$ca57: sec]
	move.b	#0x5c,d0                        	| [$ca58: lda #$5c]
	SBC_X	player_lives_0029                	| [$ca5a: sbc player_lives_0029, x]
	PUSH_SR
	GET_ADDRESS	0xf3                       	| [$ca5c: sta $f3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x18,d0                        	| [$ca5e: lda #$18]
	PUSH_SR
	GET_ADDRESS	0xf4                       	| [$ca60: sta $f4]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	player_lives_0029          	| [$ca62: lda player_lives_0029, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x09,d0                         	| [$ca64: cmp #$09]
	* bcs=>bcc
	bcc	l_ca7e                             	| [$ca66: bcs $ca7e]
	move.b	#0x10,d2                        	| [$ca68: ldy #$10]
	clr.b	d0                               	| [$ca6a: lda #$00]
l_ca6c:
	PUSH_SR
	GET_ADDRESS	0x184c                     	| [$ca6c: sta $184c, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$ca6f: dey]
	bne	l_ca6c                             	| [$ca70: bne $ca6c]
	GET_ADDRESS	player_lives_0029          	| [$ca72: ldy player_lives_0029, x]
	move.b	(a0,d1.w),d2                    	| [...]
	beq	l_ca7d                             	| [$ca74: beq $ca7d]
l_ca76:
	move.b	#0xc8,d0                        	| [$ca76: lda #$c8]
l_ca78:
	PUSH_SR
	GET_ADDRESS_Y	0xf3                     	| [$ca78: sta ($f3), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$ca7a: dey]
	bne	l_ca78                             	| [$ca7b: bne $ca78]
l_ca7d:
	rts                                    	| [$ca7d: rts]
l_ca7e:
	move.b	#0x09,d2                        	| [$ca7e: ldy #$09]
	move.b	#0x53,d0                        	| [$ca80: lda #$53]
	PUSH_SR
	GET_ADDRESS	0xf3                       	| [$ca82: sta $f3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_ca76                             	| [$ca84: jmp $ca76]
	GET_ADDRESS	0xea                       	| [$ca87: inc $ea, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
l_ca89:
	PUSH_SR
	GET_ADDRESS_Y	0xf3                     	| [$ca89: sta ($f3), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$ca8b: dey]
	bne	l_ca89                             	| [$ca8c: bne $ca89]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$ca8e: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ca90: nop]
	rts                                    	| [$ca91: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ca92: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_ca94:
	nop                                    	| [$ca94: nop]
	move.b	d2,d0                           	| [$ca95: tya]
	movem.w	d0,-(sp)                       	| [$ca96: pha]
	move.b	#0x51,d2                        	| [$ca97: ldy #$51]
	PUSH_SR
	GET_ADDRESS	0x103a                     	| [$ca99: sty $103a]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$ca9c: iny]
	PUSH_SR
	GET_ADDRESS	0x103b                     	| [$ca9d: sty $103b]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$caa0: iny]
	PUSH_SR
	GET_ADDRESS	0x103c                     	| [$caa1: sty $103c]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	current_player_001f        	| [$caa4: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_pepper_002b         	| [$caa6: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$caa8: lsr a]
	lsr.b	#1,d0                            	| [$caa9: lsr a]
	lsr.b	#1,d0                            	| [$caaa: lsr a]
	lsr.b	#1,d0                            	| [$caab: lsr a]
	move.b	d0,d2                           	| [$caac: tay]
	beq	l_cab3                             	| [$caad: beq $cab3]
	addq.b	#1,d2                           	| [$caaf: iny]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cab0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cab2: nop]
l_cab3:
	PUSH_SR
	GET_ADDRESS	0x105b                     	| [$cab3: sty $105b]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	player_pepper_002b         	| [$cab6: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$cab8: and #$0f]
	move.b	d0,d2                           	| [$caba: tay]
	addq.b	#1,d2                           	| [$cabb: iny]
	PUSH_SR
	GET_ADDRESS	0x105c                     	| [$cabc: sty $105c]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$cabf: pla]
	move.b	d0,d2                           	| [$cac0: tay]
	rts                                    	| [$cac1: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cac2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cac4:
	nop                                    	| [$cac4: nop]
	GET_ADDRESS	0x61                       	| [$cac5: lda $61, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$cac7: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xcb1a                     	| [$cac9: lda $cb1a]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$cacc: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xcb1b                     	| [$cace: lda $cb1b]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cad1: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x04,d0                        	| [$cad3: lda #$04]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cad5: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x80,d2                        	| [$cad7: ldy #$80]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cad9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cadb: nop]
l_cadc:
	GET_ADDRESS	0x03                       	| [$cadc: ldx $03]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x0a,d1                         	| [$cade: cpx #$0a]
	* bcc=>bcs
	bcs	l_caef                             	| [$cae0: bcc $caef]
	GET_ADDRESS	0x03                       	| [$cae2: lda $03]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x0a                           	| [$cae4: sbc #$0a]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$cae6: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0xc6,d0                        	| [$cae8: lda #$c6]
	bne	l_cb0b                             	| [$caea: bne $cb0b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$caec: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$caee: nop]
l_caef:
	cmp.b	#0x05,d1                         	| [$caef: cpx #$05]
	* bcc=>bcs
	bcs	l_cb00                             	| [$caf1: bcc $cb00]
	GET_ADDRESS	0x03                       	| [$caf3: lda $03]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x05                           	| [$caf5: sbc #$05]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$caf7: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0xc5,d0                        	| [$caf9: lda #$c5]
	bne	l_cb0b                             	| [$cafb: bne $cb0b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cafd: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$caff: nop]
l_cb00:
	cmp.b	#0x01,d1                         	| [$cb00: cpx #$01]
	* bcc=>bcs
	bcs	l_cb19                             	| [$cb02: bcc $cb19]
	GET_ADDRESS	0x03                       	| [$cb04: dec $03]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x85c4                     	| [$cb06: eor $85c4]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	SBC_X	0xea                             	| [$cb09: sbc $ea, x]
l_cb0b:
	PUSH_SR
	GET_ADDRESS_Y	0x04                     	| [$cb0b: sta ($04), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	bcs	l_cb47                             	| [$cb0d: bcs $cb47]
         ^^^^^^ TODO: warning: review stray bcs test
	SBC_IMM	0x20                           	| [$cb0f: sbc #$20]
	move.b	d0,d2                           	| [$cb11: tay]
	GET_ADDRESS	0x06                       	| [$cb12: dec $06]
	subq.b	#1,(a0)                         	| [...]
	bpl	l_cadc                             	| [$cb14: bpl $cadc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cb16: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cb18: nop]
l_cb19:
	rts                                    	| [$cb19: rts]
	GET_ADDRESS	0x8513                     	| [$cb1a: ora $8513, x]
	or.b	(a0,d1.w),d0                      	| [...]
	SBC_X	0x6e                             	| [$cb1d: sbc $6e, x]
	jbsr	l_cbe3                            	| [$cb1f: jsr $cbe3]
	GET_ADDRESS	0x63                       	| [$cb22: lda $63]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$cb24: asl a]
	move.b	d0,d2                           	| [$cb25: tay]
	GET_ADDRESS	0xcdd7                     	| [$cb26: lda $cdd7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$cb29: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xcdd8                     	| [$cb2b: lda $cdd8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$cb2e: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x10,d0                        	| [$cb30: lda #$10]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cb32: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$cb34: lda $04]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cb36: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x68,d1                        	| [$cb38: ldx #$68]
	clr.b	d2                               	| [$cb3a: ldy #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cb3c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03b1                     	| [$cb3e: ldx $03b1]
	move.b	(a0),d1                         	| [...]
	and.b	#0xf0,d0                         	| [$cb41: and #$f0]
	GET_ADDRESS_Y	0x05                     	| [$cb43: ora ($05), y]
	or.b	(a0,d2.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cb45: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
l_cb47:
	GET_ADDRESS	0xb105                     	| [$cb47: ror $b105]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	asl.b	#1,d0                            	| [$cb4b: asl a]
	asl.b	#1,d0                            	| [$cb4c: asl a]
	asl.b	#1,d0                            	| [$cb4d: asl a]
	asl.b	#1,d0                            	| [$cb4e: asl a]
	GET_ADDRESS_Y	0x05                     	| [$cb4f: ora ($05), y]
	or.b	(a0,d2.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cb51: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$cb53: inc $05]
	addq.b	#1,(a0)                         	| [...]
	nop                                    	| [$cb55: nop]
	bvs	l_cb5e                             	| [$cb57: bvs $cb5e]
	GET_ADDRESS	0x04                       	| [$cb59: inc $04]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cb5b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa5ca                     	| [$cb5d: ldx $a5ca]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_lives_0029          	| [$cb60: ora player_lives_0029]
	or.b	(a0),d0                           	| [...]
	bne	l_cb3f                             	| [$cb63: bne $cb3f]
	CLR_XC_FLAGS                           	| [$cb65: clc]
	GET_ADDRESS	0x05                       	| [$cb66: lda $05]
	move.b	(a0),d0                         	| [...]
	move.b	#0x7f,d4	| [$cb68: adc #$7f]
	addx.b	d4,d0                        	| [$cb68: adc #$7f]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cb6a: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$cb6c: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	#0x00,d4	| [$cb6e: adc #$00]
	addx.b	d4,d0                        	| [$cb6e: adc #$00]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cb70: sta $06]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$cb72: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03b1                     	| [$cb74: ldx $03b1]
	move.b	(a0),d1                         	| [...]
	and.b	#0xf0,d0                         	| [$cb77: and #$f0]
	GET_ADDRESS_Y	0x05                     	| [$cb79: ora ($05), y]
	or.b	(a0,d2.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cb7b: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	roxr.b	#1,d0                           	| [$cb7d: ror a]
	GET_ADDRESS	0x59                       	| [$cb7e: ora $59]
	or.b	(a0),d0                           	| [...]
	asl.b	#1,d0                            	| [$cb81: asl a]
	asl.b	#1,d0                            	| [$cb82: asl a]
	asl.b	#1,d0                            	| [$cb83: asl a]
	asl.b	#1,d0                            	| [$cb84: asl a]
	GET_ADDRESS_Y	0x05                     	| [$cb85: ora ($05), y]
	or.b	(a0,d2.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cb87: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$cb89: dec $05]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x03                       	| [$cb8b: inc $03]
	addq.b	#1,(a0)                         	| [...]
	bvs	l_cb94                             	| [$cb8d: bvs $cb94]
	GET_ADDRESS	0x04                       	| [$cb8f: inc $04]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cb91: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cb93: nop]
l_cb94:
	subq.b	#1,d1                           	| [$cb94: dex]
	GET_ADDRESS	0x05                       	| [$cb95: lda $05]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$cb97: and #$07]
	cmp.b	#0x07,d0                         	| [$cb99: cmp #$07]
	bne	l_cb75                             	| [$cb9b: bne $cb75]
	SET_XC_FLAGS                           	| [$cb9d: sec]
	GET_ADDRESS	0x05                       	| [$cb9e: lda $05]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x77                           	| [$cba0: sbc #$77]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cba2: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$cba4: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	SBC_IMM	0x00                           	| [$cba6: sbc #$00]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cba8: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	tst.b	d1                               	| [$cbaa: cpx #$00]
	bne	l_cb3f                             	| [$cbac: bne $cb3f]
	GET_ADDRESS	0x63                       	| [$cbae: lda $63]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$cbb0: and #$0f]
	PUSH_SR
	GET_ADDRESS	0xf3                       	| [$cbb2: sta $f3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x48,d1                        	| [$cbb4: ldx #$48]
	GET_ADDRESS	0x4003                     	| [$cbb6: cmp $4003]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	and.b	#0x40,d0                         	| [$cbb9: and #$40]
	beq	l_cbc4                             	| [$cbbb: beq $cbc4]
	GET_ADDRESS	current_player_001f        	| [$cbbd: lda current_player_001f]
	move.b	(a0),d0                         	| [...]
	bne	l_cbd4                             	| [$cbbf: bne $cbd4]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cbc1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cbc3: nop]
l_cbc4:
	GET_ADDRESS	0xf3                       	| [$cbc4: ldx $f3]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xcbd9                     	| [$cbc6: lda $cbd9, x]
	move.b	(a0,d1.w),d0                    	| [...]
l_cbc9:
	or.b	#0x10,d0                          	| [$cbc9: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x4004                     	| [$cbcb: sta $4004]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x60aa                     	| [$cbce: sty $60aa]
	move.b	d2,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$cbd1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cbd3: nop]
l_cbd4:
	GET_ADDRESS	0xf3                       	| [$cbd4: lda $f3]
	move.b	(a0),d0                         	| [...]
	jra	l_cbc9                             	| [$cbd6: jmp $cbc9]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x06                       	| [$cbdf: ora $06]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cbe1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cbe3:
	nop                                    	| [$cbe3: nop]
	clr.b	d2                               	| [$cbe4: ldy #$00]
	move.b	#0x04,d0                        	| [$cbe6: lda #$04]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$cbe8: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$cbea: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$cbec: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$cbee: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$cbf0: nop]
l_cbf1:
	GET_ADDRESS_Y	0x03                     	| [$cbf1: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$cbf3: and #$0f]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$cbf5: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cbf7: tay]
	bne	l_cbf1                             	| [$cbf8: bne $cbf1]
	GET_ADDRESS	0x04                       	| [$cbfa: inc $04]
	addq.b	#1,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$cbfc: dex]
	cmp.b	#0x08,d1                         	| [$cbfe: cpx #$08]
	bne	l_cbf1                             	| [$cc00: bne $cbf1]
	clr.b	d0                               	| [$cc02: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x4004                     	| [$cc04: sta $4004]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d1                        	| [$cc07: ldx #$01]
	jbsr	l_ca2c                            	| [$cc09: jsr $ca2c]
	rts                                    	| [$cc0c: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cc0d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc0f: nop]
	GET_ADDRESS	current_player_001f        	| [$cc10: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x61                       	| [$cc12: ldy $61, x]
	move.b	(a0,d1.w),d2                    	| [...]
	subq.b	#1,d2                           	| [$cc14: dey]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cc15: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc17: nop]
l_cc18:
	cmp.b	#0x06,d2                         	| [$cc18: cpy #$06]
	* bcc=>bcs
	bcs	l_cc27                             	| [$cc1a: bcc $cc27]
	move.b	d2,d0                           	| [$cc1c: tya]
	SET_XC_FLAGS                           	| [$cc1d: sec]
	SBC_IMM	0x06                           	| [$cc1e: sbc #$06]
	move.b	d0,d2                           	| [$cc20: tay]
	jra	l_cc18                             	| [$cc21: jmp $cc18]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cc24: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc26: nop]
l_cc27:
	move.b	d2,d0                           	| [$cc27: tya]
	asl.b	#1,d0                            	| [$cc28: asl a]
	move.b	d0,d2                           	| [$cc29: tay]
	GET_ADDRESS	0xcde3                     	| [$cc2a: lda $cde3, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$cc2d: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xcde4                     	| [$cc2f: lda $cde4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$cc32: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d2                               	| [$cc34: ldy #$00]
	clr.b	d1                               	| [$cc36: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cc38: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc3a: nop]
l_cc3b:
	GET_ADDRESS_Y	0x03                     	| [$cc3b: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$cc3d: cmp #$ff]
	beq	l_cc59                             	| [$cc3f: beq $cc59]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$cc41: sta $0202, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cc44: iny]
	addq.b	#1,d1                           	| [$cc45: inx]
	move.b	d1,d0                           	| [$cc46: txa]
	and.b	#0x03,d0                         	| [$cc47: and #$03]
	cmp.b	#0x03,d0                         	| [$cc49: cmp #$03]
	bne	l_cc3b                             	| [$cc4b: bne $cc3b]
	addq.b	#1,d1                           	| [$cc4d: inx]
	clr.b	d0                               	| [$cc4e: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$cc50: sta $0202, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jra	l_cc3b                             	| [$cc53: jmp $cc3b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cc56: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc58: nop]
l_cc59:
	clr.b	d0                               	| [$cc59: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$cc5b: sta $0202, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	addq.b	#1,d1                           	| [$cc5e: inx]
	bne	l_cc59                             	| [$cc5f: bne $cc59]
	rts                                    	| [$cc61: rts]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$cc62: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc64: nop]
	move.b	#0x02,d0                        	| [$cc65: lda #$02]
	PUSH_SR
	GET_ADDRESS	0x0b                       	| [$cc67: sta $0b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x02,d0                        	| [$cc69: lda #$02]
	PUSH_SR
	GET_ADDRESS	0x0c                       	| [$cc6b: sta $0c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$cc6d: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0d                       	| [$cc6f: sta $0d]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf7                       	| [$cc71: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc73: nop]
l_cc74:
	GET_ADDRESS	0x0d                       	| [$cc74: ldy $0d]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS_Y	0x0b                     	| [$cc76: lda ($0b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	beq	l_cc96                             	| [$cc78: beq $cc96]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$cc7a: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cc7c: iny]
	GET_ADDRESS_Y	0x0b                     	| [$cc7d: lda ($0b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$cc7f: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cc81: iny]
	GET_ADDRESS_Y	0x0b                     	| [$cc82: lda ($0b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cc84: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_cc99                            	| [$cc86: jsr $cc99]
	GET_ADDRESS	0x0d                       	| [$cc89: lda $0d]
	move.b	(a0),d0                         	| [...]
	                           	| [$cc8b: clc]
	add.b	#0x04,d0                        	| [$cc8c: adc #$04]
	PUSH_SR
	GET_ADDRESS	0x0d                       	| [$cc8e: sta $0d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_cc74                             	| [$cc90: jmp $cc74]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$cc93: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cc95: nop]
l_cc96:
	rts                                    	| [$cc96: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cc97: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cc99:
	nop                                    	| [$cc99: nop]
	clr.b	d0                               	| [$cc9a: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0e                       	| [$cc9c: sta $0e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	beq	l_ccb2                             	| [$cc9e: beq $ccb2]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cca0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cca2:
	nop                                    	| [$cca2: nop]
	clr.b	d0                               	| [$cca3: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0e                       	| [$cca5: sta $0e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$cca7: lda $05]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$cca9: and #$f8]
	bne	l_ccb2                             	| [$ccab: bne $ccb2]
	GET_ADDRESS	0x0e                       	| [$ccad: inc $0e]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ccaf: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ccb1: nop]
l_ccb2:
	move.b	d2,d0                           	| [$ccb2: tya]
	movem.w	d0,-(sp)                       	| [$ccb3: pha]
	GET_ADDRESS	0x03                       	| [$ccb4: lda $03]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$ccb6: and #$0f]
	asl.b	#1,d0                            	| [$ccb8: asl a]
	move.b	d0,d1                           	| [$ccb9: tax]
	GET_ADDRESS	0xcdb7                     	| [$ccba: lda $cdb7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x07                       	| [$ccbd: sta $07]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$ccbf: lda $05]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$ccc1: and #$07]
	asl.b	#1,d0                            	| [$ccc3: asl a]
	asl.b	#1,d0                            	| [$ccc4: asl a]
	CLR_XC_FLAGS                           	| [$ccc5: clc]
	GET_ADDRESS	0x07                       	| [$ccc6: adc $07]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x07                       	| [$ccc8: sta $07]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xcdb8                     	| [$ccca: lda $cdb8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x08                       	| [$cccd: sta $08]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$cccf: lda $04]
	move.b	(a0),d0                         	| [...]
	not.b	d0                               	| [$ccd1: eor #$ff]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$ccd3: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$ccd5: lsr $04]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$ccd7: lsr $04]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$ccd9: lsr $04]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	clr.b	d0                               	| [$ccdb: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$ccdd: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$ccdf: lda $05]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$cce1: and #$f8]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cce3: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$cce5: asl $05]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$cce7: rol $06]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$cce9: asl $05]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$cceb: rol $06]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$cced: clc]
	GET_ADDRESS	0x05                       	| [$ccee: lda $05]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x04                       	| [$ccf0: adc $04]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$ccf2: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$ccf4: lda $06]
	move.b	(a0),d0                         	| [...]
	move.b	#0x10,d4	| [$ccf6: adc #$10]
	addx.b	d4,d0                        	| [$ccf6: adc #$10]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$ccf8: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$ccfa: lda $03]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$ccfc: and #$0f]
	cmp.b	#0x0f,d0                         	| [$ccfe: cmp #$0f]
	beq	l_cd37                             	| [$cd00: beq $cd37]
	clr.b	d2                               	| [$cd02: ldy #$00]
	GET_ADDRESS	0x07                       	| [$cd04: lda $07]
	move.b	(a0),d0                         	| [...]
	move.b	d0,d1                           	| [$cd06: tax]
	jbsr	l_cd95                            	| [$cd07: jsr $cd95]
	GET_ADDRESS	0x0e                       	| [$cd0a: ldy $0e]
	move.b	(a0),d2                         	| [...]
	bne	l_cd1a                             	| [$cd0c: bne $cd1a]
	move.b	#0x20,d2                        	| [$cd0e: ldy #$20]
	                           	| [$cd10: clc]
	add.b	#0x1d,d0                        	| [$cd11: adc #$1d]
	move.b	d0,d1                           	| [$cd13: tax]
	jbsr	l_cd95                            	| [$cd14: jsr $cd95]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cd17: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cd19: nop]
l_cd1a:
	CLR_XC_FLAGS                           	| [$cd1a: clc]
	GET_ADDRESS	0x06                       	| [$cd1b: lda $06]
	move.b	(a0),d0                         	| [...]
	move.b	#0x04,d4	| [$cd1d: adc #$04]
	addx.b	d4,d0                        	| [$cd1d: adc #$04]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cd1f: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d2                               	| [$cd21: ldy #$00]
	GET_ADDRESS	0x08                       	| [$cd23: lda $08]
	move.b	(a0),d0                         	| [...]
	jbsr	l_cdaa                            	| [$cd25: jsr $cdaa]
	GET_ADDRESS	0x0e                       	| [$cd28: ldy $0e]
	move.b	(a0),d2                         	| [...]
	bne	l_cd90                             	| [$cd2a: bne $cd90]
	move.b	#0x20,d2                        	| [$cd2c: ldy #$20]
	jbsr	l_cdaa                            	| [$cd2e: jsr $cdaa]
	jra	l_cd90                             	| [$cd31: jmp $cd90]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cd34: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa538                     	| [$cd36: ldx $a538]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xe9                       	| [$cd39: ora $e9]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x85                     	| [$cd3b: and ($85, x)]
	and.b	(a0),d0                          	| [...]
	GET_ADDRESS	0xc9                       	| [$cd3d: ora $c9]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0xe9                       	| [$cd3f: asl $e9]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $85
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x48                       	| [$cd43: asl $48]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $a5
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd48: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d1                           	| [$cd4a: tax]
	addq.b	#1,d1                           	| [$cd4b: inx]
	addq.b	#1,d1                           	| [$cd4c: inx]
	move.b	d1,d0                           	| [$cd4d: txa]
	move.b	#0x05,d2                        	| [$cd4e: ldy #$05]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd50: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x07                       	| [$cd52: inc $07]
	addq.b	#1,(a0)                         	| [...]
	cmp.b	#0x07,d0                         	| [$cd54: cmp #$07]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0x21,d2                        	| [$cd56: ldy #$21]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd58: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cd5a: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd5b: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cd5d: tay]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd5e: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cd60: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd61: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$cd63: clc]
	GET_ADDRESS	0x06                       	| [$cd64: lda $06]
	move.b	(a0),d0                         	| [...]
	move.b	#0x04,d4	| [$cd66: adc #$04]
	addx.b	d4,d0                        	| [$cd66: adc #$04]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cd68: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x21,d2                        	| [$cd6a: ldy #$21]
	clr.b	d0                               	| [$cd6c: lda #$00]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd6e: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cd70: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd71: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cd73: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd74: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cd76: tay]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd77: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	SET_XC_FLAGS                           	| [$cd79: sec]
	GET_ADDRESS	0x06                       	| [$cd7a: lda $06]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x04                           	| [$cd7c: sbc #$04]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cd7e: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$cd80: clc]
	GET_ADDRESS	0x05                       	| [$cd81: lda $05]
	move.b	(a0),d0                         	| [...]
	move.b	#0x21,d4	| [$cd83: adc #$21]
	addx.b	d4,d0                        	| [$cd83: adc #$21]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$cd85: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$cd87: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	#0x00,d4	| [$cd89: adc #$00]
	addx.b	d4,d0                        	| [$cd89: adc #$00]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$cd8b: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$cd8d: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0xa868                     	| [$cd8f: ror $a868]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	rts                                    	| [$cd92: rts]
	PUSH_SR
	GET_ADDRESS	0xf7                       	| [$cd93: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cd95:
	GET_ADDRESS	0x0591                     	| [$cd95: ldx $0591]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d2                           	| [$cd98: iny]
	addq.b	#1,d1                           	| [$cd99: inx]
	move.b	d1,d0                           	| [$cd9a: txa]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cd9b: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cd9d: tay]
	addq.b	#1,d1                           	| [$cd9e: inx]
	move.b	d1,d0                           	| [$cd9f: txa]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cda0: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cda2: iny]
	addq.b	#1,d1                           	| [$cda3: inx]
	move.b	d1,d0                           	| [$cda4: txa]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cda5: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	0xf7                       	| [$cda8: sta $f7]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cdaa:
	nop                                    	| [$cdaa: nop]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cdab: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cdad: tay]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cdae: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cdb0: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cdb1: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$cdb3: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$cdb4: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $02
   ^^^^ TODO: unknown/unsupported instruction brk
rti
	cmp.b	#0x02,d2                         	| [$cdbf: cpy #$02]
brk $03
   ^^^^ TODO: unknown/unsupported instruction brk
rti
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	tst.b	d0                               	| [$cdd5: cmp #$00]
	PUSH_SR
	GET_ADDRESS_X	0xed                     	| [$cdd7: sta ($ed, x)]
    move.b	d0,(a0)                      	| [...]
	POP_SR
	GET_ADDRESS_Y	0xee                     	| [$cdd9: eor ($ee), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS	0x21ee                     	| [$cddb: lda $21ee, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_IMM	0xed                           	| [$cddf: sbc #$ed]
	GET_ADDRESS	0xec88                     	| [$cde6: cpx $ec88]
	cmp.b	(a0),d1                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_Y	0xec                     	| [$cde9: cmp ($ec), y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xed3e                     	| [$cdec: cpx $ed3e]
	cmp.b	(a0),d1                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_X	0x01                     	| [$cdef: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x01                     	| [$cdf1: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x01                     	| [$cdf3: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x01                     	| [$cdf5: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	SET_I_FLAG                             	| [$cdff: sei]
	SET_I_FLAG                             	| [$ce00: sei]
	SET_I_FLAG                             	| [$ce01: sei]
	SET_I_FLAG                             	| [$ce02: sei]
	movem.w	d0,-(sp)                       	| [$ce03: pha]
	SET_I_FLAG                             	| [$ce04: sei]
	SET_I_FLAG                             	| [$ce05: sei]
	SET_I_FLAG                             	| [$ce06: sei]
	GET_ADDRESS	0xcdbd                     	| [$ce07: lda $cdbd]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xadcd                     	| [$ce0a: sta $adcd]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xaaad                     	| [$ce0d: lda $aaad]
	move.b	(a0),d0                         	| [...]
	bpl	l_ce42                             	| [$ce10: bpl $ce42]
rti
	GET_ADDRESS	0x33                       	| [$ce14: and $33, x]
	and.b	(a0,d1.w),d0                     	| [...]
rti
brk $42
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x10eb                     	| [$ce1c: inc $10eb, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x4f4e                     	| [$ce1f: eor $4f4e]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	bvc	l_ce24                             	| [$ce22: bvc $ce24]
l_ce24:
	GET_ADDRESS	0x2e                       	| [$ce24: rol $2e]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xff27                     	| [$ce26: and $ff27]
	and.b	(a0),d0                          	| [...]
	GET_ADDRESS	0xcc11                     	| [$ce29: bit $cc11]
	tst.b	(a0)                             	| [...]
	GET_ADDRESS	0x190d                     	| [$ce2c: ora $190d, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x65fe                     	| [$ce31: cpy $65fe]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_Y	0x00                     	| [$ce34: ora ($00), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS_X	0x02                     	| [$ce36: ora ($02, x)]
	or.b	(a0),d0                           	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
rti
	GET_ADDRESS_X	0x42                     	| [$ce3c: eor ($42, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
l_ce42:
	PUSH_SR
	GET_ADDRESS_X	0x82                     	| [$ce42: sta ($82, x)]
    move.b	d0,(a0)                      	| [...]
	POP_SR
	GET_ADDRESS	0x1565                     	| [$ce45: inc $1565, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x11a5                     	| [$ce58: inc $11a5, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	cmp.b	#0xc1,d2                         	| [$ce5b: cpy #$c1]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
rti
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_X	0x42                     	| [$ce68: eor ($42, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x15a5                     	| [$ce6b: inc $15a5, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x11e5                     	| [$ce7e: inc $11e5, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00bd                     	| [$ce81: ldy $00bd, x]
	move.b	(a0,d1.w),d2                    	| [...]
brk $c0
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x00                     	| [$ce86: cmp ($00, x)]
	cmp.b	(a0),d0                          	| [...]
brk $b8
   ^^^^ TODO: unknown/unsupported instruction brk
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x05fe                     	| [$ce8a: lda $05fe, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x00bf                     	| [$ce8e: ldx $00bf, y]
	move.b	(a0,d2.w),d1                    	| [...]
brk $c2
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
tsx
	GET_ADDRESS	0x1225                     	| [$ce98: inc $1225, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0000                     	| [$ce9c: cmp $0000, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xe1,d1                         	| [$ce9f: cpx #$e1]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xb5                       	| [$cea3: ldy $b5, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x1196                     	| [$cea5: inc $1196, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x01                       	| [$cea8: asl $01]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $1a
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0xfe1d                     	| [$ceac: asl $fe1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	bpl	l_cec3                             	| [$ceaf: bpl $cec3]
	GET_ADDRESS	0x190c                     	| [$ceb1: cpy $190c]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	CLR_XC_FLAGS                           	| [$ceb4: clc]
	GET_ADDRESS	0x0200                     	| [$ceb6: ora $0200, x]
	or.b	(a0,d1.w),d0                      	| [...]
brk $51
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x1f18                     	| [$cec1: ora $1f18, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x0000                     	| [$cec4: ora $0000, x]
	or.b	(a0,d1.w),d0                      	| [...]
brk $10
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x001c                     	| [$cec9: ora $001c, y]
	or.b	(a0,d2.w),d0                      	| [...]
	jbsr	l_1c0f                            	| [$cecd: jsr $1c0f]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0xfe1d                     	| [$ced8: asl $fe1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cedb: tay]
	GET_ADDRESS	0xc8fe                     	| [$cede: ora $c8fe, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0xfe1f                     	| [$cee2: asl $fe1f, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	move.b	d0,d2                           	| [$cee5: tay]
	GET_ADDRESS	0x01                       	| [$cee6: asl $01, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS_X	0xfe                     	| [$cee8: ora ($fe, x)]
	or.b	(a0),d0                           	| [...]
	addq.b	#1,d2                           	| [$ceea: iny]
	GET_ADDRESS	0x01                       	| [$ceeb: asl $01, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS_X	0xff                     	| [$ceed: ora ($ff, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_Y	0x0c                     	| [$cef0: ora ($0c), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x001e                     	| [$cef3: ora $001e, x]
	or.b	(a0,d1.w),d0                      	| [...]
	bpl	l_cf0b                             	| [$cef6: bpl $cf0b]
	jbsr	l_000f                            	| [$cef8: jsr $000f]
	GET_ADDRESS	0x0b                       	| [$cefc: asl $0b, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0xc7fe                     	| [$cf01: ora $c7fe, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS_Y	0x02                     	| [$cf04: ora ($02), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x11d4                     	| [$cf06: inc $11d4, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xfe1d                     	| [$cf0a: asl $fe1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x1214                     	| [$cf10: inc $1214, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xfe1d                     	| [$cf14: asl $fe1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x1254                     	| [$cf1a: inc $1254, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xfe1d                     	| [$cf1e: asl $fe1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0xfe                       	| [$cf23: ora $fe]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$cf25: sty $12, x]
    move.b	d2,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0xfe1d                     	| [$cf28: asl $fe1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0xfe                       	| [$cf2d: asl $fe]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xff1d                     	| [$cf32: asl $ff1d, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
l_cf35:
	movem.w	(sp)+,d0                       	| [$cf35: pla]
	jra	l_b000                             	| [$cf36: jmp $b000]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cf39: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cf3b: nop]
l_cf3c:
	movem.w	d0,-(sp)                       	| [$cf3c: pha]
	GET_ADDRESS	0x4003                     	| [$cf3d: cmp $4003]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	and.b	#0x10,d0                         	| [$cf40: and #$10]
	beq	l_cf35                             	| [$cf42: beq $cf35]
	move.b	d1,d0                           	| [$cf44: txa]
	movem.w	d0,-(sp)                       	| [$cf45: pha]
	movem.w	d0,-(sp)                       	| [$cf47: pha]
	nop                                    	| [$cf48: nop]
	nop                                    	| [$cf49: cld]
	GET_ADDRESS	0x01                       	| [$cf4a: lda $01]
	move.b	(a0),d0                         	| [...]
	beq	l_cf8e                             	| [$cf4c: beq $cf8e]
	GET_ADDRESS	0x4004                     	| [$cf4e: lda $4004]
	move.b	(a0),d0                         	| [...]
	not.b	d0                               	| [$cf51: eor #$ff]
	and.b	#0xe0,d0                         	| [$cf53: and #$e0]
	PUSH_SR
	GET_ADDRESS	0x02                       	| [$cf55: sta $02]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	d1,d0                           	| [$cf57: txa]
	lsr.b	#1,d0                            	| [$cf58: lsr a]
	lsr.b	#1,d0                            	| [$cf59: lsr a]
	lsr.b	#1,d0                            	| [$cf5a: lsr a]
	lsr.b	#1,d0                            	| [$cf5b: lsr a]
	move.b	d0,d2                           	| [$cf5c: tay]
	jbsr	l_d034                            	| [$cf5d: jsr $d034]
	GET_ADDRESS	0x4002                     	| [$cf60: lda $4002]
	move.b	(a0),d0                         	| [...]
	and.b	#0xc0,d0                         	| [$cf63: and #$c0]
	beq	l_cf8e                             	| [$cf65: beq $cf8e]
	PUSH_SR
	GET_ADDRESS	0x26                       	| [$cf67: sta $26]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_d034                            	| [$cf69: jsr $d034]
	GET_ADDRESS	0x4002                     	| [$cf6c: lda $4002]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x26                       	| [$cf6f: and $26]
	and.b	(a0),d0                          	| [...]
	beq	l_cf8e                             	| [$cf71: beq $cf8e]
	jbsr	l_d034                            	| [$cf73: jsr $d034]
	GET_ADDRESS	0x4002                     	| [$cf76: lda $4002]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x26                       	| [$cf79: and $26]
	and.b	(a0),d0                          	| [...]
	beq	l_cf8e                             	| [$cf7b: beq $cf8e]
	jbsr	l_d034                            	| [$cf7d: jsr $d034]
	GET_ADDRESS	0x4002                     	| [$cf80: lda $4002]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x26                       	| [$cf83: and $26]
	and.b	(a0),d0                          	| [...]
	beq	l_cf8e                             	| [$cf85: beq $cf8e]
	move.b	#0x01,d0                        	| [$cf87: lda #$01]
	PUSH_SR
	GET_ADDRESS	0xf9                       	| [$cf89: sta $f9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf6                       	| [$cf8b: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x008d                     	| [$cf8d: ldx $008d]
	move.b	(a0),d1                         	| [...]
rti
	movem.w	(sp)+,d0                       	| [$cf91: pla]
	move.b	d0,d2                           	| [$cf92: tay]
	movem.w	(sp)+,d0                       	| [$cf93: pla]
	move.b	d0,d1                           	| [$cf94: tax]
	movem.w	(sp)+,d0                       	| [$cf95: pla]
rti
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$cf97: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_cf99:
	nop                                    	| [$cf99: nop]
	GET_ADDRESS	0x1e                       	| [$cf9a: inc $1e]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x8d1b                     	| [$cf9c: eor $8d1b]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
rti
	GET_ADDRESS	0x02                       	| [$cfa1: lda $02]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x80,d0                         	| [$cfa3: cmp #$80]
	beq	l_cfd8                             	| [$cfa5: beq $cfd8]
	clr.b	d1                               	| [$cfa7: ldx #$00]
	GET_ADDRESS	0x4003                     	| [$cfa9: lda $4003]
	move.b	(a0),d0                         	| [...]
	not.b	d0                               	| [$cfac: eor #$ff]
	and.b	#0x0f,d0                         	| [$cfae: and #$0f]
	GET_ADDRESS	0x26                       	| [$cfb0: asl $26]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	bcc	l_cfb9                             	| [$cfb2: bcc $cfb9]
	lsr.b	#1,d0                            	| [$cfb4: lsr a]
	lsr.b	#1,d0                            	| [$cfb5: lsr a]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cfb6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cfb8: nop]
l_cfb9:
	and.b	#0x03,d0                         	| [$cfb9: and #$03]
	beq	l_d003                             	| [$cfbb: beq $d003]
	addq.b	#1,d1                           	| [$cfbd: inx]
	cmp.b	#0x01,d0                         	| [$cfbe: cmp #$01]
	beq	l_d003                             	| [$cfc0: beq $d003]
	addq.b	#1,d1                           	| [$cfc2: inx]
	cmp.b	#0x02,d0                         	| [$cfc3: cmp #$02]
	beq	l_cff8                             	| [$cfc5: beq $cff8]
	addq.b	#1,d1                           	| [$cfc7: inx]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cfc8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cfca: nop]
	GET_ADDRESS	0x1e                       	| [$cfcb: lda $1e]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$cfcd: cmp #$02]
	* bcs=>bcc
	bcc	l_cff0                             	| [$cfcf: bcs $cff0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cfd1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$cfd3: nop]
l_cfd4:
	rts                                    	| [$cfd4: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cfd5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05a2                     	| [$cfd7: ldx $05a2]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x26                       	| [$cfda: lda $26]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x80,d0                         	| [$cfdc: cmp #$80]
	beq	l_d003                             	| [$cfde: beq $d003]
	addq.b	#1,d1                           	| [$cfe0: inx]
	cmp.b	#0x40,d0                         	| [$cfe1: cmp #$40]
	beq	l_d003                             	| [$cfe3: beq $d003]
	addq.b	#1,d1                           	| [$cfe5: inx]
	cmp.b	#0xc0,d0                         	| [$cfe6: cmp #$c0]
	beq	l_d003                             	| [$cfe8: beq $d003]
	jra	l_cfd4                             	| [$cfea: jmp $cfd4]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cfed: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1ec6                     	| [$cfef: ldx $1ec6]
	move.b	(a0),d1                         	| [...]
	jra	l_d003                             	| [$cff2: jmp $d003]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$cff5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x02a5                     	| [$cff7: ldx $02a5]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x60,d0                         	| [$cffa: cmp #$60]
	bne	l_d003                             	| [$cffc: bne $d003]
	move.b	#0x04,d1                        	| [$cffe: ldx #$04]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d000: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d002: nop]
l_d003:
	GET_ADDRESS	0x1d                       	| [$d003: lda $1d]
	move.b	(a0),d0                         	| [...]
	illegal   <-- TODO: unsupported set decimal mode	| [$d005: sed]
	CLR_XC_FLAGS                           	| [$d006: clc]
	GET_ADDRESS	0xd05c                     	| [$d007: adc $d05c, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	GET_ADDRESS	0xd064                     	| [$d00a: cmp $d064, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_d015                             	| [$d00d: bcc $d015]
	GET_ADDRESS	0xd064                     	| [$d00f: lda $d064, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d012: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d014: nop]
l_d015:
	PUSH_SR
	GET_ADDRESS	0x1d                       	| [$d015: sta $1d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d017: cld]
	GET_ADDRESS	0x1e                       	| [$d018: dec $1e]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x1b                       	| [$d01a: lda $1b]
	move.b	(a0),d0                         	| [...]
	bne	l_d02f                             	| [$d01c: bne $d02f]
	PUSH_SR
	GET_ADDRESS	0x4000                     	| [$d01e: sta $4000]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$d021: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1a                       	| [$d023: sta $1a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	st.b	d1                                	| [$d025: ldx #$ff]
	illegal   <-- TODO: unsupported transfer to stack register	| [$d027: txs]
	nop                                    	| [$d028: nop]
	jra	l_c038                             	| [$d029: jmp $c038]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$d02c: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d02e: nop]
l_d02f:
	jra	l_cfd4                             	| [$d02f: jmp $cfd4]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d032: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d034:
	nop                                    	| [$d034: nop]
	move.b	#0xe7,d1                        	| [$d035: ldx #$e7]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d037: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d039: nop]
l_d03a:
	GET_ADDRESS	0xff                       	| [$d03a: lda $ff]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xff                       	| [$d03c: lda $ff]
	move.b	(a0),d0                         	| [...]
	nop                                    	| [$d03e: nop]
	subq.b	#1,d1                           	| [$d03f: dex]
	bne	l_d03a                             	| [$d040: bne $d03a]
	rts                                    	| [$d042: rts]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$d043: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d045:
	nop                                    	| [$d045: nop]
	GET_ADDRESS	0xf9                       	| [$d046: lda $f9]
	move.b	(a0),d0                         	| [...]
	beq	l_d05b                             	| [$d048: beq $d05b]
	GET_ADDRESS	0x4002                     	| [$d04a: lda $4002]
	move.b	(a0),d0                         	| [...]
	and.b	#0xc0,d0                         	| [$d04d: and #$c0]
	bne	l_d05b                             	| [$d04f: bne $d05b]
	clr.b	d0                               	| [$d051: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xf9                       	| [$d053: sta $f9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_cf99                            	| [$d055: jsr $cf99]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$d058: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d05a: nop]
l_d05b:
	rts                                    	| [$d05b: rts]
	GET_ADDRESS_X	0x02                     	| [$d05c: ora ($02, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x06                     	| [$d05f: ora ($06, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR                                	| [$d061: php]
	GET_ADDRESS_X	0x09                     	| [$d063: ora ($09, x)]
	or.b	(a0),d0                           	| [...]
	or.b	#0x09,d0                          	| [$d065: ora #$09]
	or.b	#0x09,d0                          	| [$d067: ora #$09]
	or.b	#0x09,d0                          	| [$d069: ora #$09]
	or.b	#0x85,d0                          	| [$d06b: ora #$85]
	SBC_X	0xea                             	| [$d06d: sbc $ea, x]
	GET_ADDRESS	0x1a                       	| [$d06f: lda $1a]
	move.b	(a0),d0                         	| [...]
	beq	l_d091                             	| [$d071: beq $d091]
	GET_ADDRESS	0x1c                       	| [$d073: lda $1c]
	move.b	(a0),d0                         	| [...]
	bne	l_d080                             	| [$d075: bne $d080]
	jbsr	l_d111                            	| [$d077: jsr $d111]
	jbsr	l_d13f                            	| [$d07a: jsr $d13f]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d07d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d07f: nop]
l_d080:
	GET_ADDRESS	0x4002                     	| [$d080: lda $4002]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$d083: and #$01]
	beq	l_d095                             	| [$d085: beq $d095]
	GET_ADDRESS	0x4002                     	| [$d087: lda $4002]
	move.b	(a0),d0                         	| [...]
	and.b	#0x02,d0                         	| [$d08a: and #$02]
	beq	l_d0c0                             	| [$d08c: beq $d0c0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d08e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d090: nop]
l_d091:
	rts                                    	| [$d091: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d092: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d094: nop]
l_d095:
	jbsr	l_d16e                            	| [$d095: jsr $d16e]
	clr.b	d0                               	| [$d098: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x21                       	| [$d09a: sta $21]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x20                       	| [$d09c: sta $20]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x1c                       	| [$d09e: sta $1c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$d0a0: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1b                       	| [$d0a2: sta $1b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$d0a4: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1a                       	| [$d0a6: sta $1a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c8a3                            	| [$d0a8: jsr $c8a3]
	jbsr	l_cbe3                            	| [$d0ab: jsr $cbe3]
	move.b	#0xe8,d1                        	| [$d0ae: ldx #$e8]
	move.b	#0xc2,d2                        	| [$d0b0: ldy #$c2]
	jbsr	l_c9bc                            	| [$d0b2: jsr $c9bc]
	move.b	#0x1f,d1                        	| [$d0b5: ldx #$1f]
	jbsr	l_ca2c                            	| [$d0b7: jsr $ca2c]
	jra	l_d0fd                             	| [$d0ba: jmp $d0fd]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d0bd: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d0bf: nop]
l_d0c0:
	GET_ADDRESS	0x1d                       	| [$d0c0: lda $1d]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$d0c2: cmp #$02]
	* bcs=>bcc
	bcc	l_d0c9                             	| [$d0c4: bcs $d0c9]
	jra	l_d091                             	| [$d0c6: jmp $d091]
l_d0c9:
	jbsr	l_d16e                            	| [$d0c9: jsr $d16e]
	jbsr	l_d16e                            	| [$d0cc: jsr $d16e]
	move.b	#0x01,d0                        	| [$d0cf: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x21                       	| [$d0d1: sta $21]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$d0d3: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x20                       	| [$d0d5: sta $20]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x1c                       	| [$d0d7: sta $1c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$d0d9: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1b                       	| [$d0db: sta $1b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$d0dd: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1a                       	| [$d0df: sta $1a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_c8a3                            	| [$d0e1: jsr $c8a3]
	jbsr	l_cbe3                            	| [$d0e4: jsr $cbe3]
	move.b	#0xd2,d1                        	| [$d0e7: ldx #$d2]
	move.b	#0xc2,d2                        	| [$d0e9: ldy #$c2]
	jbsr	l_c9bc                            	| [$d0eb: jsr $c9bc]
	move.b	#0xe8,d1                        	| [$d0ee: ldx #$e8]
	move.b	#0xc2,d2                        	| [$d0f0: ldy #$c2]
	jbsr	l_c9bc                            	| [$d0f2: jsr $c9bc]
	move.b	#0x1f,d1                        	| [$d0f5: ldx #$1f]
	jbsr	l_ca2c                            	| [$d0f7: jsr $ca2c]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d0fa: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d0fc: nop]
l_d0fd:
	move.b	#0x05,d1                        	| [$d0fd: ldx #$05]
	clr.b	d0                               	| [$d0ff: lda #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d101: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d103: nop]
l_d104:
	PUSH_SR
	GET_ADDRESS	0x2d                       	| [$d104: sta $2d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	move.b	d0,d1                           	| [$d106: tax]
	bpl	l_d104                             	| [$d107: bpl $d104]
	st.b	d1                                	| [$d109: ldx #$ff]
	illegal   <-- TODO: unsupported transfer to stack register	| [$d10b: txs]
	jra	l_c068                             	| [$d10c: jmp $c068]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d10f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d111:
	nop                                    	| [$d111: nop]
	GET_ADDRESS	0x1367                     	| [$d112: lda $1367]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xd155                     	| [$d115: cmp $d155]
	cmp.b	(a0),d0                          	| [...]
	beq	l_d154                             	| [$d118: beq $d154]
	clr.b	d2                               	| [$d11a: ldy #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d11c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x55b9                     	| [$d11e: ldx $55b9]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS_Y	0x99                     	| [$d121: cmp ($99), y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0x11,d2                         	| [$d126: cpy #$11]
	bne	l_d11f                             	| [$d128: bne $d11f]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d12a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00a0                     	| [$d12c: ldx $00a0]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d12f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d131: nop]
l_d132:
	GET_ADDRESS	0xd166                     	| [$d132: lda $d166, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x13ab                     	| [$d135: sta $13ab, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$d138: iny]
	cmp.b	#0x06,d2                         	| [$d139: cpy #$06]
	bne	l_d132                             	| [$d13b: bne $d132]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d13d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d13f:
	GET_ADDRESS	0x1da5                     	| [$d13f: ldx $1da5]
	move.b	(a0),d1                         	| [...]
	lsr.b	#1,d0                            	| [$d142: lsr a]
	lsr.b	#1,d0                            	| [$d143: lsr a]
	lsr.b	#1,d0                            	| [$d144: lsr a]
	lsr.b	#1,d0                            	| [$d145: lsr a]
	move.b	d0,d1                           	| [$d146: tax]
	addq.b	#1,d1                           	| [$d147: inx]
	GET_ADDRESS	0x1d                       	| [$d148: lda $1d]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$d14a: and #$0f]
	move.b	d0,d1                           	| [$d14c: tax]
	addq.b	#1,d1                           	| [$d14d: inx]
	PUSH_SR
	GET_ADDRESS	0x13b3                     	| [$d14e: stx $13b3]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d151: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d153: nop]
l_d154:
	rts                                    	| [$d154: rts]
	GET_ADDRESS	0x0012                     	| [$d157: ora $0012, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x0b1e                     	| [$d15a: ora $0b1e, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x0c00                     	| [$d15e: asl $0c00, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x191e                     	| [$d162: asl $191e, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$d165: clc]
	GET_ADDRESS	0x0f1c                     	| [$d166: ora $0f1c]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x1e13                     	| [$d169: asl $1e13]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d16c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d16e:
	GET_ADDRESS	0x38f8                     	| [$d16e: ldx $38f8]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x1d                       	| [$d171: lda $1d]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x01                           	| [$d173: sbc #$01]
	PUSH_SR
	GET_ADDRESS	0x1d                       	| [$d175: sta $1d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	CLR_V_FLAG                             	| [$d177: clv]
	rts                                    	| [$d178: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d179: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d17b:
	nop                                    	| [$d17b: nop]
	GET_ADDRESS	0x6f                       	| [$d17c: lda $6f]
	move.b	(a0),d0                         	| [...]
	bpl	l_d184                             	| [$d17e: bpl $d184]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d180: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d182: nop]
	rts                                    	| [$d183: rts]
l_d184:
	GET_ADDRESS	0x1b                       	| [$d184: lda $1b]
	move.b	(a0),d0                         	| [...]
	bne	l_d18b                             	| [$d186: bne $d18b]
	jra	l_d236                             	| [$d188: jmp $d236]
l_d18b:
	GET_ADDRESS	current_player_001f        	| [$d18b: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	current_player_001f        	| [$d18d: ldy current_player_001f]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x4003                     	| [$d18f: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$d192: and #$40]
	bne	l_d198                             	| [$d194: bne $d198]
	clr.b	d2                               	| [$d196: ldy #$00]
l_d198:
	GET_ADDRESS	0x4000                     	| [$d198: lda $4000, y]
	move.b	(a0,d2.w),d0                    	| [...]
	not.b	d0                               	| [$d19b: eor #$ff]
	and.b	#0x10,d0                         	| [$d19d: and #$10]
	beq	l_d1e1                             	| [$d19f: beq $d1e1]
	GET_ADDRESS	0xb9                       	| [$d1a1: lda $b9]
	move.b	(a0),d0                         	| [...]
	bne	l_d1e8                             	| [$d1a3: bne $d1e8]
	GET_ADDRESS	player_pepper_002b         	| [$d1a5: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_d1d6                             	| [$d1a7: beq $d1d6]
	PUSH_SR
	GET_ADDRESS	0xb9                       	| [$d1a9: sta $b9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d1ab: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d1ad:
	GET_ADDRESS	0x00a9                     	| [$d1ad: ldx $00a9]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x6e                       	| [$d1b0: sta $6e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x05,d0                        	| [$d1b2: lda #$05]
	PUSH_SR
	GET_ADDRESS	0xa0                       	| [$d1b4: sta $a0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xba                       	| [$d1b6: adc $ba]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d1b8: tax]
	CLR_XC_FLAGS                           	| [$d1b9: clc]
	GET_ADDRESS	0xd24d                     	| [$d1ba: lda $d24d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x181e                     	| [$d1bd: adc $181e]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x181a                     	| [$d1c0: sta $181a]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$d1c3: clc]
	GET_ADDRESS	0xd24e                     	| [$d1c4: lda $d24e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x181f                     	| [$d1c7: adc $181f]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x181b                     	| [$d1ca: sta $181b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0d                       	| [$d1cd: lda $0d]
	move.b	(a0),d0                         	| [...]
	jbsr	l_ea5d                            	| [$d1cf: jsr $ea5d]
	rts                                    	| [$d1d2: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d1d3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0ea9                     	| [$d1d5: ldx $0ea9]
	move.b	(a0),d1                         	| [...]
	jbsr	l_ea5d                            	| [$d1d8: jsr $ea5d]
	jra	l_d1e8                             	| [$d1db: jmp $d1e8]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d1de: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d1e0: nop]
l_d1e1:
	clr.b	d0                               	| [$d1e1: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xb9                       	| [$d1e3: sta $b9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$d1e5: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x00b9                     	| [$d1e7: ror $00b9]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
rti
	not.b	d0                               	| [$d1eb: eor #$ff]
	and.b	#0x0f,d0                         	| [$d1ed: and #$0f]
	move.b	d0,d2                           	| [$d1ef: tay]
	GET_ADDRESS	0xd257                     	| [$d1f0: lda $d257, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$d1f3: tay]
	GET_ADDRESS	0xbb                       	| [$d1f4: cmp $bb]
	cmp.b	(a0),d0                          	| [...]
	beq	l_d201                             	| [$d1f6: beq $d201]
	asl.b	#1,d0                            	| [$d1f8: asl a]
	asl.b	#1,d0                            	| [$d1f9: asl a]
	asl.b	#1,d0                            	| [$d1fa: asl a]
	asl.b	#1,d0                            	| [$d1fb: asl a]
	PUSH_SR
	GET_ADDRESS	0xb0                       	| [$d1fc: sta $b0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$d1fe: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$d200: nop]
l_d201:
	PUSH_SR
	GET_ADDRESS	0xbb                       	| [$d201: sty $bb]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	move.b	d2,d0                           	| [$d203: tya]
	beq	l_d20b                             	| [$d204: beq $d20b]
	PUSH_SR
	GET_ADDRESS	0xba                       	| [$d206: sty $ba]
	move.b	d2,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d208: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d20a: nop]
l_d20b:
	GET_ADDRESS	0xbb                       	| [$d20b: lda $bb]
	move.b	(a0),d0                         	| [...]
	beq	l_d219                             	| [$d20d: beq $d219]
	move.b	#0x07,d1                        	| [$d20f: ldx #$07]
	jbsr	l_d3c3                            	| [$d211: jsr $d3c3]
	bne	l_d232                             	| [$d214: bne $d232]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d216: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d218: nop]
l_d219:
	move.b	#0x07,d1                        	| [$d219: ldx #$07]
	jbsr	l_d269                            	| [$d21b: jsr $d269]
	GET_ADDRESS	0xb0                       	| [$d21e: lda $b0]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$d220: and #$f0]
	beq	l_d232                             	| [$d222: beq $d232]
	move.b	#0x06,d2                        	| [$d224: ldy #$06]
	cmp.b	#0x60,d0                         	| [$d226: cmp #$60]
	* bcs=>bcc
	bcc	l_d22b                             	| [$d228: bcs $d22b]
	addq.b	#1,d2                           	| [$d22a: iny]
l_d22b:
	move.b	d2,d0                           	| [$d22b: tya]
	jbsr	l_ea5d                            	| [$d22c: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d22f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d231: nop]
l_d232:
	rts                                    	| [$d232: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d233: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d235: nop]
l_d236:
	move.b	#0x07,d1                        	| [$d236: ldx #$07]
	jbsr	l_d3c3                            	| [$d238: jsr $d3c3]
	beq	l_d247                             	| [$d23b: beq $d247]
	move.b	#0x47,d0                        	| [$d23d: lda #$47]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$d23f: sta $181d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xc6                       	| [$d242: inc $c6]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d244: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d246: nop]
l_d247:
	move.b	#0x07,d1                        	| [$d247: ldx #$07]
	jbsr	l_d269                            	| [$d249: jsr $d269]
	rts                                    	| [$d24c: rts]
brk $10
   ^^^^ TODO: unknown/unsupported instruction brk
	beq	l_d251                             	| [$d24f: beq $d251]
l_d251:
	bpl	l_d253                             	| [$d251: bpl $d253]
l_d253:
brk $f0
   ^^^^ TODO: unknown/unsupported instruction brk
brk $10
   ^^^^ TODO: unknown/unsupported instruction brk
brk $02
   ^^^^ TODO: unknown/unsupported instruction brk
brk $06
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $08
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $85
   ^^^^ TODO: unknown/unsupported instruction brk
	SBC_X	0xea                             	| [$d268: sbc $ea, x]
	GET_ADDRESS	0x68                       	| [$d26a: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_d26f                             	| [$d26c: bpl $d26f]
	rts                                    	| [$d26e: rts]
l_d26f:
	GET_ADDRESS	timer1_0013                	| [$d26f: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x91                       	| [$d271: and $91, x]
	and.b	(a0,d1.w),d0                     	| [...]
	bne	l_d276                             	| [$d273: bne $d276]
	rts                                    	| [$d275: rts]
l_d276:
	GET_ADDRESS	0x99                       	| [$d276: dec $99, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	beq	l_d27b                             	| [$d278: beq $d27b]
	rts                                    	| [$d27a: rts]
l_d27b:
	GET_ADDRESS	0xa1                       	| [$d27b: lda $a1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x99                       	| [$d27d: sta $99, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0xa9                       	| [$d27f: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$d281: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$d283: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa9                       	| [$d285: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$d287: lsr a]
	lsr.b	#1,d0                            	| [$d288: lsr a]
	lsr.b	#1,d0                            	| [$d289: lsr a]
	beq	l_d297                             	| [$d28a: beq $d297]
	CLR_XC_FLAGS                           	| [$d28c: clc]
	GET_ADDRESS	0x03                       	| [$d28d: adc $03]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$d28f: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_d2ac                             	| [$d291: jmp $d2ac]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d294: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d296: nop]
l_d297:
	cmp.b	#0x07,d1                         	| [$d297: cpx #$07]
	bne	l_d2ac                             	| [$d299: bne $d2ac]
	clr.b	d2                               	| [$d29b: ldy #$00]
	GET_ADDRESS	0xba                       	| [$d29d: lda $ba]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x06,d0                         	| [$d29f: cmp #$06]
	bne	l_d2a7                             	| [$d2a1: bne $d2a7]
	addq.b	#1,d2                           	| [$d2a3: iny]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d2a4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d2a6: nop]
l_d2a7:
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$d2a7: sty $03]
	move.b	d2,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d2a9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d2ab: nop]
l_d2ac:
	move.b	d1,d0                           	| [$d2ac: txa]
	asl.b	#1,d0                            	| [$d2ad: asl a]
	asl.b	#1,d0                            	| [$d2ae: asl a]
	PUSH_SR
	GET_ADDRESS	0x09                       	| [$d2af: sta $09]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x68                       	| [$d2b1: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x07,d0                         	| [$d2b3: and #$07]
	asl.b	#1,d0                            	| [$d2b5: asl a]
	move.b	d0,d2                           	| [$d2b6: tay]
	GET_ADDRESS	0xd34b                     	| [$d2b7: lda $d34b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$d2ba: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd34c                     	| [$d2bc: lda $d34c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$d2bf: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$d2c1: ldy $03]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS_Y	0x05                     	| [$d2c3: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$d2c5: cmp #$ff]
	beq	l_d314                             	| [$d2c7: beq $d314]
	GET_ADDRESS	0x09                       	| [$d2c9: ldy $09]
	move.b	(a0),d2                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$d2cb: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0xa9                       	| [$d2ce: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$d2d0: lsr a]
	lsr.b	#1,d0                            	| [$d2d1: lsr a]
	lsr.b	#1,d0                            	| [$d2d2: lsr a]
	lsr.b	#1,d0                            	| [$d2d3: lsr a]
	and.b	#0x02,d0                         	| [$d2d4: and #$02]
	or.b	#0x01,d0                          	| [$d2d6: ora #$01]
	PUSH_SR
	GET_ADDRESS	0x1800                     	| [$d2d8: sta $1800, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0xa9                       	| [$d2db: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$d2dd: and #$f0]
	beq	l_d34a                             	| [$d2df: beq $d34a]
	GET_ADDRESS	0xa9                       	| [$d2e1: inc $a9, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xa9                       	| [$d2e3: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf3,d0                         	| [$d2e5: and #$f3]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$d2e7: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x08                       	| [$d2e9: stx $08]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x09                       	| [$d2eb: ldy $09]
	move.b	(a0),d2                         	| [...]
	lsr.b	#1,d0                            	| [$d2ed: lsr a]
	lsr.b	#1,d0                            	| [$d2ee: lsr a]
	lsr.b	#1,d0                            	| [$d2ef: lsr a]
	lsr.b	#1,d0                            	| [$d2f0: lsr a]
	move.b	d0,d1                           	| [$d2f1: tax]
	CLR_XC_FLAGS                           	| [$d2f2: clc]
	GET_ADDRESS	0xd3b7                     	| [$d2f3: lda $d3b7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x1802                     	| [$d2f6: adc $1802, y]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$d2f9: sta $1802, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$d2fc: clc]
	GET_ADDRESS	0xd3b8                     	| [$d2fd: lda $d3b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x1803                     	| [$d300: adc $1803, y]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	cmp.b	#0x1d,d0                         	| [$d303: cmp #$1d]
	* bcs=>bcc
	bcc	l_d309                             	| [$d305: bcs $d309]
	move.b	#0x1d,d0                        	| [$d307: lda #$1d]
l_d309:
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$d309: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x08                       	| [$d30c: ror $08]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	jra	l_d34a                             	| [$d30e: jmp $d34a]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d311: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d313: nop]
l_d314:
	GET_ADDRESS	0x09                       	| [$d314: ldy $09]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0xa9                       	| [$d316: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_d327                             	| [$d318: bmi $d327]
	GET_ADDRESS	0x1803                     	| [$d31a: lda $1803, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x0b                       	| [$d31d: sta $0b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4c0b                     	| [$d31f: ror $4c0b]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS_Y	0xd3                     	| [$d322: and ($d3), y]
	and.b	(a0,d2.w),d0                     	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d324: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03b9                     	| [$d326: ldx $03b9]
	move.b	(a0),d1                         	| [...]
	CLR_XC_FLAGS                           	| [$d329: clc]
	PUSH_SR
	GET_ADDRESS	0x0b                       	| [$d32a: sta $0b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	roxr.b	#1,d0                           	| [$d32c: ror a]
	GET_ADDRESS_X	0xf5                     	| [$d32e: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$d330: nop]
	GET_ADDRESS	0x0b                       	| [$d331: lda $0b]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$d333: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$d336: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$d338: nop]
	GET_ADDRESS	0xa9                       	| [$d339: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$d33b: and #$f0]
	beq	l_d34a                             	| [$d33d: beq $d34a]
	GET_ADDRESS	0xa9                       	| [$d33f: inc $a9, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xa9                       	| [$d341: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf3,d0                         	| [$d343: and #$f3]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$d345: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$d347: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$d349: nop]
l_d34a:
	rts                                    	| [$d34a: rts]
	GET_ADDRESS	0xb1d3                     	| [$d353: ldx $b1d3]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xd3                       	| [$d357: ldy $d3, x]
	move.b	(a0,d1.w),d2                    	| [...]
	movem.w	d0,-(sp)                       	| [$d35c: pha]
	movem.w	d0,-(sp)                       	| [$d35e: pha]
rti
	GET_ADDRESS_X	0x42                     	| [$d360: eor ($42, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x40                     	| [$d362: eor ($40, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x42                     	| [$d364: eor ($42, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x45                     	| [$d366: eor ($45, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0xff                       	| [$d369: lsr $ff]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	CLR_I_FLAG                             	| [$d373: cli]
	GET_ADDRESS	0x5958                     	| [$d374: eor $5958, y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	CLR_I_FLAG                             	| [$d377: cli]
	GET_ADDRESS	0x5958                     	| [$d378: eor $5958, y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS	0x5aff                     	| [$d37d: eor $5aff, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x64                       	| [$d388: adc $64]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x64                       	| [$d38a: adc $64]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x64                       	| [$d38c: adc $64]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x68                       	| [$d38e: adc $68]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	#0xff,d4	| [$d391: adc #$ff]
	addx.b	d4,d0                        	| [$d391: adc #$ff]
	GET_ADDRESS	0xff                       	| [$d393: ror $ff]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	bvs	l_d40e                             	| [$d39b: bvs $d40e]
	bvs	l_d410                             	| [$d39d: bvs $d410]
	bvs	l_d412                             	| [$d39f: bvs $d412]
	bvs	l_d414                             	| [$d3a1: bvs $d414]
	GET_ADDRESS	0xff                       	| [$d3a5: adc $ff, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d3ab: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xf585                     	| [$d3ad: ldx $f585]
	move.b	(a0),d1                         	| [...]
	nop                                    	| [$d3b0: nop]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d3b1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d3b3: nop]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d3b4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0000                     	| [$d3b6: ldx $0000]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x0200                     	| [$d3b9: inc $0200, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	SBC_X	0x0300                           	| [$d3be: sbc $0300, x]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d3c1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d3c3:
	nop                                    	| [$d3c3: nop]
	GET_ADDRESS	0xa9                       	| [$d3c4: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$d3c6: lsr a]
	lsr.b	#1,d0                            	| [$d3c7: lsr a]
	lsr.b	#1,d0                            	| [$d3c8: lsr a]
	lsr.b	#1,d0                            	| [$d3c9: lsr a]
	move.b	d0,d2                           	| [$d3ca: tay]
	GET_ADDRESS	0xd3e8                     	| [$d3cb: lda $d3e8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$d3ce: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd3e9                     	| [$d3d0: lda $d3e9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$d3d3: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x0a,d1                        	| [$d3d5: ldx #$0a]
	asl.b	#1,d0                            	| [$d3d7: asl a]
	move.b	d0,d2                           	| [$d3d8: tay]
	GET_ADDRESS	0x1802                     	| [$d3d9: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$d3dc: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$d3de: lda $03, x]
	move.b	(a0,d1.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$d3e0: clc]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$d3e1: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x67                       	| [$d3e3: inc $67]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x0005                     	| [$d3e5: ldy $0005]
	move.b	(a0),d2                         	| [...]
	SBC_X	0xd3                             	| [$d3e8: sbc $d3, x]
	SBC_X	0x2ed3                           	| [$d3ea: sbc $2ed3, x]
	GET_ADDRESS	0x85d4                     	| [$d3f0: lda $85d4]
	move.b	(a0),d0                         	| [...]
	SBC_X	0x6e                             	| [$d3f3: sbc $6e, x]
	clr.b	d0                               	| [$d3f5: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x67                       	| [$d3f7: sta $67]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$d3f9: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d3fa: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03a5                     	| [$d3fc: ldx $03a5]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x16,d0                         	| [$d3ff: cmp #$16]
	* bcs=>bcc
	bcc	l_d40d                             	| [$d401: bcs $d40d]
	move.b	#0x17,d0                        	| [$d403: lda #$17]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$d405: sta $1802, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_d42a                             	| [$d408: bne $d42a]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d40a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d40c: nop]
l_d40d:
	jbsr	l_d500                            	| [$d40d: jsr $d500]
l_d410:
	bne	l_d42a                             	| [$d410: bne $d42a]
l_d412:
	jbsr	l_d588                            	| [$d412: jsr $d588]
	bne	l_d42a                             	| [$d415: bne $d42a]
	GET_ADDRESS	0x04                       	| [$d417: lda $04]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$d419: sec]
	SBC_IMM	0x01                           	| [$d41a: sbc #$01]
	and.b	#0xf0,d0                         	| [$d41c: and #$f0]
	or.b	#0x0d,d0                          	| [$d41e: ora #$0d]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$d420: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	clr.b	d0                               	| [$d423: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x67                       	| [$d425: sta $67]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d427: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d429: nop]
l_d42a:
	rts                                    	| [$d42a: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d42b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d42d: nop]
	GET_ADDRESS	0x03                       	| [$d42e: lda $03]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xd8,d0                         	| [$d430: cmp #$d8]
	* bcc=>bcs
	bcs	l_d43e                             	| [$d432: bcc $d43e]
	move.b	#0xd8,d0                        	| [$d434: lda #$d8]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$d436: sta $1802, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_d45b                             	| [$d439: bne $d45b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d43b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d43d: nop]
l_d43e:
	jbsr	l_d500                            	| [$d43e: jsr $d500]
	bne	l_d45b                             	| [$d441: bne $d45b]
	jbsr	l_d5ab                            	| [$d443: jsr $d5ab]
	bne	l_d45b                             	| [$d446: bne $d45b]
	GET_ADDRESS	0x04                       	| [$d448: lda $04]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$d44a: sec]
	SBC_IMM	0x01                           	| [$d44b: sbc #$01]
	and.b	#0xf0,d0                         	| [$d44d: and #$f0]
	or.b	#0x0d,d0                          	| [$d44f: ora #$0d]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$d451: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	clr.b	d0                               	| [$d454: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x67                       	| [$d456: sta $67]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d458: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d45a: nop]
l_d45b:
	rts                                    	| [$d45b: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d45c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d45e: nop]
	GET_ADDRESS	0x04                       	| [$d45f: lda $04]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x1d,d0                         	| [$d461: cmp #$1d]
	* bcs=>bcc
	bcc	l_d46f                             	| [$d463: bcs $d46f]
	move.b	#0x1d,d0                        	| [$d465: lda #$1d]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$d467: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_d4a0                             	| [$d46a: bne $d4a0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d46c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d46e: nop]
l_d46f:
	jbsr	l_d523                            	| [$d46f: jsr $d523]
	bne	l_d4a0                             	| [$d472: bne $d4a0]
	jbsr	l_d61e                            	| [$d474: jsr $d61e]
	bne	l_d4a0                             	| [$d477: bne $d4a0]
	move.b	d1,d0                           	| [$d479: txa]
	movem.w	d0,-(sp)                       	| [$d47a: pha]
	GET_ADDRESS	0x08                       	| [$d47b: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$d47d: and #$f8]
	movem.w	d0,-(sp)                       	| [$d47f: pha]
	GET_ADDRESS	0x4003                     	| [$d480: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$d483: and #$40]
	beq	l_d4a4                             	| [$d485: beq $d4a4]
	movem.w	(sp)+,d0                       	| [$d487: pla]
	GET_ADDRESS	current_player_001f        	| [$d488: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d48a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d48c: nop]
l_d48d:
	CLR_XC_FLAGS                           	| [$d48d: clc]
	GET_ADDRESS	0xd4fa                     	| [$d48e: adc $d4fa, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$d491: sta $1802, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$d494: pla]
	move.b	d0,d1                           	| [$d495: tax]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d496: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d498: nop]
	clr.b	d0                               	| [$d499: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x67                       	| [$d49b: sta $67]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d49d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d49f: nop]
l_d4a0:
	rts                                    	| [$d4a0: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4a1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4a3: nop]
l_d4a4:
	movem.w	(sp)+,d0                       	| [$d4a4: pla]
	clr.b	d1                               	| [$d4a5: ldx #$00]
	jra	l_d48d                             	| [$d4a7: jmp $d48d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4aa: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4ac: nop]
	GET_ADDRESS	0x04                       	| [$d4ad: lda $04]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xdd,d0                         	| [$d4af: cmp #$dd]
	* bcc=>bcs
	bcs	l_d4bd                             	| [$d4b1: bcc $d4bd]
	move.b	#0xdd,d0                        	| [$d4b3: lda #$dd]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$d4b5: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_d4f0                             	| [$d4b8: bne $d4f0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4ba: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4bc: nop]
l_d4bd:
	GET_ADDRESS	0x03                       	| [$d4bd: lda $03]
	move.b	(a0),d0                         	| [...]
	jbsr	l_d523                            	| [$d4bf: jsr $d523]
	bne	l_d4f0                             	| [$d4c2: bne $d4f0]
	jbsr	l_d641                            	| [$d4c4: jsr $d641]
	bne	l_d4f0                             	| [$d4c7: bne $d4f0]
	move.b	d1,d0                           	| [$d4c9: txa]
	movem.w	d0,-(sp)                       	| [$d4ca: pha]
	GET_ADDRESS	0x08                       	| [$d4cb: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$d4cd: and #$f8]
	movem.w	d0,-(sp)                       	| [$d4cf: pha]
	GET_ADDRESS	0x4003                     	| [$d4d0: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$d4d3: and #$40]
	beq	l_d4f4                             	| [$d4d5: beq $d4f4]
	movem.w	(sp)+,d0                       	| [$d4d7: pla]
	GET_ADDRESS	current_player_001f        	| [$d4d8: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4da: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4dc: nop]
l_d4dd:
	CLR_XC_FLAGS                           	| [$d4dd: clc]
	GET_ADDRESS	0xd4fa                     	| [$d4de: adc $d4fa, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$d4e1: sta $1802, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$d4e4: pla]
	move.b	d0,d1                           	| [$d4e5: tax]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4e6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4e8: nop]
	clr.b	d0                               	| [$d4e9: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x67                       	| [$d4eb: sta $67]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d4ed: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4ef: nop]
l_d4f0:
	rts                                    	| [$d4f0: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4f1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d4f3: nop]
l_d4f4:
	movem.w	(sp)+,d0                       	| [$d4f4: pla]
	clr.b	d1                               	| [$d4f5: ldx #$00]
	jra	l_d4dd                             	| [$d4f7: jmp $d4dd]
	GET_ADDRESS_X	0xfe                     	| [$d4fb: ora ($fe, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d4fe: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d500:
	nop                                    	| [$d500: nop]
	GET_ADDRESS	0x04                       	| [$d501: lda $04]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$d503: and #$0f]
	beq	l_d520                             	| [$d505: beq $d520]
	cmp.b	#0x0f,d0                         	| [$d507: cmp #$0f]
	beq	l_d520                             	| [$d509: beq $d520]
	cmp.b	#0x0e,d0                         	| [$d50b: cmp #$0e]
	beq	l_d520                             	| [$d50d: beq $d520]
	cmp.b	#0x0d,d0                         	| [$d50f: cmp #$0d]
	beq	l_d520                             	| [$d511: beq $d520]
	cmp.b	#0x0c,d0                         	| [$d513: cmp #$0c]
	beq	l_d520                             	| [$d515: beq $d520]
	cmp.b	#0x0b,d0                         	| [$d517: cmp #$0b]
	beq	l_d520                             	| [$d519: beq $d520]
	cmp.b	#0x0a,d0                         	| [$d51b: cmp #$0a]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$d51d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8560                     	| [$d51f: ldx $8560]
	move.b	(a0),d1                         	| [...]
	SBC_X	0xea                             	| [$d522: sbc $ea, x]
	GET_ADDRESS	0x03                       	| [$d524: lda $03]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x08                       	| [$d526: sta $08]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4003                     	| [$d528: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$d52b: and #$40]
	beq	l_d53a                             	| [$d52d: beq $d53a]
	GET_ADDRESS	current_player_001f        	| [$d52f: lda current_player_001f]
	move.b	(a0),d0                         	| [...]
	beq	l_d53a                             	| [$d531: beq $d53a]
	GET_ADDRESS	0x08                       	| [$d533: dec $08]
	subq.b	#1,(a0)                         	| [...]
	PUSH_SR                                	| [$d536: php]
	GET_ADDRESS_X	0xf5                     	| [$d537: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$d539: nop]
l_d53a:
	GET_ADDRESS	0x08                       	| [$d53a: inc $08]
	addq.b	#1,(a0)                         	| [...]
	nop                                    	| [$d53c: nop]
	PUSH_SR                                	| [$d53d: php]
	nop                                    	| [$d53e: nop]
	PUSH_SR                                	| [$d53f: php]
	GET_ADDRESS	0x08                       	| [$d540: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$d542: and #$0f]
	cmp.b	#0x06,d0                         	| [$d544: cmp #$06]
	* bcc=>bcs
	bcs	l_d570                             	| [$d546: bcc $d570]
	cmp.b	#0x08,d0                         	| [$d548: cmp #$08]
	* bcc=>bcs
	bcs	l_d585                             	| [$d54a: bcc $d585]
	cmp.b	#0x0e,d0                         	| [$d54c: cmp #$0e]
	* bcs=>bcc
	bcc	l_d583                             	| [$d54e: bcs $d583]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d550: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d552: nop]
	GET_ADDRESS	0x08                       	| [$d553: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$d555: and #$f0]
	cmp.b	#0x10,d0                         	| [$d557: cmp #$10]
	beq	l_d585                             	| [$d559: beq $d585]
	cmp.b	#0x40,d0                         	| [$d55b: cmp #$40]
	beq	l_d585                             	| [$d55d: beq $d585]
	cmp.b	#0x70,d0                         	| [$d55f: cmp #$70]
	beq	l_d585                             	| [$d561: beq $d585]
	cmp.b	#0xa0,d0                         	| [$d563: cmp #$a0]
	beq	l_d585                             	| [$d565: beq $d585]
	cmp.b	#0xd0,d0                         	| [$d567: cmp #$d0]
	beq	l_d585                             	| [$d569: beq $d585]
	bne	l_d585                             	| [$d56b: bne $d585]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d56d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x08a5                     	| [$d56f: ldx $08a5]
	move.b	(a0),d1                         	| [...]
	and.b	#0xf0,d0                         	| [$d572: and #$f0]
	cmp.b	#0x30,d0                         	| [$d574: cmp #$30]
	beq	l_d585                             	| [$d576: beq $d585]
	cmp.b	#0x60,d0                         	| [$d578: cmp #$60]
	beq	l_d585                             	| [$d57a: beq $d585]
	cmp.b	#0x90,d0                         	| [$d57c: cmp #$90]
	beq	l_d585                             	| [$d57e: beq $d585]
	cmp.b	#0xc0,d0                         	| [$d580: cmp #$c0]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$d582: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8560                     	| [$d584: ldx $8560]
	move.b	(a0),d1                         	| [...]
	SBC_X	0xea                             	| [$d587: sbc $ea, x]
	GET_ADDRESS	0x03                       	| [$d589: lda $03]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$d58b: sec]
	SBC_IMM	0x08                           	| [$d58c: sbc #$08]
	lsr.b	#1,d0                            	| [$d58e: lsr a]
	lsr.b	#1,d0                            	| [$d58f: lsr a]
	lsr.b	#1,d0                            	| [$d590: lsr a]
	lsr.b	#1,d0                            	| [$d591: lsr a]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d592: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0f                       	| [$d594: lda $0f]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$d596: sec]
	GET_ADDRESS	0x12                       	| [$d597: sbc $12]
	sbc	(a0),d0                            	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d599: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d59b: lda $04]
	move.b	(a0),d0                         	| [...]
	                           	| [$d59d: clc]
	add.b	#0x07,d0                        	| [$d59e: adc #$07]
	and.b	#0xf0,d0                         	| [$d5a0: and #$f0]
	CLR_XC_FLAGS                           	| [$d5a2: clc]
	GET_ADDRESS	0x12                       	| [$d5a3: adc $12]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d5a5: tax]
	jra	l_d5cc                             	| [$d5a6: jmp $d5cc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d5a9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d5ab:
	nop                                    	| [$d5ab: nop]
	GET_ADDRESS	0x03                       	| [$d5ac: lda $03]
	move.b	(a0),d0                         	| [...]
	                           	| [$d5ae: clc]
	add.b	#0x19,d0                        	| [$d5af: adc #$19]
	lsr.b	#1,d0                            	| [$d5b1: lsr a]
	lsr.b	#1,d0                            	| [$d5b2: lsr a]
	lsr.b	#1,d0                            	| [$d5b3: lsr a]
	lsr.b	#1,d0                            	| [$d5b4: lsr a]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d5b5: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0f                       	| [$d5b7: lda $0f]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$d5b9: sec]
	GET_ADDRESS	0x12                       	| [$d5ba: sbc $12]
	sbc	(a0),d0                            	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d5bc: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d5be: adc $04]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	                           	| [$d5c0: clc]
	add.b	#0x07,d0                        	| [$d5c1: adc #$07]
	and.b	#0xf0,d0                         	| [$d5c3: and #$f0]
	CLR_XC_FLAGS                           	| [$d5c5: clc]
	GET_ADDRESS	0x12                       	| [$d5c6: adc $12]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d5c8: tax]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d5c9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d5cb: nop]
l_d5cc:
	GET_ADDRESS	0xd68e                     	| [$d5cc: lda $d68e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$d5cf: tax]
	GET_ADDRESS	0x0400                     	| [$d5d0: lda $0400, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$d5d3: lsr a]
	lsr.b	#1,d0                            	| [$d5d4: lsr a]
	lsr.b	#1,d0                            	| [$d5d5: lsr a]
	lsr.b	#1,d0                            	| [$d5d6: lsr a]
	tst.b	d0                               	| [$d5d7: cmp #$00]
	beq	l_d619                             	| [$d5d9: beq $d619]
	cmp.b	#0x05,d0                         	| [$d5db: cmp #$05]
	beq	l_d619                             	| [$d5dd: beq $d619]
	cmp.b	#0x06,d0                         	| [$d5df: cmp #$06]
	beq	l_d619                             	| [$d5e1: beq $d619]
	cmp.b	#0x07,d0                         	| [$d5e3: cmp #$07]
	beq	l_d619                             	| [$d5e5: beq $d619]
	GET_ADDRESS	0x03                       	| [$d5e7: lda $03]
	move.b	(a0),d0                         	| [...]
	                           	| [$d5e9: clc]
	add.b	#0x05,d0                        	| [$d5ea: adc #$05]
	lsr.b	#1,d0                            	| [$d5ec: lsr a]
	lsr.b	#1,d0                            	| [$d5ed: lsr a]
	lsr.b	#1,d0                            	| [$d5ee: lsr a]
	lsr.b	#1,d0                            	| [$d5ef: lsr a]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d5f0: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x0f,d0                        	| [$d5f2: lda #$0f]
	SET_XC_FLAGS                           	| [$d5f4: sec]
	GET_ADDRESS	0x12                       	| [$d5f5: sbc $12]
	sbc	(a0),d0                            	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d5f7: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d5f9: lda $04]
	move.b	(a0),d0                         	| [...]
	                           	| [$d5fb: clc]
	add.b	#0x10,d0                        	| [$d5fc: adc #$10]
	and.b	#0xf0,d0                         	| [$d5fe: and #$f0]
	CLR_XC_FLAGS                           	| [$d600: clc]
	GET_ADDRESS	0x12                       	| [$d601: adc $12]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d603: tax]
	GET_ADDRESS	0xd68e                     	| [$d604: lda $d68e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$d607: tax]
	GET_ADDRESS	0x0400                     	| [$d608: lda $0400, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$d60b: lsr a]
	lsr.b	#1,d0                            	| [$d60c: lsr a]
	lsr.b	#1,d0                            	| [$d60d: lsr a]
	lsr.b	#1,d0                            	| [$d60e: lsr a]
	cmp.b	#0x07,d0                         	| [$d60f: cmp #$07]
	beq	l_d619                             	| [$d611: beq $d619]
	clr.b	d0                               	| [$d613: lda #$00]
	rts                                    	| [$d615: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d616: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d618: nop]
l_d619:
	st.b	d0                                	| [$d619: lda #$ff]
	rts                                    	| [$d61b: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d61c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d61e:
	nop                                    	| [$d61e: nop]
	GET_ADDRESS	0x03                       	| [$d61f: lda $03]
	move.b	(a0),d0                         	| [...]
	                           	| [$d621: clc]
	add.b	#0x07,d0                        	| [$d622: adc #$07]
	lsr.b	#1,d0                            	| [$d624: lsr a]
	lsr.b	#1,d0                            	| [$d625: lsr a]
	lsr.b	#1,d0                            	| [$d626: lsr a]
	lsr.b	#1,d0                            	| [$d627: lsr a]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d628: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x0f,d0                        	| [$d62a: lda #$0f]
	SET_XC_FLAGS                           	| [$d62c: sec]
	GET_ADDRESS	0x12                       	| [$d62d: sbc $12]
	sbc	(a0),d0                            	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d62f: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d631: lda $04]
	move.b	(a0),d0                         	| [...]
	                           	| [$d633: clc]
	add.b	#0x11,d0                        	| [$d634: adc #$11]
	and.b	#0xf0,d0                         	| [$d636: and #$f0]
	CLR_XC_FLAGS                           	| [$d638: clc]
	GET_ADDRESS	0x12                       	| [$d639: adc $12]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d63b: tax]
	jra	l_d662                             	| [$d63c: jmp $d662]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d63f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d641:
	nop                                    	| [$d641: nop]
	GET_ADDRESS	0x03                       	| [$d642: lda $03]
	move.b	(a0),d0                         	| [...]
	                           	| [$d644: clc]
	add.b	#0x07,d0                        	| [$d645: adc #$07]
	lsr.b	#1,d0                            	| [$d647: lsr a]
	lsr.b	#1,d0                            	| [$d648: lsr a]
	lsr.b	#1,d0                            	| [$d649: lsr a]
	lsr.b	#1,d0                            	| [$d64a: lsr a]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d64b: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x0f,d0                        	| [$d64d: lda #$0f]
	SET_XC_FLAGS                           	| [$d64f: sec]
	GET_ADDRESS	0x12                       	| [$d650: sbc $12]
	sbc	(a0),d0                            	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$d652: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d654: lda $04]
	move.b	(a0),d0                         	| [...]
	                           	| [$d656: clc]
	add.b	#0x14,d0                        	| [$d657: adc #$14]
	and.b	#0xf0,d0                         	| [$d659: and #$f0]
	CLR_XC_FLAGS                           	| [$d65b: clc]
	GET_ADDRESS	0x12                       	| [$d65c: adc $12]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d65e: tax]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d65f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d661: nop]
l_d662:
	GET_ADDRESS	0xd68e                     	| [$d662: lda $d68e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$d665: tax]
	GET_ADDRESS	0x0400                     	| [$d666: lda $0400, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$d669: lsr a]
	lsr.b	#1,d0                            	| [$d66a: lsr a]
	lsr.b	#1,d0                            	| [$d66b: lsr a]
	lsr.b	#1,d0                            	| [$d66c: lsr a]
	tst.b	d0                               	| [$d66d: cmp #$00]
	beq	l_d68b                             	| [$d66f: beq $d68b]
	cmp.b	#0x01,d0                         	| [$d671: cmp #$01]
	beq	l_d68b                             	| [$d673: beq $d68b]
	cmp.b	#0x02,d0                         	| [$d675: cmp #$02]
	beq	l_d68b                             	| [$d677: beq $d68b]
	cmp.b	#0x09,d0                         	| [$d679: cmp #$09]
	beq	l_d68b                             	| [$d67b: beq $d68b]
	cmp.b	#0x0a,d0                         	| [$d67d: cmp #$0a]
	beq	l_d68b                             	| [$d67f: beq $d68b]
	cmp.b	#0x0b,d0                         	| [$d681: cmp #$0b]
	beq	l_d68b                             	| [$d683: beq $d68b]
	clr.b	d0                               	| [$d685: lda #$00]
	rts                                    	| [$d687: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d688: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d68a: nop]
l_d68b:
	st.b	d0                                	| [$d68b: lda #$ff]
	rts                                    	| [$d68d: rts]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x06                       	| [$d693: ora $06]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	0x85                       	| [$d697: stx $85]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x83                       	| [$d699: sty $83]
	move.b	d2,(a0)                         	| [...]
	GET_ADDRESS_X	0x80                     	| [$d69c: sta ($80, x)]
    move.b	d0,(a0)                      	| [...]
	or.b	#0x0a,d0                          	| [$d69f: ora #$0a]
	GET_ADDRESS	0x0f0e                     	| [$d6a3: ora $0f0e]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	0x8c8d                     	| [$d6a7: stx $8c8d]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	move.b	d1,d0                           	| [$d6ab: txa]
	subq.b	#1,d2                           	| [$d6ad: dey]
	bpl	l_d6c1                             	| [$d6ae: bpl $d6c1]
	GET_ADDRESS	0x16                       	| [$d6b3: ora $16, x]
	or.b	(a0,d1.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS	0x95                       	| [$d6b7: stx $95, y]
    move.b	d1,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x93                       	| [$d6b9: sty $93, x]
    move.b	d2,(a0,d1.w)                 	| [...]
	GET_ADDRESS_Y	0x90                     	| [$d6bc: sta ($90), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$d6be: clc]
	GET_ADDRESS	0x1b1a                     	| [$d6bf: ora $1b1a, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x1f1e                     	| [$d6c3: ora $1f1e, x]
	or.b	(a0,d1.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS	0x9b9c                     	| [$d6c8: sta $9b9c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	illegal   <-- TODO: unsupported transfer to stack register	| [$d6cb: txs]
	PUSH_SR
	GET_ADDRESS	0x2098                     	| [$d6cc: sta $2098, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS_X	0x22                     	| [$d6cf: and ($22, x)]
	and.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x25                       	| [$d6d2: bit $25]
	tst.b	(a0)                             	| [...]
	GET_ADDRESS	0x27                       	| [$d6d4: rol $27]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xa5                       	| [$d6d7: ldx $a5]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xa3                       	| [$d6d9: ldy $a3]
	move.b	(a0),d2                         	| [...]
	move.b	#0xa1,d1                        	| [$d6db: ldx #$a1]
	move.b	#0x28,d2                        	| [$d6dd: ldy #$28]
	and.b	#0x2a,d0                         	| [$d6df: and #$2a]
	GET_ADDRESS	0x2e2d                     	| [$d6e2: bit $2e2d]
	tst.b	(a0)                             	| [...]
	GET_ADDRESS	0xacad                     	| [$d6e7: ldx $acad]
	move.b	(a0),d1                         	| [...]
	move.b	d0,d1                           	| [$d6eb: tax]
	move.b	#0xa8,d0                        	| [$d6ec: lda #$a8]
	bmi	l_d721                             	| [$d6ee: bmi $d721]
	GET_ADDRESS	0x36                       	| [$d6f3: and $36, x]
	and.b	(a0,d1.w),d0                     	| [...]
	GET_ADDRESS	0xb5                       	| [$d6f7: ldx $b5, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0xb3                       	| [$d6f9: ldy $b3, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS_Y	0xb0                     	| [$d6fc: lda ($b0), y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$d6fe: sec]
	GET_ADDRESS	0x3b3a                     	| [$d6ff: and $3b3a, y]
	and.b	(a0,d2.w),d0                     	| [...]
	GET_ADDRESS	0x3f3e                     	| [$d703: and $3f3e, x]
	and.b	(a0,d1.w),d0                     	| [...]
	GET_ADDRESS	0xbcbd                     	| [$d707: ldx $bcbd, y]
	move.b	(a0,d2.w),d1                    	| [...]
tsx
	GET_ADDRESS	0x40b8                     	| [$d70c: lda $40b8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS_X	0x42                     	| [$d70f: eor ($42, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x46                       	| [$d713: eor $46]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0xc5                       	| [$d717: dec $c5]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0xc3                       	| [$d719: cpy $c3]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_X	0xc0                     	| [$d71c: cmp ($c0, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	movem.w	d0,-(sp)                       	| [$d71e: pha]
	eor.b	#0x4a,d0                         	| [$d71f: eor #$4a]
	jra	l_4e4d                             	| [$d722: jmp $4e4d]
	GET_ADDRESS	0xcccd                     	| [$d727: dec $cccd]
	subq.b	#1,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$d72b: dex]
	cmp.b	#0xc8,d0                         	| [$d72c: cmp #$c8]
	bvc	l_d781                             	| [$d72e: bvc $d781]
	GET_ADDRESS	0x56                       	| [$d733: eor $56, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS	0xd5                       	| [$d737: dec $d5, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS_Y	0xd0                     	| [$d73c: cmp ($d0), y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	CLR_I_FLAG                             	| [$d73e: cli]
	GET_ADDRESS	0x5b5a                     	| [$d73f: eor $5b5a, y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS	0x5f5e                     	| [$d743: eor $5f5e, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS	0xdcdd                     	| [$d747: dec $dcdd, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x60d8                     	| [$d74c: cmp $60d8, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_X	0x62                     	| [$d74f: adc ($62, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x66                       	| [$d753: adc $66]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0xe5                       	| [$d757: inc $e5]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0xe3                       	| [$d759: cpx $e3]
	cmp.b	(a0),d1                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	SBC_X_IND	0xe0                         	| [$d75c: sbc ($e0, x)]
	movem.w	(sp)+,d0                       	| [$d75e: pla]
	move.b	#0x6a,d4	| [$d75f: adc #$6a]
	addx.b	d4,d0                        	| [$d75f: adc #$6a]
	jra	(0x6e6d)                           	| [$d762: jmp ($6e6d)]
	GET_ADDRESS	0xeced                     	| [$d767: inc $eced]
	addq.b	#1,(a0)                         	| [...]
	nop                                    	| [$d76b: nop]
	SBC_IMM	0xe8                           	| [$d76c: sbc #$e8]
	bvs	l_d7e1                             	| [$d76e: bvs $d7e1]
	GET_ADDRESS	0x76                       	| [$d773: adc $76, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d777: inc dummy_write_00f5, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	SBC_IND_Y	0xf0                         	| [$d77c: sbc ($f0), y]
	SET_I_FLAG                             	| [$d77e: sei]
	GET_ADDRESS	0x7b7a                     	| [$d77f: adc $7b7a, y]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	GET_ADDRESS	0x7f7e                     	| [$d783: adc $7f7e, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	GET_ADDRESS	0xfcfd                     	| [$d787: inc $fcfd, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	SBC_Y	0x85f8                           	| [$d78c: sbc $85f8, y]
	GET_ADDRESS	0xea                       	| [$d78f: inc $ea, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
l_d791:
	jra	l_d838                             	| [$d791: jmp $d838]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d794: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d796:
	GET_ADDRESS	0x6ea5                     	| [$d796: ldx $6ea5]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xff,d0                         	| [$d799: cmp #$ff]
	bne	l_d7a0                             	| [$d79b: bne $d7a0]
	jra	l_d863                             	| [$d79d: jmp $d863]
l_d7a0:
	jbsr	l_e672                            	| [$d7a0: jsr $e672]
	GET_ADDRESS	0x6e                       	| [$d7a3: inc $6e]
	addq.b	#1,(a0)                         	| [...]
	cmp.b	#0x6e,d0                         	| [$d7a5: cmp #$6e]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0x01,d0                         	| [$d7a7: cmp #$01]
	beq	l_d7c5                             	| [$d7a9: beq $d7c5]
	cmp.b	#0x09,d0                         	| [$d7ab: cmp #$09]
	beq	l_d7fa                             	| [$d7ad: beq $d7fa]
	cmp.b	#0x11,d0                         	| [$d7af: cmp #$11]
	beq	l_d819                             	| [$d7b1: beq $d819]
	cmp.b	#0x19,d0                         	| [$d7b3: cmp #$19]
	beq	l_d791                             	| [$d7b5: beq $d791]
	cmp.b	#0x22,d0                         	| [$d7b7: cmp #$22]
	beq	l_d7bf                             	| [$d7b9: beq $d7bf]
	rts                                    	| [$d7bb: rts]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$d7bc: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x574c                     	| [$d7be: ldx $574c]
	move.b	(a0),d1                         	| [...]
	nop                                    	| [$d7c1: cld]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d7c2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xbaa5                     	| [$d7c4: ldx $baa5]
	move.b	(a0),d1                         	| [...]
	lsr.b	#1,d0                            	| [$d7c7: lsr a]
	move.b	d0,d2                           	| [$d7c8: tay]
	GET_ADDRESS	0xd864                     	| [$d7c9: lda $d864, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181c                     	| [$d7cc: sta $181c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x6e                       	| [$d7cf: lda $6e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	nop                                    	| [$d7d1: cld]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$d7d2: sta $181d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x69                       	| [$d7d5: lda $69, x]
	move.b	(a0,d1.w),d0                    	| [...]
	nop                                    	| [$d7d7: cld]
	PUSH_SR
	GET_ADDRESS	0x1818                     	| [$d7d8: sta $1818]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd882                     	| [$d7db: lda $d882, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1819                     	| [$d7de: sta $1819]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d7e1:
	GET_ADDRESS	current_player_001f        	| [$d7e1: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_pepper_002b         	| [$d7e3: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$d7e5: sec]
	illegal   <-- TODO: unsupported set decimal mode	| [$d7e6: sed]
	SBC_IMM	0x01                           	| [$d7e7: sbc #$01]
	PUSH_SR
	GET_ADDRESS	player_pepper_002b         	| [$d7e9: sta player_pepper_002b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	nop                                    	| [$d7eb: cld]
	GET_ADDRESS	0x1b                       	| [$d7ec: lda $1b]
	move.b	(a0),d0                         	| [...]
	beq	l_d7f6                             	| [$d7ee: beq $d7f6]
	jbsr	l_ca94                            	| [$d7f0: jsr $ca94]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$d7f3: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8560                     	| [$d7f5: ldx $8560]
	move.b	(a0),d1                         	| [...]
	SBC_X	0xea                             	| [$d7f8: sbc $ea, x]
l_d7fa:
	GET_ADDRESS	0xba                       	| [$d7fa: lda $ba]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$d7fc: lsr a]
	move.b	d0,d2                           	| [$d7fd: tay]
	GET_ADDRESS	0x181d                     	| [$d7fe: lda $181d]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xd86e                     	| [$d801: cmp $d86e, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_d80f                             	| [$d804: bne $d80f]
	GET_ADDRESS	0xd873                     	| [$d806: lda $d873, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$d809: sta $181d]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf6                       	| [$d80c: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d80e: nop]
l_d80f:
	GET_ADDRESS	0xd887                     	| [$d80f: lda $d887, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1819                     	| [$d812: sta $1819]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$d815: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d816: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d818: nop]
l_d819:
	GET_ADDRESS	0xba                       	| [$d819: lda $ba]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$d81b: lsr a]
	move.b	d0,d2                           	| [$d81c: tay]
	GET_ADDRESS	0x181d                     	| [$d81d: lda $181d]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xd873                     	| [$d820: cmp $d873, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_d82e                             	| [$d823: bne $d82e]
	GET_ADDRESS	0xd878                     	| [$d825: lda $d878, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$d828: sta $181d]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf6                       	| [$d82b: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d82d: nop]
l_d82e:
	GET_ADDRESS	0xd88c                     	| [$d82e: lda $d88c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1819                     	| [$d831: sta $1819]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$d834: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d835: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d837: nop]
l_d838:
	GET_ADDRESS	0xba                       	| [$d838: lda $ba]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$d83a: lsr a]
	move.b	d0,d2                           	| [$d83b: tay]
	GET_ADDRESS	0x181d                     	| [$d83c: lda $181d]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xd878                     	| [$d83f: cmp $d878, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_d84d                             	| [$d842: bne $d84d]
	GET_ADDRESS	0xd87d                     	| [$d844: lda $d87d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$d847: sta $181d]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xf6                       	| [$d84a: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d84c: nop]
l_d84d:
	GET_ADDRESS	0xd891                     	| [$d84d: lda $d891, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1819                     	| [$d850: sta $1819]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$d853: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d854: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d856: nop]
	st.b	d0                                	| [$d857: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0x6e                       	| [$d859: sta $6e]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$d85b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1818                     	| [$d85d: sta $1818]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d860: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d862: nop]
l_d863:
	rts                                    	| [$d863: rts]
	GET_ADDRESS_X	0x01                     	| [$d866: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x03                     	| [$d868: ora ($03, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x01                     	| [$d86b: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x49                       	| [$d86d: ora $49]
	or.b	(a0),d0                           	| [...]
	eor.b	#0x49,d0                         	| [$d86f: eor #$49]
	lsr.b	#1,d0                            	| [$d872: lsr a]
	GET_ADDRESS_X	0x41                     	| [$d873: eor ($41, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x48                     	| [$d875: eor ($48, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	eor.b	#0x49,d0                         	| [$d878: eor #$49]
	eor.b	#0x4b,d0                         	| [$d87a: eor #$4b]
	lsr.b	#1,d0                            	| [$d87c: lsr a]
	GET_ADDRESS_X	0x41                     	| [$d87d: eor ($41, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x48                     	| [$d87f: eor ($48, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jbsr	l_2020                            	| [$d882: jsr $2020]
	GET_ADDRESS	0x24                       	| [$d885: bit $24]
	tst.b	(a0)                             	| [...]
	GET_ADDRESS_X	0x21                     	| [$d887: and ($21, x)]
	and.b	(a0),d0                          	| [...]
	GET_ADDRESS_X	0x25                     	| [$d889: and ($25, x)]
	and.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x22                       	| [$d88b: and $22]
	and.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x26                       	| [$d88f: rol $26]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d896: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_d898:
	nop                                    	| [$d898: nop]
	GET_ADDRESS	0xba                       	| [$d899: lda $ba]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x06,d0                         	| [$d89b: cmp #$06]
	beq	l_d8ef                             	| [$d89d: beq $d8ef]
	cmp.b	#0x08,d0                         	| [$d89f: cmp #$08]
	beq	l_d8ef                             	| [$d8a1: beq $d8ef]
	GET_ADDRESS	0x181e                     	| [$d8a3: lda $181e]
	move.b	(a0),d0                         	| [...]
	not.b	d0                               	| [$d8a6: eor #$ff]
	SET_XC_FLAGS                           	| [$d8a8: sec]
	SBC_IMM	0x28                           	| [$d8a9: sbc #$28]
	lsr.b	#1,d0                            	| [$d8ab: lsr a]
	lsr.b	#1,d0                            	| [$d8ac: lsr a]
	lsr.b	#1,d0                            	| [$d8ad: lsr a]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$d8ae: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$d8b0: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$d8b2: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x181f                     	| [$d8b4: lda $181f]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$d8b7: and #$f8]
	                           	| [$d8b9: clc]
	add.b	#0x10,d0                        	| [$d8ba: adc #$10]
	asl.b	#1,d0                            	| [$d8bc: asl a]
	GET_ADDRESS	0x04                       	| [$d8bd: rol $04]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	asl.b	#1,d0                            	| [$d8bf: asl a]
	GET_ADDRESS	0x04                       	| [$d8c0: rol $04]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$d8c2: clc]
	GET_ADDRESS	0x03                       	| [$d8c3: adc $03]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$d8c5: sta $05]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03                       	| [$d8c7: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d8c9: lda $04]
	move.b	(a0),d0                         	| [...]
	move.b	#0x10,d4	| [$d8cb: adc #$10]
	addx.b	d4,d0                        	| [$d8cb: adc #$10]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$d8cd: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	                           	| [$d8cf: clc]
	add.b	#0x04,d0                        	| [$d8d0: adc #$04]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$d8d2: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x24,d2                        	| [$d8d4: ldy #$24]
	GET_ADDRESS_Y	0x05                     	| [$d8d6: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$d8d8: and #$03]
	beq	l_d8ef                             	| [$d8da: beq $d8ef]
	move.b	#0x04,d2                        	| [$d8dc: ldy #$04]
	GET_ADDRESS_Y	0x05                     	| [$d8de: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$d8e0: and #$03]
	beq	l_d8ef                             	| [$d8e2: beq $d8ef]
	GET_ADDRESS_Y	0x03                     	| [$d8e4: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x1f,d0                         	| [$d8e6: and #$1f]
	cmp.b	#0x04,d0                         	| [$d8e8: cmp #$04]
	* bcc=>bcs
	bcs	l_d8f2                             	| [$d8ea: bcc $d8f2]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d8ec: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d8ee: nop]
l_d8ef:
	jra	l_da55                             	| [$d8ef: jmp $da55]
l_d8f2:
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d8f2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d8f4: nop]
	move.b	#0x08,d0                        	| [$d8f5: lda #$08]
	jbsr	l_ea5d                            	| [$d8f7: jsr $ea5d]
	jbsr	l_da6a                            	| [$d8fa: jsr $da6a]
	GET_ADDRESS	0xba                       	| [$d8fd: lda $ba]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$d8ff: cmp #$02]
	beq	l_d918                             	| [$d901: beq $d918]
	addq.b	#1,d2                           	| [$d903: iny]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d904: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x5820                     	| [$d906: ldx $5820]
	move.b	(a0),d1                         	| [...]
	beq	l_d92b                             	| [$d90a: beq $d92b]
	addq.b	#1,d2                           	| [$d90c: iny]
	cmp.b	#0x08,d2                         	| [$d90d: cpy #$08]
	bne	l_d907                             	| [$d90f: bne $d907]
	move.b	#0x04,d2                        	| [$d911: ldy #$04]
	bne	l_d974                             	| [$d913: bne $d974]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d915: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8588                     	| [$d917: ldx $8588]
	move.b	(a0),d1                         	| [...]
	SBC_X	0xea                             	| [$d91a: sbc $ea, x]
l_d91c:
	jbsr	l_da58                            	| [$d91c: jsr $da58]
	beq	l_d94f                             	| [$d91f: beq $d94f]
	subq.b	#1,d2                           	| [$d921: dey]
	bne	l_d91c                             	| [$d922: bne $d91c]
	move.b	#0x01,d2                        	| [$d924: ldy #$01]
	bne	l_d974                             	| [$d926: bne $d974]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d928: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d92a: nop]
l_d92b:
	move.b	d1,d0                           	| [$d92b: txa]
	bne	l_d93b                             	| [$d92c: bne $d93b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d92e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d930: nop]
l_d931:
	addq.b	#1,d2                           	| [$d931: iny]
	GET_ADDRESS_Y	0x05                     	| [$d932: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$d934: and #$03]
	bne	l_d931                             	| [$d936: bne $d931]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d938: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d93a: nop]
l_d93b:
	move.b	#0x04,d1                        	| [$d93b: ldx #$04]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d93d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xb188                     	| [$d93f: ldx $b188]
	move.b	(a0),d1                         	| [...]
	and.b	#0x1c,d0                         	| [$d943: and #$1c]
	beq	l_d8ef                             	| [$d945: beq $d8ef]
	subq.b	#1,d1                           	| [$d947: dex]
	bne	l_d940                             	| [$d948: bne $d940]
	beq	l_d974                             	| [$d94a: beq $d974]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d94c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd08a                     	| [$d94e: ldx $d08a]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf585                     	| [$d951: ora $f585]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0xb188                     	| [$d954: ror $b188]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	player_lives_0029          	| [$d957: ora player_lives_0029]
	or.b	(a0),d0                           	| [...]
	bne	l_d955                             	| [$d95a: bne $d955]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d95c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04a2                     	| [$d95e: ldx $04a2]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d961: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d963: nop]
l_d964:
	addq.b	#1,d2                           	| [$d964: iny]
	GET_ADDRESS_Y	0x03                     	| [$d965: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x1c,d0                         	| [$d967: and #$1c]
	beq	l_d8ef                             	| [$d969: beq $d8ef]
	subq.b	#1,d1                           	| [$d96b: dex]
	bne	l_d964                             	| [$d96c: bne $d964]
	subq.b	#1,d2                           	| [$d96e: dey]
	subq.b	#1,d2                           	| [$d96f: dey]
	subq.b	#1,d2                           	| [$d970: dey]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d971: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d973: nop]
l_d974:
	move.b	#0x09,d0                        	| [$d974: lda #$09]
	jbsr	l_ea5d                            	| [$d976: jsr $ea5d]
	move.b	d2,d0                           	| [$d979: tya]
	CLR_XC_FLAGS                           	| [$d97a: clc]
	GET_ADDRESS	0x03                       	| [$d97b: adc $03]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x07                       	| [$d97d: sta $07]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$d97f: adc $04]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	#0x00,d4	| [$d981: adc #$00]
	addx.b	d4,d0                        	| [$d981: adc #$00]
	and.b	#0x03,d0                         	| [$d983: and #$03]
	PUSH_SR
	GET_ADDRESS	0x08                       	| [$d985: sta $08]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x07                       	| [$d987: adc $07]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	and.b	#0x1f,d0                         	| [$d989: and #$1f]
	asl.b	#1,d0                            	| [$d98b: asl a]
	asl.b	#1,d0                            	| [$d98c: asl a]
	asl.b	#1,d0                            	| [$d98d: asl a]
	PUSH_SR
	GET_ADDRESS	0x09                       	| [$d98e: sta $09]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x08                       	| [$d990: lsr $08]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x07                       	| [$d992: ror $07]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	move.b	#0x08,d1                        	| [$d994: ldx #$08]
	move.b	d0,d1                           	| [$d996: tax]
	GET_ADDRESS	0x07                       	| [$d998: lda $07]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$d99a: and #$f8]
	PUSH_SR
	GET_ADDRESS	0x07                       	| [$d99c: sta $07]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$d99e: rol $00]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$d9a0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d9a2: nop]
l_d9a3:
	GET_ADDRESS	0x0202                     	| [$d9a3: lda $0202, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_d9c6                             	| [$d9a6: beq $d9c6]
	GET_ADDRESS	0x0203                     	| [$d9a8: lda $0203, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$d9ab: eor #$ff]
	and.b	#0xf8,d0                         	| [$d9ad: and #$f8]
	GET_ADDRESS	0x09                       	| [$d9af: cmp $09]
	cmp.b	(a0),d0                          	| [...]
	bne	l_d9bf                             	| [$d9b1: bne $d9bf]
	GET_ADDRESS	0x0204                     	| [$d9b3: lda $0204, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf8,d0                         	| [$d9b6: and #$f8]
	GET_ADDRESS	0x07                       	| [$d9b8: cmp $07]
	cmp.b	(a0),d0                          	| [...]
	beq	l_d9cc                             	| [$d9ba: beq $d9cc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d9bc: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe8e8                     	| [$d9be: ldx $e8e8]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d1                           	| [$d9c1: inx]
	addq.b	#1,d1                           	| [$d9c2: inx]
	jra	l_d9a3                             	| [$d9c3: jmp $d9a3]
l_d9c6:
	jra	l_da31                             	| [$d9c6: jmp $da31]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$d9c9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$d9cb: nop]
l_d9cc:
	GET_ADDRESS	0x0202                     	| [$d9cc: lda $0202, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x0f,d0                         	| [$d9cf: cmp #$0f]
	* bcs=>bcc
	bcc	l_d9bf                             	| [$d9d1: bcs $d9bf]
	and.b	#0x0f,d0                         	| [$d9d3: and #$0f]
	or.b	#0x10,d0                          	| [$d9d5: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$d9d7: sta $0202, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0204                     	| [$d9da: lda $0204, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfc,d0                         	| [$d9dd: and #$fc]
	or.b	#0x04,d0                          	| [$d9df: ora #$04]
	PUSH_SR
	GET_ADDRESS	0x0204                     	| [$d9e1: sta $0204, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x01                       	| [$d9e4: lda $01]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$d9e6: sta $0205, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	clr.b	d2                               	| [$d9e9: ldy #$00]
	PUSH_SR
	GET_ADDRESS	0x0a                       	| [$d9eb: sty $0a]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$d9ed: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0aa4                     	| [$d9ef: ror $0aa4]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x0068                     	| [$d9f2: lda $0068, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0xa0,d0                         	| [$d9f5: and #$a0]
	bne	l_da26                             	| [$d9f7: bne $da26]
	move.b	d2,d0                           	| [$d9f9: tya]
	asl.b	#1,d0                            	| [$d9fa: asl a]
	asl.b	#1,d0                            	| [$d9fb: asl a]
	move.b	d0,d2                           	| [$d9fc: tay]
	GET_ADDRESS	0x1802                     	| [$d9fd: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$da00: clc]
	add.b	#0x08,d0                        	| [$da01: adc #$08]
	GET_ADDRESS	0x0203                     	| [$da03: cmp $0203, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	bcc	l_da26                             	| [$da06: bcs $da26]
	                           	| [$da08: clc]
	add.b	#0x20,d0                        	| [$da09: adc #$20]
	GET_ADDRESS	0x0203                     	| [$da0b: cmp $0203, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_da26                             	| [$da0e: bcc $da26]
	GET_ADDRESS	0x1803                     	| [$da10: lda $1803, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0xf8,d0                         	| [$da13: and #$f8]
	                           	| [$da15: clc]
	add.b	#0x10,d0                        	| [$da16: adc #$10]
	PUSH_SR
	GET_ADDRESS	0x0b                       	| [$da18: sta $0b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0204                     	| [$da1a: lda $0204, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf8,d0                         	| [$da1d: and #$f8]
	GET_ADDRESS	0x0b                       	| [$da1f: cmp $0b]
	cmp.b	(a0),d0                          	| [...]
	beq	l_da36                             	| [$da21: beq $da36]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da23: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$da25: nop]
l_da26:
	GET_ADDRESS	0x0a                       	| [$da26: inc $0a]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x0a                       	| [$da28: ldy $0a]
	move.b	(a0),d2                         	| [...]
	cmp.b	#0x06,d2                         	| [$da2a: cpy #$06]
	bne	l_d9f0                             	| [$da2c: bne $d9f0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da2e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$da30: nop]
l_da31:
	beq	l_da55                             	| [$da31: beq $da55]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da33: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$da35: nop]
l_da36:
	GET_ADDRESS	0x0a                       	| [$da36: ldy $0a]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x0068                     	| [$da38: lda $0068, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$da3b: and #$0f]
	or.b	#0x40,d0                          	| [$da3d: ora #$40]
	PUSH_SR
	GET_ADDRESS	0x0068                     	| [$da3f: sta $0068, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0xb1                       	| [$da42: stx $b1, y]
    move.b	d1,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0205                     	| [$da44: inc $0205, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0205                     	| [$da47: inc $0205, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	move.b	#0x12,d0                        	| [$da4a: lda #$12]
	jbsr	l_ea5d                            	| [$da4c: jsr $ea5d]
	jra	l_da26                             	| [$da4f: jmp $da26]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da52: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$da54: nop]
l_da55:
	rts                                    	| [$da55: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da56: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_da58:
	nop                                    	| [$da58: nop]
	st.b	d1                                	| [$da59: ldx #$ff]
	GET_ADDRESS_Y	0x05                     	| [$da5b: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$da5d: and #$03]
	beq	l_da86                             	| [$da5f: beq $da86]
	addq.b	#1,d1                           	| [$da61: inx]
	GET_ADDRESS_Y	0x03                     	| [$da62: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x1c,d0                         	| [$da64: and #$1c]
	beq	l_da86                             	| [$da66: beq $da86]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da68: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_da6a:
	nop                                    	| [$da6a: nop]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$da6b: sty $12]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$da6d: clc]
	GET_ADDRESS_Y	0x03                     	| [$da6e: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0x04,d4	| [$da70: adc #$04]
	addx.b	d4,d0                        	| [$da70: adc #$04]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$da72: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	CLR_XC_FLAGS                           	| [$da74: clc]
	move.b	d2,d0                           	| [$da75: tya]
	move.b	#0x20,d4	| [$da76: adc #$20]
	addx.b	d4,d0                        	| [$da76: adc #$20]
	move.b	d0,d2                           	| [$da78: tay]
	GET_ADDRESS_Y	0x03                     	| [$da79: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0x04,d4	| [$da7b: adc #$04]
	addx.b	d4,d0                        	| [$da7b: adc #$04]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$da7d: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x12                       	| [$da7f: ldy $12]
	move.b	(a0),d2                         	| [...]
	st.b	d0                                	| [$da81: lda #$ff]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da83: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$da85: nop]
l_da86:
	rts                                    	| [$da86: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da87: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_da89:
	nop                                    	| [$da89: nop]
	clr.b	d2                               	| [$da8a: ldy #$00]
	GET_ADDRESS	0x4004                     	| [$da8c: lda $4004]
	move.b	(a0),d0                         	| [...]
	and.b	#0x08,d0                         	| [$da8f: and #$08]
	bne	l_da98                             	| [$da91: bne $da98]
	move.b	#0x06,d2                        	| [$da93: ldy #$06]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$da95: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$da97: nop]
l_da98:
	CLR_XC_FLAGS                           	| [$da98: clc]
	move.b	d2,d0                           	| [$da99: tya]
	GET_ADDRESS	0x64                       	| [$da9a: adc $64]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$da9c: tax]
	GET_ADDRESS	0xdb02                     	| [$da9d: lda $db02, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xbc                       	| [$daa0: sta $bc]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdb0e                     	| [$daa2: lda $db0e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xbd                       	| [$daa5: sta $bd]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdb1a                     	| [$daa7: lda $db1a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xbe                       	| [$daaa: sta $be]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$daac: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xc2                       	| [$daae: sta $c2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xc3                       	| [$dab0: sta $c3]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xbf                       	| [$dab2: sta $bf]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xc0                       	| [$dab4: sta $c0]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xc1                       	| [$dab6: sta $c1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x90                       	| [$dab8: sta $90]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	current_player_001f        	| [$daba: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x61                       	| [$dabc: lda $61, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$dabe: lsr a]
	lsr.b	#1,d0                            	| [$dabf: lsr a]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$dac0: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	cmp.b	#0x08,d0                         	| [$dac2: cmp #$08]
	* bcc=>bcs
	bcs	l_dac8                             	| [$dac4: bcc $dac8]
	move.b	#0x07,d0                        	| [$dac6: lda #$07]
l_dac8:
	move.b	d0,d1                           	| [$dac8: tax]
	GET_ADDRESS	0xdaf0                     	| [$dac9: lda $daf0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	#0x05,d2                        	| [$dacc: ldy #$05]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dace: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dad0: nop]
l_dad1:
	PUSH_SR
	GET_ADDRESS	0x0091                     	| [$dad1: sta $0091, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$dad4: dey]
	bpl	l_dad1                             	| [$dad5: bpl $dad1]
	GET_ADDRESS	0xdaf9                     	| [$dad7: lda $daf9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	#0x05,d2                        	| [$dada: ldy #$05]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dadc: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dade: nop]
l_dadf:
	PUSH_SR
	GET_ADDRESS	0x00a1                     	| [$dadf: sta $00a1, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$dae2: dey]
	bpl	l_dadf                             	| [$dae3: bpl $dadf]
	GET_ADDRESS	0xdaf4                     	| [$dae5: lda $daf4]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x98                       	| [$dae8: sta $98]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdafd                     	| [$daea: lda $dafd]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	game_speed_00a8            	| [$daed: sta game_speed_00a8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$daef: rts]
	GET_ADDRESS_X	0x01                     	| [$db00: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
brk $02
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x05                       	| [$db08: ora $05]
	or.b	(a0),d0                           	| [...]
brk $02
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x01                     	| [$db1a: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x00                     	| [$db1c: ora ($00, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x01                     	| [$db20: ora ($01, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS_X	0x00                     	| [$db22: ora ($00, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$db26: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_db28:
	nop                                    	| [$db28: nop]
	GET_ADDRESS	0x6f                       	| [$db29: lda $6f]
	move.b	(a0),d0                         	| [...]
	bmi	l_db9b                             	| [$db2b: bmi $db9b]
	GET_ADDRESS	timer1_0013                	| [$db2d: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x1f,d0                         	| [$db2f: and #$1f]
	bne	l_db9b                             	| [$db31: bne $db9b]
	GET_ADDRESS	0xc2                       	| [$db33: inc $c2]
	addq.b	#1,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$db35: dex]
	cmp.b	#0x03,d1                         	| [$db37: cpx #$03]
	bne	l_db3d                             	| [$db39: bne $db3d]
	clr.b	d1                               	| [$db3b: ldx #$00]
l_db3d:
	PUSH_SR
	GET_ADDRESS	0xc2                       	| [$db3d: stx $c2]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd5bc                     	| [$db3f: cmp $d5bc, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	beq	l_db9b                             	| [$db43: beq $db9b]
	clr.b	d2                               	| [$db45: ldy #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$db47: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$db49: nop]
l_db4a:
	GET_ADDRESS	0x0068                     	| [$db4a: lda $0068, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$db4d: cmp #$ff]
	beq	l_db5c                             	| [$db4f: beq $db5c]
	addq.b	#1,d2                           	| [$db51: iny]
	cmp.b	#0x06,d2                         	| [$db52: cpy #$06]
	bne	l_db4a                             	| [$db54: bne $db4a]
	jra	l_db9b                             	| [$db56: jmp $db9b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$db59: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$db5b: nop]
l_db5c:
	GET_ADDRESS	0xbf                       	| [$db5c: inc $bf, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	jra	(0x098a)                           	| [$db5e: jmp ($098a)]
	jbsr	l_6899                            	| [$db61: jsr $6899]
brk $c0
   ^^^^ TODO: unknown/unsupported instruction brk
	asl.b	#1,d0                            	| [$db66: asl a]
	GET_ADDRESS	0x9901                     	| [$db67: eor $9901]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	PUSH_SR
	GET_ADDRESS	0xea00                     	| [$db6a: sta $ea00, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0xc3                       	| [$db6e: adc $c3]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	and.b	#0x03,d0                         	| [$db70: and #$03]
	PUSH_SR
	GET_ADDRESS	0xc3                       	| [$db72: sta $c3]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x01                       	| [$db74: sta $01]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x9cbd                     	| [$db76: lsr $9cbd]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x00a9                     	| [$db7a: sta $00a9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bcs	l_db89                             	| [$db7d: bcs $db89]
	asl.b	#1,d0                            	| [$db7f: asl a]
	move.b	d0,d2                           	| [$db80: tay]
	GET_ADDRESS	0xdb9e                     	| [$db81: lda $db9e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$db84: sta $1802, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x63                       	| [$db87: adc $63]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
l_db89:
	asl.b	#1,d0                            	| [$db89: asl a]
	asl.b	#1,d0                            	| [$db8a: asl a]
	CLR_XC_FLAGS                           	| [$db8b: clc]
	GET_ADDRESS	0xc3                       	| [$db8c: adc $c3]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$db8e: tax]
	GET_ADDRESS	0xdba1                     	| [$db8f: lda $dba1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$db92: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$db98: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$db9a: nop]
l_db9b:
	rts                                    	| [$db9b: rts]
	jbsr	l_f040                            	| [$db9c: jsr $f040]
brk $1d
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0xadad                     	| [$dba1: ora $adad, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x5d1d                     	| [$dba4: ora $5d1d, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x1d1d                     	| [$dba7: eor $1d1d, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	PUSH_SR
	GET_ADDRESS	0x1dad                     	| [$dbaa: sta $1dad]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x8d                       	| [$dbad: sta $8d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x1d                       	| [$dbaf: cmp $1d]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xcdcd                     	| [$dbb1: ora $cdcd, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x9d2d                     	| [$dbb4: ora $9d2d, x]
	or.b	(a0,d1.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS	0x8580                     	| [$dbb7: sta $8580]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X	0xea                             	| [$dbba: sbc $ea, x]
	GET_ADDRESS	0x6f                       	| [$dbbc: lda $6f]
	move.b	(a0),d0                         	| [...]
	bmi	l_dbdc                             	| [$dbbe: bmi $dbdc]
	clr.b	d1                               	| [$dbc0: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dbc2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x68b5                     	| [$dbc4: ldx $68b5]
	move.b	(a0),d1                         	| [...]
	and.b	#0xd0,d0                         	| [$dbc7: and #$d0]
	bne	l_dbd4                             	| [$dbc9: bne $dbd4]
	GET_ADDRESS	0x68                       	| [$dbcb: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$dbcd: and #$20]
	bne	l_dbe0                             	| [$dbcf: bne $dbe0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dbd1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dbd3: nop]
l_dbd4:
	addq.b	#1,d1                           	| [$dbd4: inx]
	cmp.b	#0x06,d1                         	| [$dbd5: cpx #$06]
	bne	l_dbc5                             	| [$dbd7: bne $dbc5]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dbd9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dbdb: nop]
l_dbdc:
	rts                                    	| [$dbdc: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dbdd: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x7086                     	| [$dbdf: ldx $7086]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xa9                       	| [$dbe2: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x71                       	| [$dbe4: sta $71]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x0a,d1                        	| [$dbe6: ldx #$0a]
	asl.b	#1,d0                            	| [$dbe8: asl a]
	move.b	d0,d2                           	| [$dbe9: tay]
	GET_ADDRESS	0x1802                     	| [$dbea: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$dbed: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$dbef: lda $03, x]
	move.b	(a0,d1.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$dbf1: clc]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$dbf2: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$dbf4: adc $03]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	cmp.b	#0xd9,d0                         	| [$dbf6: cmp #$d9]
	* bcs=>bcc
	bcc	l_dc4e                             	| [$dbf8: bcs $dc4e]
	cmp.b	#0x18,d0                         	| [$dbfa: cmp #$18]
	* bcc=>bcs
	bcs	l_dc5e                             	| [$dbfc: bcc $dc5e]
	jbsr	l_e0b6                            	| [$dbfe: jsr $e0b6]
	bne	l_dc45                             	| [$dc01: bne $dc45]
	cmp.b	#0x10,d0                         	| [$dc03: cmp #$10]
	beq	l_dc1a                             	| [$dc05: beq $dc1a]
	cmp.b	#0x40,d0                         	| [$dc07: cmp #$40]
	beq	l_dc1a                             	| [$dc09: beq $dc1a]
	cmp.b	#0x70,d0                         	| [$dc0b: cmp #$70]
	beq	l_dc1a                             	| [$dc0d: beq $dc1a]
	cmp.b	#0xa0,d0                         	| [$dc0f: cmp #$a0]
	beq	l_dc1a                             	| [$dc11: beq $dc1a]
	cmp.b	#0xd0,d0                         	| [$dc13: cmp #$d0]
	bne	l_dc45                             	| [$dc15: bne $dc45]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc17: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc19: nop]
l_dc1a:
	jbsr	l_e09d                            	| [$dc1a: jsr $e09d]
	bne	l_dc2c                             	| [$dc1d: bne $dc2c]
	jbsr	l_e07b                            	| [$dc1f: jsr $e07b]
	beq	l_dc37                             	| [$dc22: beq $dc37]
	jbsr	l_e08c                            	| [$dc24: jsr $e08c]
	beq	l_dc37                             	| [$dc27: beq $dc37]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc29: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc2b: nop]
l_dc2c:
	jbsr	l_e059                            	| [$dc2c: jsr $e059]
	beq	l_dc37                             	| [$dc2f: beq $dc37]
	jra	l_dc6b                             	| [$dc31: jmp $dc6b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc34: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc36: nop]
l_dc37:
	GET_ADDRESS	0x70                       	| [$dc37: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x68                       	| [$dc39: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$dc3b: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$dc3d: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jra	l_dc6b                             	| [$dc3f: jmp $dc6b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc42: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc44: nop]
l_dc45:
	GET_ADDRESS	0x03                       	| [$dc45: lda $03]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x80,d0                         	| [$dc47: cmp #$80]
	* bcs=>bcc
	bcc	l_dc5e                             	| [$dc49: bcs $dc5e]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc4b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc4d: nop]
l_dc4e:
	GET_ADDRESS	0x70                       	| [$dc4e: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xa9                       	| [$dc50: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$dc52: and #$0f]
	or.b	#0x20,d0                          	| [$dc54: ora #$20]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$dc56: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jra	l_dc6b                             	| [$dc58: jmp $dc6b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc5b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc5d: nop]
l_dc5e:
	GET_ADDRESS	0x70                       	| [$dc5e: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xa9                       	| [$dc60: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$dc62: and #$0f]
	or.b	#0x40,d0                          	| [$dc64: ora #$40]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$dc66: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$dc68: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc6a: nop]
l_dc6b:
	GET_ADDRESS	0x70                       	| [$dc6b: ldx $70]
	move.b	(a0),d1                         	| [...]
	jbsr	l_d269                            	| [$dc6d: jsr $d269]
	GET_ADDRESS	0x70                       	| [$dc70: ldx $70]
	move.b	(a0),d1                         	| [...]
	jra	l_dbd4                             	| [$dc72: jmp $dbd4]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc75: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_dc77:
	nop                                    	| [$dc77: nop]
	GET_ADDRESS	timer1_0013                	| [$dc78: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x3f,d0                         	| [$dc7a: and #$3f]
	bne	l_dce8                             	| [$dc7c: bne $dce8]
	GET_ADDRESS	0x90                       	| [$dc7e: inc $90]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x90                       	| [$dc80: lda $90]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x14,d0                         	| [$dc82: cmp #$14]
	* bcc=>bcs
	bcs	l_dcb4                             	| [$dc84: bcc $dcb4]
	clr.b	d0                               	| [$dc86: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x90                       	| [$dc88: sta $90]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x05,d1                        	| [$dc8a: ldx #$05]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dc8c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dc8e: nop]
l_dc8f:
	GET_ADDRESS	0x91                       	| [$dc8f: lda $91, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$dc91: and #$10]
	beq	l_dca6                             	| [$dc93: beq $dca6]
	GET_ADDRESS	0xa1                       	| [$dc95: lda $a1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$dc97: cmp #$02]
	beq	l_dcae                             	| [$dc99: beq $dcae]
	GET_ADDRESS	0xa1                       	| [$dc9b: dec $a1, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$dc9d: lda #$03]
	PUSH_SR
	GET_ADDRESS	0x91                       	| [$dc9f: sta $91, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	bne	l_dcae                             	| [$dca1: bne $dcae]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dca3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dca5: nop]
l_dca6:
	SET_XC_FLAGS                           	| [$dca6: sec]
	GET_ADDRESS	0x91                       	| [$dca7: lda $91, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x91                       	| [$dca9: rol $91, x]
	move.b	(a0,d1.w),d4	| [...]
	roxl.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$dcab: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dcad: nop]
l_dcae:
	subq.b	#1,d1                           	| [$dcae: dex]
	bpl	l_dc8f                             	| [$dcaf: bpl $dc8f]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dcb1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dcb3: nop]
l_dcb4:
	move.b	#0x05,d2                        	| [$dcb4: ldy #$05]
	move.b	#0x14,d1                        	| [$dcb6: ldx #$14]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dcb8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dcba: nop]
l_dcbb:
	GET_ADDRESS	0x0068                     	| [$dcbb: lda $0068, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_dcc9                             	| [$dcbe: bmi $dcc9]
	GET_ADDRESS	0x73                       	| [$dcc0: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_dcd5                             	| [$dcc2: beq $dcd5]
	GET_ADDRESS	0x73                       	| [$dcc4: dec $73, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dcc6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dcc8: nop]
l_dcc9:
	subq.b	#1,d2                           	| [$dcc9: dey]
	subq.b	#1,d1                           	| [$dcca: dex]
	subq.b	#1,d1                           	| [$dccb: dex]
	subq.b	#1,d1                           	| [$dccc: dex]
	subq.b	#1,d1                           	| [$dccd: dex]
	bpl	l_dcbb                             	| [$dcce: bpl $dcbb]
	bmi	l_dce8                             	| [$dcd0: bmi $dce8]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dcd2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dcd4: nop]
l_dcd5:
	move.b	d1,d0                           	| [$dcd5: txa]
	movem.w	d0,-(sp)                       	| [$dcd6: pha]
	move.b	d2,d0                           	| [$dcd7: tya]
	movem.w	d0,-(sp)                       	| [$dcd8: pha]
	PUSH_SR
	GET_ADDRESS	0x0a                       	| [$dcd9: sty $0a]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	jbsr	l_dceb                            	| [$dcdb: jsr $dceb]
	movem.w	(sp)+,d0                       	| [$dcde: pla]
	move.b	d0,d2                           	| [$dcdf: tay]
	movem.w	(sp)+,d0                       	| [$dce0: pla]
	move.b	d0,d1                           	| [$dce1: tax]
	jra	l_dcc9                             	| [$dce2: jmp $dcc9]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dce5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dce7: nop]
l_dce8:
	rts                                    	| [$dce8: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dce9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_dceb:
	nop                                    	| [$dceb: nop]
	GET_ADDRESS	0x0a                       	| [$dcec: ldy $0a]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x0068                     	| [$dcee: lda $0068, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$dcf1: and #$03]
	asl.b	#1,d0                            	| [$dcf3: asl a]
	move.b	d0,d2                           	| [$dcf4: tay]
	GET_ADDRESS	0xdd2a                     	| [$dcf5: lda $dd2a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$dcf8: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdd2b                     	| [$dcfa: lda $dd2b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$dcfd: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdd30                     	| [$dcff: lda $dd30, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$dd02: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x31                       	| [$dd04: lda $31, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0685                     	| [$dd06: cmp $0685, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0a                       	| [$dd09: lda $0a]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$dd0b: asl a]
	asl.b	#1,d0                            	| [$dd0c: asl a]
	move.b	d0,d1                           	| [$dd0d: tax]
	GET_ADDRESS	0x75                       	| [$dd0e: ldy $75, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS_Y	0x03                     	| [$dd10: lda ($03), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x72                       	| [$dd12: sta $72, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$dd14: and $05, x]
	and.b	(a0,d1.w),d0                     	| [...]
	PUSH_SR
	GET_ADDRESS	0x73                       	| [$dd16: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	clr.b	d0                               	| [$dd18: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x74                       	| [$dd1a: sta $74, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0xd875                     	| [$dd1c: ror $d875, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0xb1                       	| [$dd1f: adc $b1, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	bpl	l_dd2b                             	| [$dd22: bpl $dd2b]
	clr.b	d0                               	| [$dd24: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x75                       	| [$dd26: sta $75, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$dd28: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dd2a: nop]
l_dd2b:
	rts                                    	| [$dd2b: rts]
	SET_XC_FLAGS                           	| [$dd2c: sec]
	GET_ADDRESS	0xdd4d                     	| [$dd2d: cmp $dd4d, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xdd43                     	| [$dd31: cmp $dd43, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xdd5f                     	| [$dd35: cmp $dd5f, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x04                       	| [$dd3b: ora $04]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x04                       	| [$dd3e: ora $04]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x03                       	| [$dd46: ora $03]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x03                       	| [$dd49: ora $03]
	or.b	(a0),d0                           	| [...]
	or.b	#0x0d,d0                          	| [$dd57: ora #$0d]
	GET_ADDRESS	0x05                       	| [$dd5a: ora $05]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0xff                       	| [$dd5d: ora $ff]
	or.b	(a0),d0                           	| [...]
	or.b	#0x17,d0                          	| [$dd5f: ora #$17]
	or.b	#0x13,d0                          	| [$dd61: ora #$13]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dd63: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_dd65:
	GET_ADDRESS	0x6fa5                     	| [$dd65: ldx $6fa5]
	move.b	(a0),d1                         	| [...]
	bmi	l_dd83                             	| [$dd68: bmi $dd83]
	move.b	#0x05,d1                        	| [$dd6a: ldx #$05]
	PUSH_SR
	GET_ADDRESS	0x70                       	| [$dd6c: stx $70]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$dd6e: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$dd70: nop]
l_dd71:
	GET_ADDRESS	0x70                       	| [$dd71: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x68                       	| [$dd73: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$dd75: and #$f0]
	beq	l_dd87                             	| [$dd77: beq $dd87]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dd79: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_dd7b:
	nop                                    	| [$dd7b: nop]
l_dd7c:
	GET_ADDRESS	0x70                       	| [$dd7c: dec $70]
	subq.b	#1,(a0)                         	| [...]
	bpl	l_dd71                             	| [$dd7e: bpl $dd71]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dd80: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dd82: nop]
l_dd83:
	rts                                    	| [$dd83: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dd84: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0a8a                     	| [$dd86: ldx $0a8a]
	move.b	(a0),d1                         	| [...]
	asl.b	#1,d0                            	| [$dd89: asl a]
	move.b	d0,d2                           	| [$dd8a: tay]
	GET_ADDRESS	0x1802                     	| [$dd8b: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$dd8e: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1803                     	| [$dd90: lda $1803, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$dd93: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8a                       	| [$dd95: adc $8a, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	beq	l_dda4                             	| [$dd97: beq $dda4]
	GET_ADDRESS	0x8a                       	| [$dd99: dec $8a, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dd9b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xbb4c                     	| [$dd9d: ldx $bb4c]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf585                     	| [$dda0: dec $f585, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	nop                                    	| [$dda3: nop]
l_dda4:
	jbsr	l_e09d                            	| [$dda4: jsr $e09d]
	bne	l_dd9e                             	| [$dda7: bne $dd9e]
	jbsr	l_e0b6                            	| [$dda9: jsr $e0b6]
	bne	l_dd9e                             	| [$ddac: bne $dd9e]
	GET_ADDRESS	0x181e                     	| [$ddae: lda $181e]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x17                       	| [$ddb1: sta $17]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x181f                     	| [$ddb3: lda $181f]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x18                       	| [$ddb6: sta $18]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x70                       	| [$ddb8: lda $70]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$ddba: asl a]
	asl.b	#1,d0                            	| [$ddbb: asl a]
	move.b	d0,d1                           	| [$ddbc: tax]
	GET_ADDRESS	0x72                       	| [$ddbd: ldy $72, x]
	move.b	(a0,d1.w),d2                    	| [...]
	beq	l_ddd2                             	| [$ddbf: beq $ddd2]
	subq.b	#1,d2                           	| [$ddc1: dey]
	beq	l_ddd8                             	| [$ddc2: beq $ddd8]
	subq.b	#1,d2                           	| [$ddc4: dey]
	beq	l_ddde                             	| [$ddc5: beq $ddde]
	subq.b	#1,d2                           	| [$ddc7: dey]
	beq	l_dde4                             	| [$ddc8: beq $dde4]
	subq.b	#1,d2                           	| [$ddca: dey]
	beq	l_dded                             	| [$ddcb: beq $dded]
	bne	l_de13                             	| [$ddcd: bne $de13]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ddcf: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ddd1: nop]
l_ddd2:
	jra	l_dded                             	| [$ddd2: jmp $dded]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ddd5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x134c                     	| [$ddd7: ldx $134c]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf585                     	| [$ddda: dec $f585, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xed4c                     	| [$dddd: ror $ed4c]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xf585                     	| [$dde0: cmp $f585, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$dde3: nop]
l_dde4:
	GET_ADDRESS	0x17                       	| [$dde4: lda $17]
	move.b	(a0),d0                         	| [...]
	move.b	#0x08,d4	| [$dde6: adc #$08]
	addx.b	d4,d0                        	| [$dde6: adc #$08]
	PUSH_SR
	GET_ADDRESS	0x17                       	| [$dde8: sta $17]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$ddea: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x70a6                     	| [$ddec: ldx $70a6]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xa9                       	| [$ddef: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x71                       	| [$ddf1: sta $71]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	and.b	#0xf0,d0                         	| [$ddf3: and #$f0]
	cmp.b	#0x20,d0                         	| [$ddf5: cmp #$20]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$ddf7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ddf9: nop]
	beq	l_de1f                             	| [$ddfa: beq $de1f]
	cmp.b	#0x40,d0                         	| [$ddfc: cmp #$40]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$ddfe: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de00: nop]
	beq	l_de34                             	| [$de01: beq $de34]
	cmp.b	#0x60,d0                         	| [$de03: cmp #$60]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$de05: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de07: nop]
	beq	l_de49                             	| [$de08: beq $de49]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de0a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de0c: nop]
	jra	l_de5e                             	| [$de0d: jmp $de5e]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de10: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de12: nop]
l_de13:
	GET_ADDRESS	0x18                       	| [$de13: lda $18]
	move.b	(a0),d0                         	| [...]
	move.b	#0x08,d4	| [$de15: adc #$08]
	addx.b	d4,d0                        	| [$de15: adc #$08]
	PUSH_SR
	GET_ADDRESS	0x18                       	| [$de17: sta $18]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_dded                             	| [$de19: jmp $dded]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de1c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de1e: nop]
l_de1f:
	GET_ADDRESS	0x18                       	| [$de1f: lda $18]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de21: and #$f8]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$de23: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$de25: lda $04]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de27: and #$f8]
	GET_ADDRESS	0x05                       	| [$de29: cmp $05]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_de73                             	| [$de2b: bcs $de73]
	beq	l_de79                             	| [$de2d: beq $de79]
	bcc	l_de7f                             	| [$de2f: bcc $de7f]
         ^^^^^^ TODO: warning: stray bcc test
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de31: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de33: nop]
l_de34:
	GET_ADDRESS	0x18                       	| [$de34: lda $18]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de36: and #$f8]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$de38: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$de3a: lda $04]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de3c: and #$f8]
	GET_ADDRESS	0x05                       	| [$de3e: cmp $05]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_de85                             	| [$de40: bcs $de85]
	beq	l_de8b                             	| [$de42: beq $de8b]
	bcc	l_de91                             	| [$de44: bcc $de91]
         ^^^^^^ TODO: warning: stray bcc test
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de46: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de48: nop]
l_de49:
	GET_ADDRESS	0x17                       	| [$de49: lda $17]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de4b: and #$f8]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$de4d: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$de4f: lda $03]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de51: and #$f8]
	GET_ADDRESS	0x05                       	| [$de53: cmp $05]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_dea3                             	| [$de55: bcc $dea3]
	beq	l_de9d                             	| [$de57: beq $de9d]
	bcs	l_de97                             	| [$de59: bcs $de97]
         ^^^^^^ TODO: warning: review stray bcs test
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de5b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de5d: nop]
l_de5e:
	GET_ADDRESS	0x17                       	| [$de5e: lda $17]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de60: and #$f8]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$de62: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$de64: lda $03]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$de66: and #$f8]
	GET_ADDRESS	0x05                       	| [$de68: cmp $05]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_deb5                             	| [$de6a: bcc $deb5]
	beq	l_deaf                             	| [$de6c: beq $deaf]
	bcs	l_dea9                             	| [$de6e: bcs $dea9]
         ^^^^^^ TODO: warning: review stray bcs test
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de70: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de72: nop]
l_de73:
	jra	l_dee7                             	| [$de73: jmp $dee7]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de76: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de78: nop]
l_de79:
	jra	l_df01                             	| [$de79: jmp $df01]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de7c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de7e: nop]
l_de7f:
	jra	l_df1b                             	| [$de7f: jmp $df1b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de82: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de84: nop]
l_de85:
	jra	l_df35                             	| [$de85: jmp $df35]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de88: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de8a: nop]
l_de8b:
	jra	l_df55                             	| [$de8b: jmp $df55]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de8e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de90: nop]
l_de91:
	jra	l_df6f                             	| [$de91: jmp $df6f]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de94: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de96: nop]
l_de97:
	jra	l_df89                             	| [$de97: jmp $df89]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$de9a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$de9c: nop]
l_de9d:
	jra	l_dfa3                             	| [$de9d: jmp $dfa3]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dea0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dea2: nop]
l_dea3:
	jra	l_dfbd                             	| [$dea3: jmp $dfbd]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dea6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dea8: nop]
l_dea9:
	jra	l_dfd7                             	| [$dea9: jmp $dfd7]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$deac: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$deae: nop]
l_deaf:
	jra	l_dff1                             	| [$deaf: jmp $dff1]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$deb2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$deb4: nop]
l_deb5:
	jra	l_e00b                             	| [$deb5: jmp $e00b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$deb8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$deba: nop]
	GET_ADDRESS	0x70                       	| [$debb: ldx $70]
	move.b	(a0),d1                         	| [...]
	jbsr	l_d3c3                            	| [$debd: jsr $d3c3]
	bne	l_decd                             	| [$dec0: bne $decd]
	GET_ADDRESS	0x70                       	| [$dec2: ldx $70]
	move.b	(a0),d1                         	| [...]
	jbsr	l_d269                            	| [$dec4: jsr $d269]
	jra	l_dd7c                             	| [$dec7: jmp $dd7c]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$deca: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$decc: nop]
l_decd:
	GET_ADDRESS	0x70                       	| [$decd: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xa9                       	| [$decf: lda $a9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x71                       	| [$ded1: sta $71]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	and.b	#0xf0,d0                         	| [$ded3: and #$f0]
	cmp.b	#0x20,d0                         	| [$ded5: cmp #$20]
	beq	l_df01                             	| [$ded7: beq $df01]
	cmp.b	#0x40,d0                         	| [$ded9: cmp #$40]
	beq	l_de8b                             	| [$dedb: beq $de8b]
	cmp.b	#0x60,d0                         	| [$dedd: cmp #$60]
	beq	l_de9d                             	| [$dedf: beq $de9d]
	jra	l_dff1                             	| [$dee1: jmp $dff1]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dee4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dee6: nop]
l_dee7:
	jbsr	l_e059                            	| [$dee7: jsr $e059]
	beq	l_df4f                             	| [$deea: beq $df4f]
	jbsr	l_e07b                            	| [$deec: jsr $e07b]
	beq	l_df4f                             	| [$deef: beq $df4f]
	jbsr	l_e08c                            	| [$def1: jsr $e08c]
	beq	l_df4f                             	| [$def4: beq $df4f]
	jbsr	l_e06a                            	| [$def6: jsr $e06a]
	beq	l_df4f                             	| [$def9: beq $df4f]
	jra	l_e03d                             	| [$defb: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$defe: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$df00: nop]
l_df01:
	jbsr	l_e07b                            	| [$df01: jsr $e07b]
	beq	l_df4f                             	| [$df04: beq $df4f]
	jbsr	l_e059                            	| [$df06: jsr $e059]
	beq	l_df4f                             	| [$df09: beq $df4f]
	jbsr	l_e06a                            	| [$df0b: jsr $e06a]
	beq	l_df4f                             	| [$df0e: beq $df4f]
	jbsr	l_e08c                            	| [$df10: jsr $e08c]
	beq	l_df4f                             	| [$df13: beq $df4f]
	jra	l_e03d                             	| [$df15: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$df18: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$df1a: nop]
l_df1b:
	jbsr	l_e06a                            	| [$df1b: jsr $e06a]
	beq	l_df4f                             	| [$df1e: beq $df4f]
	jbsr	l_e07b                            	| [$df20: jsr $e07b]
	beq	l_df4f                             	| [$df23: beq $df4f]
	jbsr	l_e08c                            	| [$df25: jsr $e08c]
	beq	l_df4f                             	| [$df28: beq $df4f]
	jbsr	l_e059                            	| [$df2a: jsr $e059]
	beq	l_df4f                             	| [$df2d: beq $df4f]
	jra	l_e03d                             	| [$df2f: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$df32: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x5920                     	| [$df34: ldx $5920]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xf0,d1                         	| [$df37: cpx #$f0]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x20                       	| [$df39: ora $20, x]
	or.b	(a0,d1.w),d0                      	| [...]
	PUSH_SR
	GET_ADDRESS	0xf0e0                     	| [$df3b: sty $f0e0]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	bpl	l_df60                             	| [$df3e: bpl $df60]
	roxr.b	#1,d0                           	| [$df40: ror a]
	cmp.b	#0xf0,d1                         	| [$df41: cpx #$f0]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	jbsr	l_e07b                            	| [$df44: jsr $e07b]
	beq	l_df4f                             	| [$df47: beq $df4f]
	jra	l_e03d                             	| [$df49: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$df4c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x254c                     	| [$df4e: ldx $254c]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x85,d1                         	| [$df51: cpx #$85]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	SBC_X	0x6e                             	| [$df53: sbc $6e, x]
l_df55:
	jbsr	l_e08c                            	| [$df55: jsr $e08c]
	beq	l_df4f                             	| [$df58: beq $df4f]
	jbsr	l_e06a                            	| [$df5a: jsr $e06a]
	beq	l_df4f                             	| [$df5d: beq $df4f]
	jbsr	l_e059                            	| [$df5f: jsr $e059]
	beq	l_df4f                             	| [$df62: beq $df4f]
	jbsr	l_e07b                            	| [$df64: jsr $e07b]
	beq	l_df4f                             	| [$df67: beq $df4f]
	jra	l_e03d                             	| [$df69: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$df6c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x6a20                     	| [$df6e: ldx $6a20]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xf0,d1                         	| [$df71: cpx #$f0]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	jbsr	l_e08c                            	| [$df74: jsr $e08c]
	beq	l_df4f                             	| [$df77: beq $df4f]
	jbsr	l_e059                            	| [$df79: jsr $e059]
	beq	l_df4f                             	| [$df7c: beq $df4f]
	jbsr	l_e07b                            	| [$df7e: jsr $e07b]
	beq	l_df4f                             	| [$df81: beq $df4f]
	jra	l_e03d                             	| [$df83: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$df86: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$df88: nop]
l_df89:
	jbsr	l_e07b                            	| [$df89: jsr $e07b]
	beq	l_df4f                             	| [$df8c: beq $df4f]
	jbsr	l_e059                            	| [$df8e: jsr $e059]
	beq	l_df4f                             	| [$df91: beq $df4f]
	jbsr	l_e08c                            	| [$df93: jsr $e08c]
	beq	l_df4f                             	| [$df96: beq $df4f]
	jbsr	l_e06a                            	| [$df98: jsr $e06a]
	beq	l_df4f                             	| [$df9b: beq $df4f]
	jra	l_e03d                             	| [$df9d: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dfa0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dfa2: nop]
l_dfa3:
	jbsr	l_e059                            	| [$dfa3: jsr $e059]
	beq	l_e025                             	| [$dfa6: beq $e025]
	jbsr	l_e07b                            	| [$dfa8: jsr $e07b]
	beq	l_e025                             	| [$dfab: beq $e025]
	jbsr	l_e08c                            	| [$dfad: jsr $e08c]
	beq	l_e025                             	| [$dfb0: beq $e025]
	jbsr	l_e06a                            	| [$dfb2: jsr $e06a]
	beq	l_e025                             	| [$dfb5: beq $e025]
	jra	l_e03d                             	| [$dfb7: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dfba: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8c20                     	| [$dfbc: ldx $8c20]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xf0,d1                         	| [$dfbf: cpx #$f0]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	jbsr	l_e059                            	| [$dfc2: jsr $e059]
	beq	l_e025                             	| [$dfc5: beq $e025]
	jbsr	l_e07b                            	| [$dfc7: jsr $e07b]
	beq	l_e025                             	| [$dfca: beq $e025]
	jbsr	l_e06a                            	| [$dfcc: jsr $e06a]
	beq	l_e025                             	| [$dfcf: beq $e025]
	jra	l_e03d                             	| [$dfd1: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dfd4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x7b20                     	| [$dfd6: ldx $7b20]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xf0,d1                         	| [$dfd9: cpx #$f0]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	eor.b	#0x20,d0                         	| [$dfdb: eor #$20]
	roxr.b	#1,d0                           	| [$dfdd: ror a]
	cmp.b	#0xf0,d1                         	| [$dfde: cpx #$f0]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	jbsr	l_e08c                            	| [$dfe1: jsr $e08c]
	beq	l_e025                             	| [$dfe4: beq $e025]
	jbsr	l_e059                            	| [$dfe6: jsr $e059]
	beq	l_e025                             	| [$dfe9: beq $e025]
	jra	l_e03d                             	| [$dfeb: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$dfee: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$dff0: nop]
l_dff1:
	jbsr	l_e06a                            	| [$dff1: jsr $e06a]
	beq	l_e025                             	| [$dff4: beq $e025]
	jbsr	l_e08c                            	| [$dff6: jsr $e08c]
	beq	l_e025                             	| [$dff9: beq $e025]
	jbsr	l_e07b                            	| [$dffb: jsr $e07b]
	beq	l_e025                             	| [$dffe: beq $e025]
	jbsr	l_e059                            	| [$e000: jsr $e059]
	beq	l_e025                             	| [$e003: beq $e025]
	jra	l_e03d                             	| [$e005: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e008: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e00a: nop]
l_e00b:
	jbsr	l_e08c                            	| [$e00b: jsr $e08c]
	beq	l_e025                             	| [$e00e: beq $e025]
	jbsr	l_e06a                            	| [$e010: jsr $e06a]
	beq	l_e025                             	| [$e013: beq $e025]
	jbsr	l_e07b                            	| [$e015: jsr $e07b]
	beq	l_e025                             	| [$e018: beq $e025]
	jbsr	l_e059                            	| [$e01a: jsr $e059]
	beq	l_e025                             	| [$e01d: beq $e025]
	jra	l_e03d                             	| [$e01f: jmp $e03d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e022: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e024: nop]
l_e025:
	GET_ADDRESS	0x70                       	| [$e025: ldx $70]
	move.b	(a0),d1                         	| [...]
	clr.b	d0                               	| [$e027: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x74                       	| [$e029: sta $74, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	move.b	#0x10,d0                        	| [$e02b: lda #$10]
	PUSH_SR
	GET_ADDRESS	0x8a                       	| [$e02d: sta $8a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e02f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e031: nop]
	GET_ADDRESS	0x70                       	| [$e032: ldx $70]
	move.b	(a0),d1                         	| [...]
	jbsr	l_d269                            	| [$e034: jsr $d269]
	jra	l_dd7b                             	| [$e037: jmp $dd7b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e03a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e03c: nop]
l_e03d:
	GET_ADDRESS	0x70                       	| [$e03d: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x68                       	| [$e03f: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$e041: and #$03]
	move.b	d0,d1                           	| [$e043: tax]
	GET_ADDRESS	0xbe                       	| [$e044: dec $be, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x70                       	| [$e046: ldx $70]
	move.b	(a0),d1                         	| [...]
	asl.b	#1,d0                            	| [$e048: asl a]
	asl.b	#1,d0                            	| [$e049: asl a]
	move.b	d0,d2                           	| [$e04a: tay]
	clr.b	d0                               	| [$e04b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1800                     	| [$e04d: sta $1800, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	st.b	d0                                	| [$e050: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$e052: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jra	l_dd7c                             	| [$e054: jmp $dd7c]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e057: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e059:
	nop                                    	| [$e059: nop]
	GET_ADDRESS	0x70                       	| [$e05a: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x71                       	| [$e05c: lda $71]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e05e: and #$0f]
	or.b	#0x60,d0                          	| [$e060: ora #$60]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$e062: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jbsr	l_d3c3                            	| [$e064: jsr $d3c3]
	rts                                    	| [$e067: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e068: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e06a:
	nop                                    	| [$e06a: nop]
	GET_ADDRESS	0x70                       	| [$e06b: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x71                       	| [$e06d: lda $71]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e06f: and #$0f]
	or.b	#0x80,d0                          	| [$e071: ora #$80]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$e073: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jbsr	l_d3c3                            	| [$e075: jsr $d3c3]
	rts                                    	| [$e078: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e079: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e07b:
	nop                                    	| [$e07b: nop]
	GET_ADDRESS	0x70                       	| [$e07c: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x71                       	| [$e07e: lda $71]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e080: and #$0f]
	or.b	#0x20,d0                          	| [$e082: ora #$20]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$e084: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jbsr	l_d3c3                            	| [$e086: jsr $d3c3]
	rts                                    	| [$e089: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e08a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e08c:
	nop                                    	| [$e08c: nop]
	GET_ADDRESS	0x70                       	| [$e08d: ldx $70]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x71                       	| [$e08f: lda $71]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e091: and #$0f]
	or.b	#0x40,d0                          	| [$e093: ora #$40]
	PUSH_SR
	GET_ADDRESS	0xa9                       	| [$e095: sta $a9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jbsr	l_d3c3                            	| [$e097: jsr $d3c3]
	rts                                    	| [$e09a: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e09b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e09d:
	nop                                    	| [$e09d: nop]
	GET_ADDRESS	0x04                       	| [$e09e: lda $04]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e0a0: and #$0f]
	cmp.b	#0x0f,d0                         	| [$e0a2: cmp #$0f]
	beq	l_e0b3                             	| [$e0a4: beq $e0b3]
	cmp.b	#0x0e,d0                         	| [$e0a6: cmp #$0e]
	beq	l_e0b3                             	| [$e0a8: beq $e0b3]
	cmp.b	#0x0d,d0                         	| [$e0aa: cmp #$0d]
	beq	l_e0b3                             	| [$e0ac: beq $e0b3]
	cmp.b	#0x0c,d0                         	| [$e0ae: cmp #$0c]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$e0b0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e0b2: nop]
l_e0b3:
	rts                                    	| [$e0b3: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e0b4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e0b6:
	nop                                    	| [$e0b6: nop]
	GET_ADDRESS	0x03                       	| [$e0b7: lda $03]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x08                       	| [$e0b9: sta $08]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x08                       	| [$e0bb: inc $08]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x08                       	| [$e0bd: inc $08]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x08                       	| [$e0bf: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0c,d0                         	| [$e0c1: and #$0c]
	beq	l_e0e3                             	| [$e0c3: beq $e0e3]
	cmp.b	#0x08,d0                         	| [$e0c5: cmp #$08]
	bne	l_e0f8                             	| [$e0c7: bne $e0f8]
	GET_ADDRESS	0x08                       	| [$e0c9: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$e0cb: and #$f0]
	cmp.b	#0x10,d0                         	| [$e0cd: cmp #$10]
	beq	l_e0f8                             	| [$e0cf: beq $e0f8]
	cmp.b	#0x40,d0                         	| [$e0d1: cmp #$40]
	beq	l_e0f8                             	| [$e0d3: beq $e0f8]
	cmp.b	#0x70,d0                         	| [$e0d5: cmp #$70]
	beq	l_e0f8                             	| [$e0d7: beq $e0f8]
	cmp.b	#0xa0,d0                         	| [$e0d9: cmp #$a0]
	beq	l_e0f8                             	| [$e0db: beq $e0f8]
	cmp.b	#0xd0,d0                         	| [$e0dd: cmp #$d0]
	rts                                    	| [$e0df: rts]
          ^^^^^^ TODO: review stray cmp (check caller)
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e0e0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e0e2: nop]
l_e0e3:
	GET_ADDRESS	0x08                       	| [$e0e3: lda $08]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$e0e5: and #$f0]
	cmp.b	#0x30,d0                         	| [$e0e7: cmp #$30]
	beq	l_e0f8                             	| [$e0e9: beq $e0f8]
	cmp.b	#0x60,d0                         	| [$e0eb: cmp #$60]
	beq	l_e0f8                             	| [$e0ed: beq $e0f8]
	cmp.b	#0x90,d0                         	| [$e0ef: cmp #$90]
	beq	l_e0f8                             	| [$e0f1: beq $e0f8]
	cmp.b	#0xc0,d0                         	| [$e0f3: cmp #$c0]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$e0f5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e0f7: nop]
l_e0f8:
	rts                                    	| [$e0f8: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e0f9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e0fb:
	nop                                    	| [$e0fb: nop]
	PUSH_SR
	GET_ADDRESS	0x11                       	| [$e0fc: stx $11]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x12                       	| [$e0fe: sty $12]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x64                       	| [$e100: ldy $64]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0xe188                     	| [$e102: lda $e188, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xc4                       	| [$e105: sta $c4]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	d2,d0                           	| [$e109: tya]
	asl.b	#1,d0                            	| [$e10a: asl a]
	move.b	d0,d1                           	| [$e10b: tax]
	GET_ADDRESS	0xe176                     	| [$e10c: lda $e176, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e10f: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe177                     	| [$e111: lda $e177, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$e114: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x82                       	| [$e116: lda $82, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_X_IND	0xaa                         	| [$e118: sbc ($aa, x)]
	clr.b	d2                               	| [$e11a: ldy #$00]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e11c: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0xc88a                     	| [$e11e: ldy $c88a]
	move.b	(a0),d2                         	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e121: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	#0x20,d2                        	| [$e123: ldy #$20]
	addq.b	#1,d1                           	| [$e125: inx]
	move.b	d1,d0                           	| [$e126: txa]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e127: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d1                           	| [$e129: inx]
	move.b	d1,d0                           	| [$e12a: txa]
	addq.b	#1,d2                           	| [$e12b: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e12c: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$e12e: lda $00]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x60                       	| [$e130: sta $60]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x12                       	| [$e132: ldy $12]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x11                       	| [$e134: ldx $11]
	move.b	(a0),d1                         	| [...]
	move.b	#0x0b,d0                        	| [$e136: lda #$0b]
	jbsr	l_ea5d                            	| [$e138: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e13b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8560                     	| [$e13d: ldx $8560]
	move.b	(a0),d1                         	| [...]
	SBC_X	0xea                             	| [$e140: sbc $ea, x]
	GET_ADDRESS	0xc4                       	| [$e142: lda $c4]
	move.b	(a0),d0                         	| [...]
	beq	l_e175                             	| [$e144: beq $e175]
	jbsr	l_e8f2                            	| [$e146: jsr $e8f2]
	GET_ADDRESS	timer1_0013                	| [$e149: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x3f,d0                         	| [$e14b: and #$3f]
	bne	l_e175                             	| [$e14d: bne $e175]
	GET_ADDRESS	0xc4                       	| [$e14f: dec $c4]
	subq.b	#1,(a0)                         	| [...]
	bne	l_e175                             	| [$e151: bne $e175]
	GET_ADDRESS	0x63                       	| [$e153: lda $63]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$e155: asl a]
	move.b	d0,d1                           	| [$e156: tax]
	GET_ADDRESS	0xe176                     	| [$e157: lda $e176, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e15a: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X	0x77                             	| [$e15c: sbc $77, x]
	SBC_X_IND	0x85                         	| [$e15e: sbc ($85, x)]
	clr.b	d0                               	| [$e161: lda #$00]
	move.b	d0,d2                           	| [$e163: tay]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e164: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$e166: tay]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e167: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	#0x20,d2                        	| [$e169: ldy #$20]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e16b: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$e16d: tay]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e16e: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	0x60                       	| [$e170: sta $60]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e172: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4f60                     	| [$e174: ldx $4f60]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS_Y	0xcf                     	| [$e177: ora ($cf), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS_Y	0xcf                     	| [$e179: ora ($cf), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS_Y	0x8f                     	| [$e17b: ora ($8f), y]
	or.b	(a0,d2.w),d0                      	| [...]
	bpl	l_e194                             	| [$e17d: bpl $e194]
	GET_ADDRESS_Y	0x8f                     	| [$e17f: ora ($8f), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS_Y	0xbc                     	| [$e181: ora ($bc), y]
	or.b	(a0,d2.w),d0                      	| [...]
	cmp.b	#0xb8,d2                         	| [$e183: cpy #$b8]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xb8c0                     	| [$e185: ldy $b8c0, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x05                       	| [$e189: asl $05]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$e18b: ora $05]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x85                       	| [$e18d: ora $85]
	or.b	(a0),d0                           	| [...]
	SBC_X	0xea                             	| [$e18f: sbc $ea, x]
	clr.b	d0                               	| [$e191: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0200                     	| [$e193: sta $0200]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$e196: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$e198: nop]
l_e199:
	GET_ADDRESS	0x0200                     	| [$e199: ldy $0200]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x0202                     	| [$e19c: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bne	l_e1a5                             	| [$e19f: bne $e1a5]
	rts                                    	| [$e1a1: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e1a2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0f29                     	| [$e1a4: ldx $0f29]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e1a7: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0203                     	| [$e1a9: lda $0203, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$e1ac: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x04                       	| [$e1ae: lda $04, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$e1b1: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e1b3: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$e1b6: and #$f0]
	lsr.b	#1,d0                            	| [$e1b8: lsr a]
	lsr.b	#1,d0                            	| [$e1b9: lsr a]
	lsr.b	#1,d0                            	| [$e1ba: lsr a]
	move.b	d0,d1                           	| [$e1bb: tax]
	GET_ADDRESS	0xe1c9                     	| [$e1bc: lda $e1c9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$e1bf: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe1ca                     	| [$e1c1: lda $e1ca, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x07                       	| [$e1c4: sta $07]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e1c6:
	GET_ADDRESS	0x0006                     	| [$e1c6: cpy $0006]
	cmp.b	(a0),d2                          	| [...]
brk $e2
   ^^^^ TODO: unknown/unsupported instruction brk
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	CLR_XC_FLAGS                           	| [$e1cb: clc]
	GET_ADDRESS	0xe2                       	| [$e1cd: rol $e2, x]
	move.b	(a0,d1.w),d4	| [...]
	roxl.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	SET_I_FLAG                             	| [$e1cf: sei]
	bcs	l_e1b5                             	| [$e1d1: bcs $e1b5]
         ^^^^^^ TODO: warning: review stray bcs test
	addq.b	#1,d1                           	| [$e1d3: inx]
brk $e4
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0xefe1                     	| [$e1d7: cpx $efe1]
	cmp.b	(a0),d1                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	SBC_X_IND	0xf2                         	| [$e1da: sbc ($f2, x)]
	SBC_X_IND	0x20                         	| [$e1dc: sbc ($20, x)]
	CLR_I_FLAG                             	| [$e1df: cli]
	bcc	l_e1c6                             	| [$e1e1: bcc $e1c6]
         ^^^^^^ TODO: warning: stray bcc test
	addq.b	#1,d2                           	| [$e1e3: iny]
	GET_ADDRESS	0x03                       	| [$e1e6: cpx $03]
	cmp.b	(a0),d1                          	| [...]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	dummy_write_00f5           	| [$e1e9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e1eb: nop]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e1ec: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xf585                     	| [$e1ee: ldx $f585]
	move.b	(a0),d1                         	| [...]
	nop                                    	| [$e1f1: nop]
brk $b9
   ^^^^ TODO: unknown/unsupported instruction brk
	and.b	#0x0f,d0                         	| [$e1f6: and #$0f]
	or.b	#0x10,d0                          	| [$e1f8: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e1fa: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$e1fd: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0xf585                     	| [$e1ff: ror $f585]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	nop                                    	| [$e202: nop]
l_e203:
	jbsr	l_e5be                            	| [$e203: jsr $e5be]
	GET_ADDRESS	0x0200                     	| [$e206: inc $0200]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x0200                     	| [$e209: inc $0200]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x0200                     	| [$e20c: inc $0200]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x0200                     	| [$e20f: inc $0200]
	addq.b	#1,(a0)                         	| [...]
	jra	l_e199                             	| [$e212: jmp $e199]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e215: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e217: nop]
	jbsr	l_e516                            	| [$e218: jsr $e516]
	bne	l_e230                             	| [$e21b: bne $e230]
	jbsr	l_e56e                            	| [$e21d: jsr $e56e]
	bne	l_e230                             	| [$e220: bne $e230]
	jbsr	l_cca2                            	| [$e222: jsr $cca2]
	move.b	d2,d0                           	| [$e225: tya]
	move.b	d0,d1                           	| [$e226: tax]
	GET_ADDRESS	0x0204                     	| [$e227: inc $0204, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	jbsr	l_eb6b                            	| [$e22a: jsr $eb6b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e22d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e22f: nop]
l_e230:
	jra	l_e203                             	| [$e230: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e233: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e235: nop]
	GET_ADDRESS	0x0205                     	| [$e236: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$e239: and #$10]
	bne	l_e25b                             	| [$e23b: bne $e25b]
	SET_XC_FLAGS                           	| [$e23d: sec]
	GET_ADDRESS	0x05                       	| [$e23e: lda $05]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x08                           	| [$e240: sbc #$08]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$e242: sta $05]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0204                     	| [$e244: sta $0204, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	jbsr	l_e4a9                            	| [$e247: jsr $e4a9]
	GET_ADDRESS	0x0205                     	| [$e24a: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e24d: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e24f: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e252: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e254: nop]
l_e255:
	jra	l_e203                             	| [$e255: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e258: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e25a: nop]
l_e25b:
	GET_ADDRESS	timer1_0013                	| [$e25b: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e25d: and #$03]
	bne	l_e255                             	| [$e25f: bne $e255]
	GET_ADDRESS	0x0205                     	| [$e261: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e264: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e266: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e269: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e26c: and #$0f]
	or.b	#0x30,d0                          	| [$e26e: ora #$30]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e270: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e255                             	| [$e273: bne $e255]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e275: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e277: nop]
	GET_ADDRESS	0x0205                     	| [$e278: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$e27b: and #$10]
	bne	l_e293                             	| [$e27d: bne $e293]
	jbsr	l_e4b2                            	| [$e27f: jsr $e4b2]
	GET_ADDRESS	0x0205                     	| [$e282: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e285: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e287: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e28a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e28c: nop]
l_e28d:
	jra	l_e203                             	| [$e28d: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e290: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e292: nop]
l_e293:
	GET_ADDRESS	timer1_0013                	| [$e293: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e295: and #$03]
	bne	l_e28d                             	| [$e297: bne $e28d]
	GET_ADDRESS	0x0205                     	| [$e299: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e29c: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e29e: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e2a1: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e2a4: and #$0f]
	or.b	#0x40,d0                          	| [$e2a6: ora #$40]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e2a8: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e28d                             	| [$e2ab: bne $e28d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e2ad: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e2af: nop]
	GET_ADDRESS	0x0205                     	| [$e2b0: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$e2b3: and #$10]
	bne	l_e2cb                             	| [$e2b5: bne $e2cb]
	jbsr	l_e4bb                            	| [$e2b7: jsr $e4bb]
	GET_ADDRESS	0x0205                     	| [$e2ba: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e2bd: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e2bf: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e2c2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e2c4: nop]
l_e2c5:
	jra	l_e203                             	| [$e2c5: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e2c8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e2ca: nop]
l_e2cb:
	GET_ADDRESS	timer1_0013                	| [$e2cb: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e2cd: and #$03]
	bne	l_e2c5                             	| [$e2cf: bne $e2c5]
	GET_ADDRESS	0x0205                     	| [$e2d1: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e2d4: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e2d6: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e2d9: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x50,d0                          	| [$e2dc: ora #$50]
	and.b	#0x5f,d0                         	| [$e2de: and #$5f]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e2e0: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e2c5                             	| [$e2e3: bne $e2c5]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e2e5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e2e7: nop]
	GET_ADDRESS	0x0205                     	| [$e2e8: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$e2eb: and #$10]
	bne	l_e303                             	| [$e2ed: bne $e303]
	jbsr	l_e4c4                            	| [$e2ef: jsr $e4c4]
	GET_ADDRESS	0x0205                     	| [$e2f2: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e2f5: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e2f7: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e2fa: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e2fc: nop]
l_e2fd:
	jra	l_e203                             	| [$e2fd: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e300: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e302: nop]
l_e303:
	GET_ADDRESS	timer1_0013                	| [$e303: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e305: and #$03]
	bne	l_e2fd                             	| [$e307: bne $e2fd]
	GET_ADDRESS	0x0205                     	| [$e309: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e30c: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e30e: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e311: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x60,d0                          	| [$e314: ora #$60]
	and.b	#0x6f,d0                         	| [$e316: and #$6f]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e318: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e2fd                             	| [$e31b: bne $e2fd]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e31d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05b9                     	| [$e31f: ldx $05b9]
	move.b	(a0),d1                         	| [...]
	and.b	#0x10,d0                         	| [$e323: and #$10]
	bne	l_e33b                             	| [$e325: bne $e33b]
	jbsr	l_e4a9                            	| [$e327: jsr $e4a9]
	GET_ADDRESS	0x0205                     	| [$e32a: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e32d: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e32f: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e332: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x034c                     	| [$e334: ldx $034c]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e338: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e33a: nop]
l_e33b:
	GET_ADDRESS	timer1_0013                	| [$e33b: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e33d: and #$03]
	bne	l_e335                             	| [$e33f: bne $e335]
	GET_ADDRESS	0x0205                     	| [$e341: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e344: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e346: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e349: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e34c: and #$0f]
	or.b	#0xb0,d0                          	| [$e34e: ora #$b0]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e350: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e335                             	| [$e353: bne $e335]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e355: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05b9                     	| [$e357: ldx $05b9]
	move.b	(a0),d1                         	| [...]
	and.b	#0x10,d0                         	| [$e35b: and #$10]
	bne	l_e373                             	| [$e35d: bne $e373]
	jbsr	l_e4b2                            	| [$e35f: jsr $e4b2]
	GET_ADDRESS	0x0205                     	| [$e362: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e365: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e367: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e36a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x034c                     	| [$e36c: ldx $034c]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e370: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e372: nop]
l_e373:
	GET_ADDRESS	timer1_0013                	| [$e373: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e375: and #$03]
	bne	l_e36d                             	| [$e377: bne $e36d]
	GET_ADDRESS	0x0205                     	| [$e379: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e37c: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e37e: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e381: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0xc0,d0                          	| [$e384: ora #$c0]
	and.b	#0xcf,d0                         	| [$e386: and #$cf]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e388: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e36d                             	| [$e38b: bne $e36d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e38d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05b9                     	| [$e38f: ldx $05b9]
	move.b	(a0),d1                         	| [...]
	and.b	#0x10,d0                         	| [$e393: and #$10]
	bne	l_e3ab                             	| [$e395: bne $e3ab]
	jbsr	l_e4bb                            	| [$e397: jsr $e4bb]
	GET_ADDRESS	0x0205                     	| [$e39a: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e39d: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e39f: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e3a2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x034c                     	| [$e3a4: ldx $034c]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e3a8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e3aa: nop]
l_e3ab:
	GET_ADDRESS	timer1_0013                	| [$e3ab: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e3ad: and #$03]
	bne	l_e3a5                             	| [$e3af: bne $e3a5]
	GET_ADDRESS	0x0205                     	| [$e3b1: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e3b4: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e3b6: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e3b9: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0xd0,d0                          	| [$e3bc: ora #$d0]
	and.b	#0xdf,d0                         	| [$e3be: and #$df]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e3c0: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e3a5                             	| [$e3c3: bne $e3a5]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e3c5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05b9                     	| [$e3c7: ldx $05b9]
	move.b	(a0),d1                         	| [...]
	and.b	#0x10,d0                         	| [$e3cb: and #$10]
	bne	l_e3e3                             	| [$e3cd: bne $e3e3]
	jbsr	l_e4c4                            	| [$e3cf: jsr $e4c4]
	GET_ADDRESS	0x0205                     	| [$e3d2: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e3d5: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e3d7: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e3da: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x034c                     	| [$e3dc: ldx $034c]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e3e0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e3e2: nop]
l_e3e3:
	GET_ADDRESS	timer1_0013                	| [$e3e3: lda timer1_0013]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$e3e5: and #$03]
	bne	l_e3dd                             	| [$e3e7: bne $e3dd]
	GET_ADDRESS	0x0205                     	| [$e3e9: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e3ec: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e3ee: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e3f1: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0xe0,d0                          	| [$e3f4: ora #$e0]
	and.b	#0xef,d0                         	| [$e3f6: and #$ef]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e3f8: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	bne	l_e3dd                             	| [$e3fb: bne $e3dd]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e3fd: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa220                     	| [$e3ff: ldx $a220]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xaa98                     	| [$e402: cpy $aa98]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0204                     	| [$e405: inc $0204, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0204                     	| [$e408: lda $0204, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x07,d0                         	| [$e40b: and #$07]
	bne	l_e451                             	| [$e40d: bne $e451]
	GET_ADDRESS	0x0202                     	| [$e40f: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e412: and #$0f]
	or.b	#0x10,d0                          	| [$e414: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e416: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0205                     	| [$e419: lda $0205, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e41c: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e41e: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0206                     	| [$e421: lda $0206, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e424: and #$0f]
	cmp.b	#0x0f,d0                         	| [$e426: cmp #$0f]
	beq	l_e436                             	| [$e428: beq $e436]
	GET_ADDRESS	0x0206                     	| [$e42a: lda $0206, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$e42d: and #$f0]
	cmp.b	#0xf0,d0                         	| [$e42f: cmp #$f0]
	bne	l_e451                             	| [$e431: bne $e451]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e433: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e435: nop]
l_e436:
	clr.b	d0                               	| [$e436: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e438: sta $0205, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0202                     	| [$e43b: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0xf0,d0                          	| [$e43e: ora #$f0]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e440: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	clr.b	d0                               	| [$e443: lda #$00]
	jbsr	l_e98c                            	| [$e445: jsr $e98c]
	jbsr	l_e5fa                            	| [$e448: jsr $e5fa]
	jbsr	l_e7c8                            	| [$e44b: jsr $e7c8]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e44e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e450: nop]
l_e451:
	jra	l_e203                             	| [$e451: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e454: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e456: nop]
	jbsr	l_cca2                            	| [$e457: jsr $cca2]
	move.b	d2,d0                           	| [$e45a: tya]
	move.b	d0,d1                           	| [$e45b: tax]
	GET_ADDRESS	0x0205                     	| [$e45c: lda $0205, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e45f: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0205                     	| [$e461: sta $0205, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	beq	l_e46e                             	| [$e464: beq $e46e]
	GET_ADDRESS	0x0205                     	| [$e466: dec $0205, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	bne	l_e484                             	| [$e469: bne $e484]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e46b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e46d: nop]
l_e46e:
	GET_ADDRESS	0x0202                     	| [$e46e: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e471: and #$0f]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e473: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	clr.b	d0                               	| [$e476: lda #$00]
	jbsr	l_e98c                            	| [$e478: jsr $e98c]
	jbsr	l_e5fa                            	| [$e47b: jsr $e5fa]
	jra	l_e203                             	| [$e47e: jmp $e203]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e481: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e483: nop]
l_e484:
	GET_ADDRESS	0x0202                     	| [$e484: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e487: and #$0f]
	or.b	#0x10,d0                          	| [$e489: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e48b: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0204                     	| [$e48e: lda $0204, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0x02,d4	| [$e491: adc #$02]
	addx.b	d4,d0                        	| [$e491: adc #$02]
	PUSH_SR
	GET_ADDRESS	0x0204                     	| [$e493: sta $0204, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	jra	l_e203                             	| [$e496: jmp $e203]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x05                     	| [$e49b: ora ($05, x)]
	or.b	(a0),d0                           	| [...]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x05                     	| [$e4a2: ora ($05, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e4a7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e4a9:
	nop                                    	| [$e4a9: nop]
	clr.b	d0                               	| [$e4aa: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x11                       	| [$e4ac: sta $11]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	beq	l_e4cc                             	| [$e4ae: beq $e4cc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e4b0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e4b2:
	nop                                    	| [$e4b2: nop]
	move.b	#0x01,d0                        	| [$e4b3: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x11                       	| [$e4b5: sta $11]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	beq	l_e4cc                             	| [$e4b7: beq $e4cc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e4b9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e4bb:
	nop                                    	| [$e4bb: nop]
	move.b	#0x02,d0                        	| [$e4bc: lda #$02]
	PUSH_SR
	GET_ADDRESS	0x11                       	| [$e4be: sta $11]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	beq	l_e4cc                             	| [$e4c0: beq $e4cc]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e4c2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e4c4:
	nop                                    	| [$e4c4: nop]
	move.b	#0x03,d0                        	| [$e4c5: lda #$03]
	PUSH_SR
	GET_ADDRESS	0x11                       	| [$e4c7: sta $11]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e4c9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e4cb: nop]
l_e4cc:
	move.b	d2,d0                           	| [$e4cc: tya]
	movem.w	d0,-(sp)                       	| [$e4cd: pha]
	GET_ADDRESS	0x11                       	| [$e4ce: ldx $11]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x05                       	| [$e4d0: lda $05]
	move.b	(a0),d0                         	| [...]
	CLR_XC_FLAGS                           	| [$e4d2: clc]
	GET_ADDRESS	0xe50c                     	| [$e4d3: adc $e50c, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$e4d6: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_cc99                            	| [$e4d8: jsr $cc99]
	move.b	#0x01,d2                        	| [$e4db: ldy #$01]
	GET_ADDRESS	0x11                       	| [$e4dd: ldx $11]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x06                       	| [$e4df: lda $06]
	move.b	(a0),d0                         	| [...]
	and.b	#0xfb,d0                         	| [$e4e1: and #$fb]
	PUSH_SR
	GET_ADDRESS	0x06                       	| [$e4e3: sta $06]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_Y	0x05                     	| [$e4e5: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$e4e7: clc]
	GET_ADDRESS	0xe510                     	| [$e4e8: adc $e510, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$e4eb: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$e4ed: iny]
	GET_ADDRESS_Y	0x05                     	| [$e4ee: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$e4f0: clc]
	GET_ADDRESS	0xe510                     	| [$e4f1: adc $e510, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$e4f4: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	#0x21,d2                        	| [$e4f6: ldy #$21]
	GET_ADDRESS_Y	0x05                     	| [$e4f8: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$e4fa: clc]
	GET_ADDRESS	0xe510                     	| [$e4fb: adc $e510, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$e4fe: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$e500: iny]
	GET_ADDRESS_Y	0x05                     	| [$e501: lda ($05), y]
	move.b	(a0,d2.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$e503: clc]
	GET_ADDRESS	0xe510                     	| [$e504: adc $e510, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x05                     	| [$e507: sta ($05), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$e509: pla]
	move.b	d0,d2                           	| [$e50a: tay]
	rts                                    	| [$e50b: rts]
	GET_ADDRESS_X	0x04                     	| [$e50f: ora ($04, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e514: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e516:
	GET_ADDRESS	0x05a5                     	| [$e516: ldx $05a5]
	move.b	(a0),d1                         	| [...]
	and.b	#0x07,d0                         	| [$e519: and #$07]
	bne	l_e569                             	| [$e51b: bne $e569]
	GET_ADDRESS	0x0207                     	| [$e51d: lda $0207, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x04                       	| [$e520: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	bne	l_e569                             	| [$e522: bne $e569]
	GET_ADDRESS	0x0208                     	| [$e524: lda $0208, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$e527: sec]
	GET_ADDRESS	0x05                       	| [$e528: sbc $05]
	sbc	(a0),d0                            	| [...]
	cmp.b	#0x09,d0                         	| [$e52a: cmp #$09]
	* bcs=>bcc
	bcc	l_e569                             	| [$e52c: bcs $e569]
	GET_ADDRESS	0x0202                     	| [$e52e: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e531: and #$0f]
	or.b	#0x20,d0                          	| [$e533: ora #$20]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e535: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0206                     	| [$e538: lda $0206, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$e53b: and #$f0]
	cmp.b	#0xf0,d0                         	| [$e53d: cmp #$f0]
	beq	l_e55e                             	| [$e53f: beq $e55e]
	GET_ADDRESS	0x0206                     	| [$e541: lda $0206, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e544: and #$0f]
	cmp.b	#0x0f,d0                         	| [$e546: cmp #$0f]
	beq	l_e55e                             	| [$e548: beq $e55e]
	GET_ADDRESS	0x0206                     	| [$e54a: lda $0206, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e54d: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x0206                     	| [$e54f: sta $0206, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0208                     	| [$e552: lda $0208, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$e555: clc]
	add.b	#0x04,d0                        	| [$e556: adc #$04]
	PUSH_SR
	GET_ADDRESS	0x0208                     	| [$e558: sta $0208, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e55b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0aa9                     	| [$e55d: ldx $0aa9]
	move.b	(a0),d1                         	| [...]
	jbsr	l_ea5d                            	| [$e560: jsr $ea5d]
	st.b	d0                                	| [$e563: lda #$ff]
	rts                                    	| [$e565: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e566: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e568: nop]
l_e569:
	clr.b	d0                               	| [$e569: lda #$00]
	rts                                    	| [$e56b: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e56c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e56e:
	GET_ADDRESS	0x05a5                     	| [$e56e: ldx $05a5]
	move.b	(a0),d1                         	| [...]
	and.b	#0x0f,d0                         	| [$e571: and #$0f]
	cmp.b	#0x08,d0                         	| [$e573: cmp #$08]
	bne	l_e5a4                             	| [$e575: bne $e5a4]
	GET_ADDRESS	0x04                       	| [$e577: lda $04]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$e579: lsr a]
	lsr.b	#1,d0                            	| [$e57a: lsr a]
	lsr.b	#1,d0                            	| [$e57b: lsr a]
	lsr.b	#1,d0                            	| [$e57c: lsr a]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$e57d: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x10                       	| [$e57f: lda $10]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$e581: sec]
	GET_ADDRESS	0x12                       	| [$e582: sbc $12]
	sbc	(a0),d0                            	| [...]
	PUSH_SR
	GET_ADDRESS	0x12                       	| [$e584: sta $12]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x05                       	| [$e586: adc $05]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	and.b	#0xf0,d0                         	| [$e588: and #$f0]
	CLR_XC_FLAGS                           	| [$e58a: clc]
	GET_ADDRESS	0x12                       	| [$e58b: adc $12]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$e58d: tax]
	GET_ADDRESS	0xd68e                     	| [$e58e: lda $d68e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$e591: tax]
	GET_ADDRESS	0x0400                     	| [$e592: lda $0400, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$e595: lsr a]
	lsr.b	#1,d0                            	| [$e596: lsr a]
	lsr.b	#1,d0                            	| [$e597: lsr a]
	lsr.b	#1,d0                            	| [$e598: lsr a]
	cmp.b	#0x09,d0                         	| [$e599: cmp #$09]
	beq	l_e5aa                             	| [$e59b: beq $e5aa]
	cmp.b	#0x08,d0                         	| [$e59d: cmp #$08]
	beq	l_e5aa                             	| [$e59f: beq $e5aa]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5a1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e5a3: nop]
l_e5a4:
	clr.b	d0                               	| [$e5a4: lda #$00]
	rts                                    	| [$e5a6: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5a7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e5a9: nop]
l_e5aa:
	GET_ADDRESS	0x0202                     	| [$e5aa: lda $0202, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e5ad: and #$0f]
	or.b	#0xa0,d0                          	| [$e5af: ora #$a0]
	PUSH_SR
	GET_ADDRESS	0x0202                     	| [$e5b1: sta $0202, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0a                       	| [$e5b4: lda $0a]
	move.b	(a0),d0                         	| [...]
	jbsr	l_ea5d                            	| [$e5b6: jsr $ea5d]
	st.b	d0                                	| [$e5b9: lda #$ff]
	rts                                    	| [$e5bb: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5bc: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e5be:
	GET_ADDRESS	0x00a2                     	| [$e5be: ldx $00a2]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5c1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e5c3: nop]
	GET_ADDRESS	0x68                       	| [$e5c4: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xe0,d0                         	| [$e5c6: and #$e0]
	cmp.b	#0x40,d0                         	| [$e5c8: cmp #$40]
	beq	l_e5d8                             	| [$e5ca: beq $e5d8]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5cc: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe0e8                     	| [$e5ce: ldx $e0e8]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xd0                       	| [$e5d1: asl $d0]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	beq	l_e635                             	| [$e5d3: beq $e635]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5d5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xb1b5                     	| [$e5d7: ldx $b1b5]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x0d                       	| [$e5da: sta $0d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$e5dc: pla]
	GET_ADDRESS	0xefd0                     	| [$e5dd: ora $efd0]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	0x0e                       	| [$e5e0: sty $0e]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	SET_XC_FLAGS                           	| [$e5e2: sec]
	GET_ADDRESS	0x0204                     	| [$e5e3: lda $0204, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_IMM	0x0c                           	| [$e5e6: sbc #$0c]
	PUSH_SR
	GET_ADDRESS	0x0f                       	| [$e5e8: sta $0f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	d1,d0                           	| [$e5ea: txa]
	asl.b	#1,d0                            	| [$e5eb: asl a]
	asl.b	#1,d0                            	| [$e5ec: asl a]
	move.b	d0,d2                           	| [$e5ed: tay]
	GET_ADDRESS	0x0f                       	| [$e5ee: lda $0f]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$e5f0: sta $1803, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0e                       	| [$e5f3: ldy $0e]
	move.b	(a0),d2                         	| [...]
	jra	l_e5cf                             	| [$e5f5: jmp $e5cf]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e5f8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e5fa:
	nop                                    	| [$e5fa: nop]
	clr.b	d1                               	| [$e5fb: ldx #$00]
	PUSH_SR
	GET_ADDRESS	0xc9                       	| [$e5fd: stx $c9]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$e5ff: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$e601: nop]
l_e602:
	GET_ADDRESS	0x68                       	| [$e602: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_e60d                             	| [$e604: bmi $e60d]
	and.b	#0x40,d0                         	| [$e606: and #$40]
	bne	l_e639                             	| [$e608: bne $e639]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e60a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e60c: nop]
l_e60d:
	addq.b	#1,d1                           	| [$e60d: inx]
	cmp.b	#0x06,d1                         	| [$e60e: cpx #$06]
	bne	l_e602                             	| [$e610: bne $e602]
	GET_ADDRESS	0xc9                       	| [$e612: ldx $c9]
	move.b	(a0),d1                         	| [...]
	beq	l_e635                             	| [$e614: beq $e635]
	GET_ADDRESS	0xe663                     	| [$e616: lda $e663, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jbsr	l_e98c                            	| [$e619: jsr $e98c]
	move.b	d2,d0                           	| [$e61c: tya]
	movem.w	d0,-(sp)                       	| [$e61d: pha]
	GET_ADDRESS	0xca                       	| [$e61e: ldx $ca]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xeb4f                     	| [$e620: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0xc9                       	| [$e623: ldx $c9]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xe669                     	| [$e625: lda $e669, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$e628: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$e62b: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1800                     	| [$e62d: sta $1800, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$e630: pla]
	move.b	d0,d2                           	| [$e631: tay]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e632: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e634: nop]
l_e635:
	rts                                    	| [$e635: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e636: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e638: nop]
l_e639:
	GET_ADDRESS	0xb1                       	| [$e639: lda $b1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x0d                       	| [$e63b: sta $0d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0d                       	| [$e63d: cpy $0d]
	cmp.b	(a0),d2                          	| [...]
	bne	l_e60d                             	| [$e63f: bne $e60d]
	GET_ADDRESS	0xc9                       	| [$e641: inc $c9]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xca                       	| [$e643: stx $ca]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x68                       	| [$e645: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e647: and #$0f]
	or.b	#0x20,d0                          	| [$e649: ora #$20]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$e64b: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0e                       	| [$e64d: sty $0e]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	and.b	#0x03,d0                         	| [$e64f: and #$03]
	move.b	d0,d2                           	| [$e651: tay]
	GET_ADDRESS	0xe74c                     	| [$e652: lda $e74c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xeb4f                     	| [$e655: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$e658: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x0e                       	| [$e65b: ldy $0e]
	move.b	(a0),d2                         	| [...]
	move.b	#0x7f,d0                        	| [$e65d: lda #$7f]
	PUSH_SR
	GET_ADDRESS	0x99                       	| [$e65f: sta $99, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	jra	l_e60d                             	| [$e661: jmp $e60d]
	GET_ADDRESS	0x07                       	| [$e665: ora $07]
	or.b	(a0),d0                           	| [...]
	PUSH_SR                                	| [$e667: php]
	or.b	#0x0a,d0                          	| [$e668: ora #$0a]
	SET_XC_FLAGS                           	| [$e66b: sec]
	GET_ADDRESS	0x3b3a                     	| [$e66c: and $3b3a, y]
	and.b	(a0,d2.w),d0                     	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e670: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e672:
	nop                                    	| [$e672: nop]
	GET_ADDRESS	0x181a                     	| [$e673: lda $181a]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e676: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x181b                     	| [$e678: lda $181b]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$e67b: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d1                               	| [$e67d: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e67f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e681: nop]
l_e682:
	GET_ADDRESS	0x68                       	| [$e682: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_e692                             	| [$e684: bpl $e692]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e686: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e688: nop]
l_e689:
	addq.b	#1,d1                           	| [$e689: inx]
	cmp.b	#0x06,d1                         	| [$e68a: cpx #$06]
	bne	l_e682                             	| [$e68c: bne $e682]
	rts                                    	| [$e68e: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e68f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e691: nop]
l_e692:
	move.b	d1,d0                           	| [$e692: txa]
	asl.b	#1,d0                            	| [$e693: asl a]
	asl.b	#1,d0                            	| [$e694: asl a]
	move.b	d0,d2                           	| [$e695: tay]
	GET_ADDRESS	0x1802                     	| [$e696: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$e699: clc]
	add.b	#0x0c,d0                        	| [$e69a: adc #$0c]
	GET_ADDRESS	0x03                       	| [$e69c: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_e689                             	| [$e69e: bcc $e689]
	SBC_IMM	0x18                           	| [$e6a0: sbc #$18]
	GET_ADDRESS	0x03                       	| [$e6a2: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_e689                             	| [$e6a4: bcs $e689]
	GET_ADDRESS	0x1803                     	| [$e6a6: lda $1803, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$e6a9: clc]
	add.b	#0x0c,d0                        	| [$e6aa: adc #$0c]
	GET_ADDRESS	0x04                       	| [$e6ac: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_e689                             	| [$e6ae: bcc $e689]
	SBC_IMM	0x18                           	| [$e6b0: sbc #$18]
	GET_ADDRESS	0x04                       	| [$e6b2: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_e689                             	| [$e6b4: bcs $e689]
	GET_ADDRESS	0x68                       	| [$e6b6: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$e6b8: ora #$10]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$e6ba: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	current_player_001f        	| [$e6bc: ldy current_player_001f]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x0061                     	| [$e6be: lda $0061, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x08,d0                         	| [$e6c1: cmp #$08]
	* bcc=>bcs
	bcs	l_e6c7                             	| [$e6c3: bcc $e6c7]
	move.b	#0x08,d0                        	| [$e6c5: lda #$08]
l_e6c7:
	move.b	d0,d2                           	| [$e6c7: tay]
	GET_ADDRESS	0xe6d4                     	| [$e6c8: lda $e6d4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x99                       	| [$e6cb: sta $99, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	move.b	#0x0f,d0                        	| [$e6cd: lda #$0f]
	jbsr	l_ea5d                            	| [$e6cf: jsr $ea5d]
	jra	l_e689                             	| [$e6d2: jmp $e689]
	GET_ADDRESS_Y	0xc1                     	| [$e6d5: cmp ($c1), y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_Y	0xa1                     	| [$e6d7: lda ($a1), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0x81                     	| [$e6d9: sta ($81), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS_Y	0x61                     	| [$e6db: adc ($61), y]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e6dd: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e6df:
	nop                                    	| [$e6df: nop]
	clr.b	d1                               	| [$e6e0: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e6e2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e6e4: nop]
l_e6e5:
	GET_ADDRESS	0x68                       	| [$e6e5: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_e6f0                             	| [$e6e7: bmi $e6f0]
	and.b	#0x10,d0                         	| [$e6e9: and #$10]
	bne	l_e6f9                             	| [$e6eb: bne $e6f9]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e6ed: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e6ef: nop]
l_e6f0:
	addq.b	#1,d1                           	| [$e6f0: inx]
	cmp.b	#0x06,d1                         	| [$e6f1: cpx #$06]
	bne	l_e6e5                             	| [$e6f3: bne $e6e5]
	rts                                    	| [$e6f5: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e6f6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e6f8: nop]
l_e6f9:
	GET_ADDRESS	0x99                       	| [$e6f9: lda $99, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$e6fb: cmp #$01]
	beq	l_e738                             	| [$e6fd: beq $e738]
	GET_ADDRESS	0x99                       	| [$e6ff: dec $99, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x99                       	| [$e701: lda $99, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e703: and #$0f]
	bne	l_e6f0                             	| [$e705: bne $e6f0]
	GET_ADDRESS	0x99                       	| [$e707: lda $99, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$e709: and #$10]
	beq	l_e71c                             	| [$e70b: beq $e71c]
	GET_ADDRESS	0x68                       	| [$e70d: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$e70f: and #$03]
	move.b	d0,d2                           	| [$e711: tay]
	GET_ADDRESS	0xe74c                     	| [$e712: lda $e74c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e715: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SET_XC_FLAGS                           	| [$e717: sec]
	bpl	l_e69f                             	| [$e718: bpl $e69f]
	SBC_X	0xea                             	| [$e71a: sbc $ea, x]
l_e71c:
	GET_ADDRESS	0x68                       	| [$e71c: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$e71e: and #$03]
	move.b	d0,d2                           	| [$e720: tay]
	GET_ADDRESS	0xe753                     	| [$e721: lda $e753, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e724: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$e726: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$e728: nop]
	move.b	d1,d0                           	| [$e729: txa]
	asl.b	#1,d0                            	| [$e72a: asl a]
	asl.b	#1,d0                            	| [$e72b: asl a]
	move.b	d0,d2                           	| [$e72c: tay]
	GET_ADDRESS	0x03                       	| [$e72d: lda $03]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$e72f: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	jra	l_e6f0                             	| [$e732: jmp $e6f0]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e735: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x68b5                     	| [$e737: ldx $68b5]
	move.b	(a0),d1                         	| [...]
	and.b	#0xef,d0                         	| [$e73a: and #$ef]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$e73c: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03                       	| [$e73e: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	d0,d2                           	| [$e740: tay]
	GET_ADDRESS	0xe75a                     	| [$e741: lda $e75a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e744: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$e746: iny]
	and.b	#0xe7,d0                         	| [$e747: and #$e7]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e749: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e74b: nop]
brk $62
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x857a                     	| [$e74e: ror $857a]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SBC_X	0xea                             	| [$e751: sbc $ea, x]
brk $63
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e757: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e759: nop]
brk $5a
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x72                       	| [$e75c: ror $72]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e75e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e760:
	nop                                    	| [$e760: nop]
	GET_ADDRESS	0x6f                       	| [$e761: lda $6f]
	move.b	(a0),d0                         	| [...]
	bmi	l_e783                             	| [$e763: bmi $e783]
	GET_ADDRESS	0x181e                     	| [$e765: lda $181e]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e768: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x181f                     	| [$e76a: lda $181f]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$e76d: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$e76f: rol $00]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$e771: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e773: nop]
l_e774:
	GET_ADDRESS	0x68                       	| [$e774: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_e787                             	| [$e776: bpl $e787]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e778: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e77a: nop]
l_e77b:
	addq.b	#1,d1                           	| [$e77b: inx]
	cmp.b	#0x06,d1                         	| [$e77c: cpx #$06]
	bne	l_e774                             	| [$e77e: bne $e774]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e780: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e782: nop]
l_e783:
	rts                                    	| [$e783: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e784: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x7029                     	| [$e786: ldx $7029]
	move.b	(a0),d1                         	| [...]
	bne	l_e77b                             	| [$e789: bne $e77b]
	move.b	d1,d0                           	| [$e78b: txa]
	asl.b	#1,d0                            	| [$e78c: asl a]
	asl.b	#1,d0                            	| [$e78d: asl a]
	move.b	d0,d2                           	| [$e78e: tay]
	GET_ADDRESS	0x1802                     	| [$e78f: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$e792: clc]
	add.b	#0x08,d0                        	| [$e793: adc #$08]
	GET_ADDRESS	0x03                       	| [$e795: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_e77b                             	| [$e797: bcc $e77b]
	SBC_IMM	0x10                           	| [$e799: sbc #$10]
	GET_ADDRESS	0x03                       	| [$e79b: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_e77b                             	| [$e79d: bcs $e77b]
	GET_ADDRESS	0x1803                     	| [$e79f: lda $1803, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$e7a2: clc]
	add.b	#0x04,d0                        	| [$e7a3: adc #$04]
	GET_ADDRESS	0x04                       	| [$e7a5: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_e77b                             	| [$e7a7: bcc $e77b]
	SBC_IMM	0x0d                           	| [$e7a9: sbc #$0d]
	GET_ADDRESS	0x04                       	| [$e7ab: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_e77b                             	| [$e7ad: bcs $e77b]
	move.b	#0x10,d0                        	| [$e7af: lda #$10]
	jbsr	l_ea5d                            	| [$e7b1: jsr $ea5d]
	GET_ADDRESS	0x6f                       	| [$e7b4: lda $6f]
	move.b	(a0),d0                         	| [...]
	or.b	#0xf0,d0                          	| [$e7b6: ora #$f0]
	PUSH_SR
	GET_ADDRESS	0x6f                       	| [$e7b8: sta $6f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	st.b	d0                                	| [$e7ba: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0xa0                       	| [$e7bc: sta $a0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$e7be: lda $00]
	move.b	(a0),d0                         	| [...]
	jbsr	l_ea5d                            	| [$e7c0: jsr $ea5d]
	jra	l_e77b                             	| [$e7c3: jmp $e77b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e7c6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e7c8:
	nop                                    	| [$e7c8: nop]
	GET_ADDRESS	current_player_001f        	| [$e7c9: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x65                       	| [$e7cb: inc $65, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$e7cd: iny]
	GET_ADDRESS	0x65                       	| [$e7cf: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$e7d1: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe815                     	| [$e7d3: cmp $e815, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_e7db                             	| [$e7d6: bne $e7db]
	jbsr	l_e0fb                            	| [$e7d8: jsr $e0fb]
l_e7db:
	GET_ADDRESS	0x05                       	| [$e7db: lda $05]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xe81b                     	| [$e7dd: cmp $e81b, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_e7e5                             	| [$e7e0: bne $e7e5]
	jbsr	l_e0fb                            	| [$e7e2: jsr $e0fb]
l_e7e5:
	GET_ADDRESS	0x05                       	| [$e7e5: lda $05]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xe821                     	| [$e7e7: cmp $e821, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_e7ef                             	| [$e7ea: bne $e7ef]
	jbsr	l_e0fb                            	| [$e7ec: jsr $e0fb]
l_e7ef:
	GET_ADDRESS	0x05                       	| [$e7ef: lda $05]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xe827                     	| [$e7f1: cmp $e827, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	bne	l_e7f9                             	| [$e7f4: bne $e7f9]
	jbsr	l_e0fb                            	| [$e7f6: jsr $e0fb]
l_e7f9:
	GET_ADDRESS	0x05                       	| [$e7f9: lda $05]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xe82d                     	| [$e7fb: cmp $e82d, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_e814                             	| [$e7fe: bcc $e814]
	GET_ADDRESS	0x6f                       	| [$e800: lda $6f]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e802: and #$0f]
	or.b	#0x80,d0                          	| [$e804: ora #$80]
	PUSH_SR
	GET_ADDRESS	0x6f                       	| [$e806: sta $6f]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	st.b	d0                                	| [$e808: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0xa0                       	| [$e80a: sta $a0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x05,d0                        	| [$e80c: lda #$05]
	jbsr	l_ea5d                            	| [$e80e: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e811: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e813: nop]
l_e814:
	rts                                    	| [$e814: rts]
	GET_ADDRESS	0x04                       	| [$e816: ora $04]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x03                       	| [$e818: asl $03]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	bpl	l_e826                             	| [$e81e: bpl $e826]
	GET_ADDRESS	0x160e                     	| [$e822: ora $160e]
	or.b	(a0),d0                           	| [...]
	or.b	#0x0c,d0                          	| [$e825: ora #$0c]
	GET_ADDRESS	0xff1c                     	| [$e829: asl $ff1c]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x1010                     	| [$e82c: asl $1010]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	jbsr	l_1210                            	| [$e830: jsr $1210]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e833: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e835:
	nop                                    	| [$e835: nop]
	GET_ADDRESS	0x6f                       	| [$e836: lda $6f]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$e838: and #$f0]
	cmp.b	#0x80,d0                         	| [$e83a: cmp #$80]
	bne	l_e869                             	| [$e83c: bne $e869]
	GET_ADDRESS	0xa0                       	| [$e83e: lda $a0]
	move.b	(a0),d0                         	| [...]
	beq	l_e864                             	| [$e840: beq $e864]
	GET_ADDRESS	0xa0                       	| [$e842: dec $a0]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0xa0                       	| [$e844: lda $a0]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$e846: and #$0f]
	bne	l_e869                             	| [$e848: bne $e869]
	GET_ADDRESS	0xa0                       	| [$e84a: lda $a0]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$e84c: and #$10]
	beq	l_e857                             	| [$e84e: beq $e857]
	move.b	#0x47,d0                        	| [$e850: lda #$47]
	bne	l_e85c                             	| [$e852: bne $e85c]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e854: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e856: nop]
l_e857:
	move.b	#0x4c,d0                        	| [$e857: lda #$4c]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e859: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e85b: nop]
l_e85c:
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$e85c: sta $181d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	bne	l_e869                             	| [$e85f: bne $e869]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e861: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e863:
	nop                                    	| [$e863: nop]
l_e864:
	GET_ADDRESS	0xc5                       	| [$e864: inc $c5]
	addq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e866: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e868: nop]
l_e869:
	rts                                    	| [$e869: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e86a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e86c:
	nop                                    	| [$e86c: nop]
	GET_ADDRESS	0xc6                       	| [$e86d: lda $c6]
	move.b	(a0),d0                         	| [...]
	bmi	l_e8b7                             	| [$e86f: bmi $e8b7]
	GET_ADDRESS	0x6f                       	| [$e871: lda $6f]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$e873: and #$f0]
	cmp.b	#0xf0,d0                         	| [$e875: cmp #$f0]
	beq	l_e87d                             	| [$e877: beq $e87d]
	rts                                    	| [$e879: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e87a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e87c: nop]
l_e87d:
	move.b	#0x1b,d1                        	| [$e87d: ldx #$1b]
	GET_ADDRESS	0xa0                       	| [$e87f: lda $a0]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e881: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e883: nop]
l_e884:
	GET_ADDRESS	0xe8b8                     	| [$e884: cmp $e8b8, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
l_e887:
	beq	l_e892                             	| [$e887: beq $e892]
	subq.b	#1,d1                           	| [$e889: dex]
	bpl	l_e884                             	| [$e88a: bpl $e884]
	GET_ADDRESS	0xa0                       	| [$e88c: dec $a0]
	subq.b	#1,(a0)                         	| [...]
	rts                                    	| [$e88e: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e88f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e891: nop]
l_e892:
	GET_ADDRESS	0xe8d4                     	| [$e892: lda $e8d4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x181d                     	| [$e895: sta $181d]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xa0                       	| [$e898: dec $a0]
	subq.b	#1,(a0)                         	| [...]
	move.b	d1,d0                           	| [$e89a: txa]
	bne	l_e8ab                             	| [$e89b: bne $e8ab]
	GET_ADDRESS	current_player_001f        	| [$e89d: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_lives_0029          	| [$e89f: dec player_lives_0029, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	st.b	d0                                	| [$e8a1: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0xc6                       	| [$e8a3: sta $c6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_e8b7                             	| [$e8a5: jmp $e8b7]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e8a8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e8aa: nop]
l_e8ab:
	cmp.b	#0x18,d1                         	| [$e8ab: cpx #$18]
	bne	l_e8b7                             	| [$e8ad: bne $e8b7]
	move.b	#0x10,d0                        	| [$e8af: lda #$10]
	jbsr	l_ea5d                            	| [$e8b1: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e8b4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e8b6: nop]
l_e8b7:
	rts                                    	| [$e8b7: rts]
	GET_ADDRESS_X	0x08                     	| [$e8b8: ora ($08, x)]
	or.b	(a0),d0                           	| [...]
	bpl	l_e8d4                             	| [$e8ba: bpl $e8d4]
	jbsr	l_3028                            	| [$e8bc: jsr $3028]
	SET_XC_FLAGS                           	| [$e8bf: sec]
rti
	movem.w	d0,-(sp)                       	| [$e8c1: pha]
	bvc	l_e91c                             	| [$e8c2: bvc $e91c]
	rts                                    	| [$e8c4: rts]
	movem.w	(sp)+,d0                       	| [$e8c5: pla]
	SET_I_FLAG                             	| [$e8c6: sei]
	subq.b	#1,d2                           	| [$e8c8: dey]
	bcc	l_e863                             	| [$e8c9: bcc $e863]
         ^^^^^^ TODO: warning: stray bcc test
l_e8cb:
	move.b	#0xa8,d2                        	| [$e8cb: ldy #$a8]
	bcs	l_e887                             	| [$e8cd: bcs $e887]
         ^^^^^^ TODO: warning: review stray bcs test
	cmp.b	#0xc8,d2                         	| [$e8cf: cpy #$c8]
	bne	l_e8cb                             	| [$e8d1: bne $e8cb]
	GET_ADDRESS	0x5152                     	| [$e8d3: inc $5152, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8d7: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8d9: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8db: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8dd: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8df: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8e1: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8e3: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8e5: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8e7: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x52                     	| [$e8e9: eor ($52), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS_Y	0x50                     	| [$e8eb: eor ($50), y]
	move.b	(a0,d2.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	GET_ADDRESS	0x854d                     	| [$e8ee: lsr $854d]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SBC_X	0xea                             	| [$e8f1: sbc $ea, x]
	GET_ADDRESS	0x60                       	| [$e8f3: lda $60]
	move.b	(a0),d0                         	| [...]
	bne	l_e971                             	| [$e8f5: bne $e971]
	GET_ADDRESS	0x63                       	| [$e8f7: ldx $63]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xe972                     	| [$e8f9: lda $e972, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e8fc: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe978                     	| [$e8fe: lda $e978, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$e901: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x181e                     	| [$e903: lda $181e]
	move.b	(a0),d0                         	| [...]
	                           	| [$e906: clc]
	add.b	#0x08,d0                        	| [$e907: adc #$08]
	GET_ADDRESS	0x03                       	| [$e909: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_e971                             	| [$e90b: bcc $e971]
	SBC_IMM	0x10                           	| [$e90d: sbc #$10]
	GET_ADDRESS	0x03                       	| [$e90f: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_e971                             	| [$e911: bcs $e971]
	GET_ADDRESS	0x181f                     	| [$e913: lda $181f]
	move.b	(a0),d0                         	| [...]
	                           	| [$e916: clc]
	add.b	#0x08,d0                        	| [$e917: adc #$08]
	GET_ADDRESS	0x04                       	| [$e919: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_e971                             	| [$e91b: bcc $e971]
	SBC_IMM	0x10                           	| [$e91d: sbc #$10]
	GET_ADDRESS	0x04                       	| [$e91f: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_e971                             	| [$e921: bcs $e971]
	move.b	d1,d0                           	| [$e923: txa]
	asl.b	#1,d0                            	| [$e924: asl a]
	move.b	d0,d2                           	| [$e925: tay]
	GET_ADDRESS	0xe176                     	| [$e926: lda $e176, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$e929: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe177                     	| [$e92b: lda $e177, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$e92e: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe981                     	| [$e930: ldy $e981, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0xe97e                     	| [$e933: lda $e97e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x05                       	| [$e936: sta $05]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d2                               	| [$e938: ldy #$00]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e93a: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	move.b	d0,d2                           	| [$e93c: tay]
	GET_ADDRESS	0x05                       	| [$e93d: inc $05]
	addq.b	#1,(a0)                         	| [...]
	cmp.b	#0x05,d0                         	| [$e93f: cmp #$05]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS_Y	0x03                     	| [$e941: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	clr.b	d0                               	| [$e943: lda #$00]
	move.b	#0x20,d2                        	| [$e945: ldy #$20]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e947: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$e949: iny]
	PUSH_SR
	GET_ADDRESS_Y	0x03                     	| [$e94a: sta ($03), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x02                       	| [$e94c: lda $02]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xc4                       	| [$e94e: sta $c4]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x60                       	| [$e950: inc $60]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0xe981                     	| [$e952: ldy $e981, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0xe987                     	| [$e955: lda $e987, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jbsr	l_e98c                            	| [$e958: jsr $e98c]
	GET_ADDRESS	current_player_001f        	| [$e95b: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_pepper_002b         	| [$e95d: lda player_pepper_002b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$e95f: clc]
	illegal   <-- TODO: unsupported set decimal mode	| [$e960: sed]
	move.b	#0x01,d4	| [$e961: adc #$01]
	addx.b	d4,d0                        	| [$e961: adc #$01]
	PUSH_SR
	GET_ADDRESS	player_pepper_002b         	| [$e963: sta player_pepper_002b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	CLR_V_FLAG                             	| [$e965: clv]
	jbsr	l_ca94                            	| [$e966: jsr $ca94]
	move.b	#0x11,d0                        	| [$e969: lda #$11]
	jbsr	l_ea5d                            	| [$e96b: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e96e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$e970: nop]
l_e971:
	rts                                    	| [$e971: rts]
	SET_I_FLAG                             	| [$e972: sei]
	SET_I_FLAG                             	| [$e973: sei]
	SET_I_FLAG                             	| [$e974: sei]
	SET_I_FLAG                             	| [$e975: sei]
	movem.w	d0,-(sp)                       	| [$e976: pha]
	SET_I_FLAG                             	| [$e977: sei]
	bvc	l_e9ea                             	| [$e978: bvc $e9ea]
	bvs	l_e99c                             	| [$e97a: bvs $e99c]
rti
	rts                                    	| [$e97d: rts]
	GET_ADDRESS	0xb4b0                     	| [$e97e: ldy $b4b0]
	move.b	(a0),d2                         	| [...]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x06                       	| [$e988: ora $06]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e98a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e98c:
	GET_ADDRESS	0x0485                     	| [$e98c: ldx $0485]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x48                       	| [$e98f: lsr $48]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	move.b	d2,d0                           	| [$e991: tya]
	movem.w	d0,-(sp)                       	| [$e992: pha]
	GET_ADDRESS	0x1b                       	| [$e993: lda $1b]
	move.b	(a0),d0                         	| [...]
	bne	l_e99d                             	| [$e995: bne $e99d]
	jra	l_ea33                             	| [$e997: jmp $ea33]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e99a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_e99c:
	GET_ADDRESS	0x1fa6                     	| [$e99c: ldx $1fa6]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xea59                     	| [$e99f: ldy $ea59, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x04                       	| [$e9a2: ldx $04]
	move.b	(a0),d1                         	| [...]
	CLR_XC_FLAGS                           	| [$e9a4: clc]
	illegal   <-- TODO: unsupported set decimal mode	| [$e9a5: sed]
	GET_ADDRESS	0x002d                     	| [$e9a6: lda $002d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xea38                     	| [$e9a9: adc $ea38, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x002d                     	| [$e9ac: sta $002d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x2e                       	| [$e9af: lda $2e, x]
	move.b	(a0,d1.w),d0                    	| [...]
brk $7d
   ^^^^ TODO: unknown/unsupported instruction brk
	nop                                    	| [$e9b4: nop]
	PUSH_SR
	GET_ADDRESS	0x002e                     	| [$e9b5: sta $002e, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x002f                     	| [$e9b8: lda $002f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xea4e                     	| [$e9bb: adc $ea4e, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x002f                     	| [$e9be: sta $002f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	nop                                    	| [$e9c1: cld]
	GET_ADDRESS	current_player_001f        	| [$e9c2: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	jbsr	l_c94e                            	| [$e9c4: jsr $c94e]
	GET_ADDRESS	current_player_001f        	| [$e9c7: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xea59                     	| [$e9c9: ldy $ea59, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x35                       	| [$e9cc: lda $35]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x002f                     	| [$e9ce: cmp $002f, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_e9e8                             	| [$e9d1: bcc $e9e8]
	bne	l_e9ff                             	| [$e9d3: bne $e9ff]
	GET_ADDRESS	0x34                       	| [$e9d5: lda $34]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x002e                     	| [$e9d7: cmp $002e, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_e9e8                             	| [$e9da: bcc $e9e8]
	bne	l_e9ff                             	| [$e9dc: bne $e9ff]
	GET_ADDRESS	0x33                       	| [$e9de: lda $33]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x002d                     	| [$e9e0: cmp $002d, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcs=>bcc
	bcc	l_e9ff                             	| [$e9e3: bcs $e9ff]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e9e5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2db9                     	| [$e9e7: ldx $2db9]
	move.b	(a0),d1                         	| [...]
l_e9ea:
brk $85
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x002e                     	| [$e9ed: eor $002e, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	PUSH_SR
	GET_ADDRESS	0x34                       	| [$e9f0: sta $34]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x002f                     	| [$e9f2: lda $002f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x35                       	| [$e9f5: sta $35]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x02                       	| [$e9f7: rol $02]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	jbsr	l_c94e                            	| [$e9f9: jsr $c94e]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$e9fc: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1fa6                     	| [$e9fe: ldx $1fa6]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xea59                     	| [$ea01: ldy $ea59, x]
	move.b	(a0,d1.w),d2                    	| [...]
	move.b	d1,d0                           	| [$ea04: txa]
	asl.b	#1,d0                            	| [$ea05: asl a]
	move.b	d0,d1                           	| [$ea06: tax]
	GET_ADDRESS	0x002f                     	| [$ea07: lda $002f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x5d                       	| [$ea0a: cmp $5d, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_ea33                             	| [$ea0c: bcc $ea33]
	GET_ADDRESS	0x002e                     	| [$ea0e: lda $002e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x5c                       	| [$ea11: cmp $5c, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcc=>bcs
	bcs	l_ea33                             	| [$ea13: bcc $ea33]
	CLR_XC_FLAGS                           	| [$ea15: clc]
	illegal   <-- TODO: unsupported set decimal mode	| [$ea16: sed]
	GET_ADDRESS	0x5c                       	| [$ea17: lda $5c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x5a                       	| [$ea19: adc $5a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x5c                       	| [$ea1b: sta $5c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x5d                       	| [$ea1d: lda $5d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x5b                       	| [$ea1f: adc $5b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x5d                       	| [$ea21: sta $5d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	nop                                    	| [$ea23: cld]
	GET_ADDRESS	current_player_001f        	| [$ea24: ldx current_player_001f]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	player_lives_0029          	| [$ea26: inc player_lives_0029, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	jbsr	l_ca54                            	| [$ea28: jsr $ca54]
	move.b	#0x02,d0                        	| [$ea2b: lda #$02]
	jbsr	l_ea5d                            	| [$ea2d: jsr $ea5d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ea30: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ea32: nop]
l_ea33:
	movem.w	(sp)+,d0                       	| [$ea33: pla]
	move.b	d0,d2                           	| [$ea34: tay]
	movem.w	(sp)+,d0                       	| [$ea35: pla]
	move.b	d0,d1                           	| [$ea36: tax]
	rts                                    	| [$ea37: rts]
	bvc	l_ea3a                             	| [$ea38: bvc $ea3a]
l_ea3a:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x02                     	| [$ea44: ora ($02, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x10                       	| [$ea47: ora $10]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x20                       	| [$ea49: ora $20, x]
	or.b	(a0,d1.w),d0                      	| [...]
rti
	rts                                    	| [$ea4d: rts]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x00                     	| [$ea58: ora ($00, x)]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ea5b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_ea5d:
	nop                                    	| [$ea5d: nop]
l_ea5e:
	PUSH_SR
	GET_ADDRESS	0xc7                       	| [$ea5e: stx $c7]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x1b                       	| [$ea60: ldx $1b]
	move.b	(a0),d1                         	| [...]
	beq	l_ea6e                             	| [$ea62: beq $ea6e]
	move.b	d0,d1                           	| [$ea64: tax]
	GET_ADDRESS	0xea71                     	| [$ea65: lda $ea71, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x4003                     	| [$ea68: sta $4003]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$ea6b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ea6d: nop]
l_ea6e:
	GET_ADDRESS	0xc7                       	| [$ea6e: ldx $c7]
	move.b	(a0),d1                         	| [...]
	rts                                    	| [$ea70: rts]
brk $1b
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x02                     	| [$ea75: ora ($02, x)]
	or.b	(a0),d0                           	| [...]
	jbsr	l_1121                            	| [$ea77: jsr $1121]
	GET_ADDRESS	0x16                       	| [$ea7d: ora $16, x]
	or.b	(a0,d1.w),d0                      	| [...]
	CLR_XC_FLAGS                           	| [$ea80: clc]
	GET_ADDRESS	0x1d1a                     	| [$ea81: ora $1d1a, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x16                       	| [$ea86: ora $16, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x03                       	| [$ea89: ora $03]
	or.b	(a0),d0                           	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ea8b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_ea8d:
	nop                                    	| [$ea8d: nop]
	move.b	#0x05,d1                        	| [$ea8e: ldx #$05]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ea90: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ea92: nop]
l_ea93:
	GET_ADDRESS	0x68                       	| [$ea93: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$ea95: and #$f0]
	cmp.b	#0x80,d0                         	| [$ea97: cmp #$80]
	beq	l_eaa8                             	| [$ea99: beq $eaa8]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$ea9b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$ea9d: nop]
l_ea9e:
	subq.b	#1,d1                           	| [$ea9e: dex]
	bpl	l_ea93                             	| [$ea9f: bpl $ea93]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eaa1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$eaa3: nop]
	rts                                    	| [$eaa4: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eaa5: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$eaa7: nop]
l_eaa8:
	GET_ADDRESS	0x99                       	| [$eaa8: lda $99, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$eaaa: cmp #$01]
	beq	l_eaf6                             	| [$eaac: beq $eaf6]
	GET_ADDRESS	0x99                       	| [$eaae: dec $99, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x99                       	| [$eab0: lda $99, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x40,d0                         	| [$eab2: cmp #$40]
	beq	l_eaf9                             	| [$eab4: beq $eaf9]
	cmp.b	#0x38,d0                         	| [$eab6: cmp #$38]
	beq	l_eb0d                             	| [$eab8: beq $eb0d]
	cmp.b	#0x30,d0                         	| [$eaba: cmp #$30]
	beq	l_eb21                             	| [$eabc: beq $eb21]
	cmp.b	#0x28,d0                         	| [$eabe: cmp #$28]
	beq	l_eae5                             	| [$eac0: beq $eae5]
	cmp.b	#0x20,d0                         	| [$eac2: cmp #$20]
	bne	l_ea9e                             	| [$eac4: bne $ea9e]
	GET_ADDRESS	0x68                       	| [$eac6: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$eac8: and #$03]
	move.b	d0,d2                           	| [$eaca: tay]
	GET_ADDRESS	0xeb65                     	| [$eacb: lda $eb65, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jbsr	l_e98c                            	| [$eace: jsr $e98c]
	GET_ADDRESS	0xeb62                     	| [$ead1: lda $eb62, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xeb4f                     	| [$ead4: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$ead7: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	move.b	#0x01,d0                        	| [$eada: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1800                     	| [$eadc: sta $1800, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	jra	l_ea9e                             	| [$eadf: jmp $ea9e]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eae2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$eae4: nop]
l_eae5:
	GET_ADDRESS	0x68                       	| [$eae5: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$eae7: and #$03]
	move.b	d0,d2                           	| [$eae9: tay]
	GET_ADDRESS	0xeb5f                     	| [$eaea: lda $eb5f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xeb4f                     	| [$eaed: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$eaf0: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	jra	l_ea9e                             	| [$eaf3: jmp $ea9e]
l_eaf6:
	jra	l_eb35                             	| [$eaf6: jmp $eb35]
l_eaf9:
	GET_ADDRESS	0x68                       	| [$eaf9: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$eafb: and #$03]
	move.b	d0,d2                           	| [$eafd: tay]
	GET_ADDRESS	0xeb56                     	| [$eafe: lda $eb56, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xeb4f                     	| [$eb01: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$eb04: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$eb07: iny]
	nop                                    	| [$eb09: nop]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb0a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x68b5                     	| [$eb0c: ldx $68b5]
	move.b	(a0),d1                         	| [...]
	and.b	#0x03,d0                         	| [$eb0f: and #$03]
	move.b	d0,d2                           	| [$eb11: tay]
	GET_ADDRESS	0xeb59                     	| [$eb12: lda $eb59, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xeb4f                     	| [$eb15: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$eb18: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	jra	l_ea9e                             	| [$eb1b: jmp $ea9e]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb1e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$eb20: nop]
l_eb21:
	GET_ADDRESS	0x68                       	| [$eb21: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x03,d0                         	| [$eb23: and #$03]
	move.b	d0,d2                           	| [$eb25: tay]
	GET_ADDRESS	0xeb5c                     	| [$eb26: lda $eb5c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xeb4f                     	| [$eb29: ldy $eb4f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$eb2c: sta $1801, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	addq.b	#1,d2                           	| [$eb2f: iny]
	nop                                    	| [$eb31: nop]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb32: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0386                     	| [$eb34: ldx $0386]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x2968                     	| [$eb37: cmp $2968, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	d0,d1                           	| [$eb3b: tax]
	GET_ADDRESS	0xbe                       	| [$eb3c: dec $be, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	subq.b	#1,d1                           	| [$eb3e: dex]
	st.b	d0                                	| [$eb40: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$eb42: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x9900                     	| [$eb47: eor $9900]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
brk $18
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x9e                       	| [$eb4c: ldy $9e]
	move.b	(a0),d2                         	| [...]
	nop                                    	| [$eb4e: nop]
brk $04
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR                                	| [$eb51: php]
	bpl	l_eb69                             	| [$eb53: bpl $eb69]
	CLR_XC_FLAGS                           	| [$eb55: clc]
	GET_ADDRESS	0x766a                     	| [$eb57: lsr $766a, x]
	move.b	(a0,d1.w),d4	| [...]
	lsr.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	rts                                    	| [$eb5d: rts]
	jra	(0x6178)                           	| [$eb5e: jmp ($6178)]
	GET_ADDRESS	0x3479                     	| [$eb61: adc $3479]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x36                       	| [$eb64: and $36, x]
	and.b	(a0,d1.w),d0                     	| [...]
	GET_ADDRESS_X	0x02                     	| [$eb66: ora ($02, x)]
	or.b	(a0),d0                           	| [...]
l_eb69:
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb69: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_eb6b:
	nop                                    	| [$eb6b: nop]
	move.b	#0x05,d1                        	| [$eb6c: ldx #$05]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb6e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$eb70: nop]
	GET_ADDRESS	0x68                       	| [$eb71: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_eb7f                             	| [$eb73: bpl $eb7f]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb75: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x10ca                     	| [$eb77: ldx $10ca]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x60                       	| [$eb7a: inc $60, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eb7c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4fbc                     	| [$eb7e: ldx $4fbc]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x1802                     	| [$eb82: lda $1802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x03                       	| [$eb85: sta $03]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$eb87: lda $03, x]
	move.b	(a0,d1.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$eb89: clc]
	PUSH_SR
	GET_ADDRESS	0x04                       	| [$eb8a: sta $04]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$eb8c: cpx $00]
	cmp.b	(a0),d1                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0203                     	| [$eb8f: lda $0203, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_IMM	0x08                           	| [$eb92: sbc #$08]
	GET_ADDRESS	0x03                       	| [$eb94: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_eb78                             	| [$eb96: bcc $eb78]
	SBC_IMM	0x20                           	| [$eb98: sbc #$20]
	GET_ADDRESS	0x03                       	| [$eb9a: cmp $03]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_eb78                             	| [$eb9c: bcs $eb78]
	GET_ADDRESS	0x0204                     	| [$eb9e: lda $0204, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_IMM	0x05                           	| [$eba1: sbc #$05]
	GET_ADDRESS	0x04                       	| [$eba3: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	bcc	l_eb78                             	| [$eba5: bcs $eb78]
	move.b	#0x0c,d4	| [$eba7: adc #$0c]
	addx.b	d4,d0                        	| [$eba7: adc #$0c]
	GET_ADDRESS	0x04                       	| [$eba9: cmp $04]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs
	bcs	l_eb78                             	| [$ebab: bcc $eb78]
	GET_ADDRESS	0x68                       	| [$ebad: lda $68, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$ebaf: and #$0f]
	or.b	#0x80,d0                          	| [$ebb1: ora #$80]
	PUSH_SR
	GET_ADDRESS	0x68                       	| [$ebb3: sta $68, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x42                       	| [$ebb5: lda $42]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x99                       	| [$ebb7: sta $99, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	move.b	#0x0c,d0                        	| [$ebb9: lda #$0c]
	jbsr	l_ea5e                            	| [$ebbb: jsr $ea5e]
	jra	l_eb78                             	| [$ebbe: jmp $eb78]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$ebc1: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_ebc3:
	nop                                    	| [$ebc3: nop]
	move.b	#0x05,d0                        	| [$ebc4: lda #$05]
	PUSH_SR
	GET_ADDRESS	player_pepper_002b         	| [$ebc6: sta player_pepper_002b]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x2c                       	| [$ebc8: sta $2c]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4004                     	| [$ebca: lda $4004]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$ebcd: and #$10]
	bne	l_ebd6                             	| [$ebcf: bne $ebd6]
	GET_ADDRESS	player_pepper_002b         	| [$ebd1: dec player_pepper_002b]
	subq.b	#1,(a0)                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xf6                       	| [$ebd3: sta $f6]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x0160                     	| [$ebd5: ldx $0160]
	move.b	(a0),d1                         	| [...]
	movem.w	d0,-(sp)                       	| [$ebd9: pha]
	GET_ADDRESS	0xd7                       	| [$ebda: asl $d7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$ebdc: pla]
	move.b	d2,d0                           	| [$ebdf: tya]
	CLR_V_FLAG                             	| [$ebe2: clv]
	addq.b	#1,d1                           	| [$ebe5: inx]
	GET_ADDRESS_X	0xa7                     	| [$ebe6: ora ($a7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ebe8: plp]
	GET_ADDRESS	0xa7                       	| [$ebe9: asl $a7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SET_I_FLAG                             	| [$ebeb: sei]
	move.b	d2,d0                           	| [$ebee: tya]
	CLR_V_FLAG                             	| [$ebf1: clv]
	addq.b	#1,d1                           	| [$ebf4: inx]
	GET_ADDRESS_X	0x77                     	| [$ebf5: ora ($77, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ebf7: plp]
	GET_ADDRESS	0x77                       	| [$ebf8: asl $77]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	d0,-(sp)                       	| [$ebfa: pha]
	SET_I_FLAG                             	| [$ebfd: sei]
	CLR_V_FLAG                             	| [$ec00: clv]
	addq.b	#1,d1                           	| [$ec03: inx]
	GET_ADDRESS_X	0x47                     	| [$ec04: ora ($47, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec06: plp]
	GET_ADDRESS	0x47                       	| [$ec07: asl $47]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	d0,-(sp)                       	| [$ec09: pha]
	movem.w	(sp)+,d0                       	| [$ec0c: pla]
	subq.b	#1,d2                           	| [$ec0f: dey]
	addq.b	#1,d1                           	| [$ec12: inx]
	GET_ADDRESS_X	0xa7                     	| [$ec14: ora ($a7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec16: plp]
	GET_ADDRESS	0xa7                       	| [$ec17: ora $a7]
	or.b	(a0),d0                           	| [...]
	SET_XC_FLAGS                           	| [$ec19: sec]
	GET_ADDRESS	0xa7                       	| [$ec1a: asl $a7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	d0,-(sp)                       	| [$ec1c: pha]
	CLR_I_FLAG                             	| [$ec1f: cli]
	GET_ADDRESS	0xa7                       	| [$ec20: asl $a7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	(sp)+,d0                       	| [$ec22: pla]
	SET_I_FLAG                             	| [$ec25: sei]
	GET_ADDRESS	0xa7                       	| [$ec26: ora $a7]
	or.b	(a0),d0                           	| [...]
	subq.b	#1,d2                           	| [$ec28: dey]
	move.b	d2,d0                           	| [$ec2b: tya]
	addq.b	#1,d1                           	| [$ec2e: inx]
	GET_ADDRESS_X	0x77                     	| [$ec2f: ora ($77, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec31: plp]
	GET_ADDRESS	0x77                       	| [$ec32: ora $77]
	or.b	(a0),d0                           	| [...]
	SET_XC_FLAGS                           	| [$ec34: sec]
	movem.w	d0,-(sp)                       	| [$ec37: pha]
	GET_ADDRESS	0x77                       	| [$ec38: asl $77]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	CLR_I_FLAG                             	| [$ec3a: cli]
	movem.w	(sp)+,d0                       	| [$ec3d: pla]
	GET_ADDRESS	0x77                       	| [$ec3e: ora $77]
	or.b	(a0),d0                           	| [...]
	SET_I_FLAG                             	| [$ec40: sei]
	GET_ADDRESS	0x77                       	| [$ec41: asl $77]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$ec43: dey]
	move.b	d2,d0                           	| [$ec46: tya]
	addq.b	#1,d1                           	| [$ec49: inx]
	GET_ADDRESS_X	0xd7                     	| [$ec4b: ora ($d7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec4d: plp]
	GET_ADDRESS	0xd7                       	| [$ec4e: asl $d7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SET_XC_FLAGS                           	| [$ec50: sec]
	movem.w	d0,-(sp)                       	| [$ec53: pha]
	movem.w	(sp)+,d0                       	| [$ec56: pla]
	CLR_V_FLAG                             	| [$ec59: clv]
	GET_ADDRESS_X	0xa7                     	| [$ec5a: ora ($a7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec5c: plp]
	SET_XC_FLAGS                           	| [$ec5f: sec]
	GET_ADDRESS	0xa7                       	| [$ec60: asl $a7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	CLR_I_FLAG                             	| [$ec62: cli]
	move.b	d0,d2                           	| [$ec65: tay]
	addq.b	#1,d1                           	| [$ec68: inx]
	GET_ADDRESS_X	0x77                     	| [$ec69: ora ($77, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec6b: plp]
	SET_I_FLAG                             	| [$ec6e: sei]
	GET_ADDRESS	0x77                       	| [$ec6f: asl $77]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	move.b	d2,d0                           	| [$ec71: tya]
	move.b	d0,d2                           	| [$ec74: tay]
	addq.b	#1,d1                           	| [$ec77: inx]
	GET_ADDRESS_X	0x47                     	| [$ec78: ora ($47, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec7a: plp]
	GET_ADDRESS	0x47                       	| [$ec7b: asl $47]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	d0,-(sp)                       	| [$ec7d: pha]
	CLR_I_FLAG                             	| [$ec80: cli]
	movem.w	(sp)+,d0                       	| [$ec83: pla]
	CLR_V_FLAG                             	| [$ec86: clv]
	GET_ADDRESS_X	0xd7                     	| [$ec88: ora ($d7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ec8a: plp]
	movem.w	d0,-(sp)                       	| [$ec8d: pha]
	CLR_I_FLAG                             	| [$ec90: cli]
	subq.b	#1,d2                           	| [$ec93: dey]
	GET_ADDRESS_X	0xd7                     	| [$ec94: ora ($d7, x)]
	or.b	(a0),d0                           	| [...]
	move.b	d2,d0                           	| [$ec96: tya]
	GET_ADDRESS	0xd7                       	| [$ec97: ora $d7]
	or.b	(a0),d0                           	| [...]
	move.b	d0,d2                           	| [$ec99: tay]
	CLR_V_FLAG                             	| [$ec9c: clv]
	addq.b	#1,d1                           	| [$ec9f: inx]
	GET_ADDRESS_X	0xa7                     	| [$eca0: ora ($a7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$eca2: plp]
	GET_ADDRESS	0xa7                       	| [$eca3: ora $a7]
	or.b	(a0),d0                           	| [...]
	SET_XC_FLAGS                           	| [$eca5: sec]
	CLR_I_FLAG                             	| [$eca8: cli]
	CLR_V_FLAG                             	| [$ecab: clv]
	GET_ADDRESS_X	0x77                     	| [$ecac: ora ($77, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ecae: plp]
	SET_XC_FLAGS                           	| [$ecb1: sec]
	CLR_I_FLAG                             	| [$ecb4: cli]
	CLR_V_FLAG                             	| [$ecb7: clv]
	GET_ADDRESS_X	0x47                     	| [$ecb8: ora ($47, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ecba: plp]
	GET_ADDRESS	0x47                       	| [$ecbb: ora $47]
	or.b	(a0),d0                           	| [...]
	movem.w	d0,-(sp)                       	| [$ecbd: pha]
	CLR_I_FLAG                             	| [$ecc0: cli]
	subq.b	#1,d2                           	| [$ecc3: dey]
	GET_ADDRESS_X	0x47                     	| [$ecc4: ora ($47, x)]
	or.b	(a0),d0                           	| [...]
	move.b	d2,d0                           	| [$ecc6: tya]
	move.b	d0,d2                           	| [$ecc9: tay]
	CLR_V_FLAG                             	| [$eccc: clv]
	addq.b	#1,d1                           	| [$eccf: inx]
	GET_ADDRESS_X	0xd7                     	| [$ecd1: ora ($d7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ecd3: plp]
	SET_XC_FLAGS                           	| [$ecd6: sec]
	GET_ADDRESS	0xd7                       	| [$ecd7: ora $d7]
	or.b	(a0),d0                           	| [...]
	movem.w	d0,-(sp)                       	| [$ecd9: pha]
	GET_ADDRESS	0xd7                       	| [$ecda: asl $d7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	CLR_I_FLAG                             	| [$ecdc: cli]
	movem.w	(sp)+,d0                       	| [$ecdf: pla]
	GET_ADDRESS	0xd7                       	| [$ece0: asl $d7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SET_I_FLAG                             	| [$ece2: sei]
	GET_ADDRESS	0xd7                       	| [$ece3: ora $d7]
	or.b	(a0),d0                           	| [...]
	subq.b	#1,d2                           	| [$ece5: dey]
	move.b	d2,d0                           	| [$ece8: tya]
	addq.b	#1,d1                           	| [$eceb: inx]
	GET_ADDRESS_X	0xa7                     	| [$ecec: ora ($a7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ecee: plp]
	GET_ADDRESS	0xa7                       	| [$ecef: asl $a7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SET_XC_FLAGS                           	| [$ecf1: sec]
	GET_ADDRESS	0xa7                       	| [$ecf2: ora $a7]
	or.b	(a0),d0                           	| [...]
	movem.w	d0,-(sp)                       	| [$ecf4: pha]
	CLR_I_FLAG                             	| [$ecf7: cli]
	GET_ADDRESS	0xa7                       	| [$ecf8: ora $a7]
	or.b	(a0),d0                           	| [...]
	movem.w	(sp)+,d0                       	| [$ecfa: pla]
	SET_I_FLAG                             	| [$ecfd: sei]
	GET_ADDRESS	0xa7                       	| [$ecfe: asl $a7]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$ed00: dey]
	move.b	d2,d0                           	| [$ed03: tya]
	addq.b	#1,d1                           	| [$ed06: inx]
	GET_ADDRESS_X	0x77                     	| [$ed07: ora ($77, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ed09: plp]
	GET_ADDRESS	0x77                       	| [$ed0a: ora $77]
	or.b	(a0),d0                           	| [...]
	SET_XC_FLAGS                           	| [$ed0c: sec]
	GET_ADDRESS	0x77                       	| [$ed0d: asl $77]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	d0,-(sp)                       	| [$ed0f: pha]
	GET_ADDRESS	0x77                       	| [$ed10: ora $77]
	or.b	(a0),d0                           	| [...]
	CLR_I_FLAG                             	| [$ed12: cli]
	movem.w	(sp)+,d0                       	| [$ed15: pla]
	SET_I_FLAG                             	| [$ed18: sei]
	GET_ADDRESS	0x77                       	| [$ed19: asl $77]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$ed1b: dey]
	move.b	d2,d0                           	| [$ed1e: tya]
	addq.b	#1,d1                           	| [$ed21: inx]
	GET_ADDRESS_X	0x47                     	| [$ed22: ora ($47, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ed24: plp]
	SET_XC_FLAGS                           	| [$ed27: sec]
	GET_ADDRESS	0x47                       	| [$ed28: asl $47]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	movem.w	d0,-(sp)                       	| [$ed2a: pha]
	CLR_I_FLAG                             	| [$ed2d: cli]
	GET_ADDRESS	0x47                       	| [$ed2e: ora $47]
	or.b	(a0),d0                           	| [...]
	movem.w	(sp)+,d0                       	| [$ed30: pla]
	GET_ADDRESS	0x47                       	| [$ed31: asl $47]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SET_I_FLAG                             	| [$ed33: sei]
	GET_ADDRESS	0x47                       	| [$ed34: ora $47]
	or.b	(a0),d0                           	| [...]
	subq.b	#1,d2                           	| [$ed36: dey]
	move.b	d2,d0                           	| [$ed39: tya]
	addq.b	#1,d1                           	| [$ed3c: inx]
	GET_ADDRESS_X	0xd7                     	| [$ed3e: ora ($d7, x)]
	or.b	(a0),d0                           	| [...]
	SET_XC_FLAGS                           	| [$ed40: sec]
	CLR_I_FLAG                             	| [$ed43: cli]
	SET_I_FLAG                             	| [$ed46: sei]
	CLR_V_FLAG                             	| [$ed49: clv]
	addq.b	#1,d1                           	| [$ed4c: inx]
	GET_ADDRESS_X	0xa7                     	| [$ed4d: ora ($a7, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ed4f: plp]
	movem.w	d0,-(sp)                       	| [$ed52: pha]
	movem.w	(sp)+,d0                       	| [$ed55: pla]
	subq.b	#1,d2                           	| [$ed58: dey]
	move.b	d0,d2                           	| [$ed5b: tay]
	addq.b	#1,d1                           	| [$ed5e: inx]
	GET_ADDRESS_X	0x77                     	| [$ed5f: ora ($77, x)]
	or.b	(a0),d0                           	| [...]
	SET_XC_FLAGS                           	| [$ed61: sec]
	CLR_I_FLAG                             	| [$ed64: cli]
	SET_I_FLAG                             	| [$ed67: sei]
	move.b	d2,d0                           	| [$ed6a: tya]
	CLR_V_FLAG                             	| [$ed6d: clv]
	addq.b	#1,d1                           	| [$ed70: inx]
	GET_ADDRESS_X	0x47                     	| [$ed71: ora ($47, x)]
	or.b	(a0),d0                           	| [...]
	POP_SR                                 	| [$ed73: plp]
	movem.w	d0,-(sp)                       	| [$ed76: pha]
	movem.w	(sp)+,d0                       	| [$ed79: pla]
	subq.b	#1,d2                           	| [$ed7c: dey]
	addq.b	#1,d1                           	| [$ed7f: inx]
	GET_ADDRESS_X	0xb9                     	| [$ed81: ora ($b9, x)]
	or.b	(a0),d0                           	| [...]
	illegal   <-- TODO: unsupported transfer to stack register	| [$ed84: txs]
	move.b	#0xba,d0                        	| [$ed85: lda #$ba]
	bpl	l_ed8f                             	| [$ed88: bpl $ed8f]
	rts                                    	| [$ed8a: rts]
	GET_ADDRESS	0x75                       	| [$ed8b: lsr $75, x]
	move.b	(a0,d1.w),d4	| [...]
	lsr.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	bvc	l_edf4                             	| [$ed8d: bvc $edf4]
l_ed8f:
	GET_ADDRESS	0x50                       	| [$ed8f: asl $50]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x73c4                     	| [$ed92: cmp $73c4, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$ed95: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0030                     	| [$ed97: sta $0030, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x378c                     	| [$ed9b: and $378c, x]
	and.b	(a0,d1.w),d0                     	| [...]
	GET_ADDRESS	0x06                       	| [$ed9e: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	bvc	l_eda3                             	| [$eda0: bvc $eda3]
	CLR_V_FLAG                             	| [$eda2: clv]
l_eda3:
	GET_ADDRESS	0x05                       	| [$eda3: cpy $05]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	jra	l_309d                             	| [$eda6: jmp $309d]
	GET_ADDRESS	0x67                       	| [$eda9: ora $67]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0xc89c                     	| [$edab: and $c89c, x]
	and.b	(a0,d1.w),d0                     	| [...]
	bvs	l_edb1                             	| [$edaf: bvs $edb1]
l_edb1:
	GET_ADDRESS	0x67                       	| [$edb1: ora $67]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x05                       	| [$edb3: lsr $05, x]
	move.b	(a0,d1.w),d4	| [...]
	lsr.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	bvc	l_ee03                             	| [$edb5: bvc $ee03]
	bpl	l_edbd                             	| [$edb8: bpl $edbd]
	nop                                    	| [$edba: cld]
	GET_ADDRESS	0xc99c                     	| [$edbb: cmp $c99c]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x50                       	| [$edbf: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x60                       	| [$edc1: ora $60]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x05                       	| [$edc3: lsr $05, x]
	move.b	(a0,d1.w),d4	| [...]
	lsr.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	bvc	l_ee2c                             	| [$edc5: bvc $ee2c]
	GET_ADDRESS	0x50                       	| [$edc7: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x9ccd                     	| [$edca: cmp $9ccd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$edcd: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0030                     	| [$edcf: sta $0030]
	move.b	d0,(a0)                         	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x9aab                     	| [$edea: lda $9aab, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0xba,d0                        	| [$eded: lda #$ba]
	bpl	l_edf5                             	| [$edf0: bpl $edf5]
	GET_ADDRESS	0x9aab                     	| [$edf2: cmp $9aab, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
l_edf5:
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0xba,d0                        	| [$edf5: lda #$ba]
	PUSH_SR
	GET_ADDRESS	0x0130                     	| [$edf7: sta $0130]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x9cab                     	| [$edfa: lda $9cab, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xd3,d0                         	| [$edfd: cmp #$d3]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x50                       	| [$edff: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x9aab                     	| [$ee02: cmp $9aab, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0xb1,d0                        	| [$ee05: lda #$b1]
	GET_ADDRESS	0x50                       	| [$ee07: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x9aab                     	| [$ee0a: cmp $9aab, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0xdc,d0                        	| [$ee0d: lda #$dc]
	PUSH_SR
	GET_ADDRESS	0x0330                     	| [$ee0f: sta $0330]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x9acd                     	| [$ee12: cmp $9acd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0xb1,d0                        	| [$ee15: lda #$b1]
	GET_ADDRESS	0x50                       	| [$ee17: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x9aab                     	| [$ee1a: cmp $9aab, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0xd3,d0                        	| [$ee1d: lda #$d3]
	GET_ADDRESS	0x50                       	| [$ee1f: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x9aab                     	| [$ee22: cmp $9aab, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	#0xd3,d0                        	| [$ee25: lda #$d3]
	GET_ADDRESS	0x50                       	| [$ee27: ror $50, x]
	move.b	(a0,d1.w),d4	| [...]
	roxr.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	0x60                       	| [$ee29: ora $60]
	or.b	(a0),d0                           	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $2a
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	0x0530                     	| [$ee2f: sta $0530]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$ee32: rts]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $65
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x50                       	| [$ee37: asl $50]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0x60                       	| [$ee39: ora $60]
	or.b	(a0),d0                           	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $65
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x50                       	| [$ee3f: asl $50]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
rti
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $4c
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	0x0030                     	| [$ee47: sta $0030, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x9aab                     	| [$ee52: lda $9aab, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0xba,d0                        	| [$ee55: lda #$ba]
	bpl	l_ee5d                             	| [$ee58: bpl $ee5d]
	nop                                    	| [$ee5a: cld]
	GET_ADDRESS	0x378c                     	| [$ee5b: cmp $378c]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x76                       	| [$ee5e: adc $76]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	bvc	l_ee65                             	| [$ee60: bvc $ee65]
	nop                                    	| [$ee62: cld]
	GET_ADDRESS	0x73                       	| [$ee63: cpy $73]
	cmp.b	(a0),d2                          	| [...]
l_ee65:
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	addq.b	#1,d2                           	| [$ee65: iny]
	PUSH_SR
	GET_ADDRESS	0x0530                     	| [$ee67: sta $0530]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x378c                     	| [$ee6b: and $378c, x]
	and.b	(a0,d1.w),d0                     	| [...]
	jra	l_308d                             	| [$ee6e: jmp $308d]
	nop                                    	| [$ee72: cld]
	GET_ADDRESS	0xc88c                     	| [$ee73: cmp $c88c]
	cmp.b	(a0),d0                          	| [...]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0030                     	| [$ee77: sta $0030]
	move.b	d0,(a0)                         	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	addq.b	#1,d2                           	| [$ee7d: iny]
	GET_ADDRESS_Y	0x00                     	| [$ee7e: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1b
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	0x0037                     	| [$ee84: sty $0037]
	move.b	d2,(a0)                         	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $73
   ^^^^ TODO: unknown/unsupported instruction brk
	addq.b	#1,d2                           	| [$ee8d: iny]
	GET_ADDRESS_Y	0x00                     	| [$ee8e: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1b
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	0xb1c8                     	| [$ee94: sty $b1c8]
	move.b	d2,(a0)                         	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $05
   ^^^^ TODO: unknown/unsupported instruction brk
	bvc	l_ee9f                             	| [$ee9d: bvc $ee9f]
l_ee9f:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $03
   ^^^^ TODO: unknown/unsupported instruction brk
	bmi	l_eea7                             	| [$eea5: bmi $eea7]
l_eea7:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0xb9                     	| [$eeb9: ora ($b9, x)]
	or.b	(a0),d0                           	| [...]
	illegal   <-- TODO: unsupported transfer to stack register	| [$eebc: txs]
	move.b	#0xba,d0                        	| [$eebd: lda #$ba]
	bpl	l_eec5                             	| [$eec0: bpl $eec5]
	GET_ADDRESS	0x8acd                     	| [$eec2: cmp $8acd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
l_eec5:
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	move.b	d0,d2                           	| [$eec5: tay]
tsx
	PUSH_SR
	GET_ADDRESS	0x0330                     	| [$eec7: sta $0330, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x9ccd                     	| [$eeca: cmp $9ccd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	bmi	l_ef1b                             	| [$eecd: bmi $ef1b]
	PUSH_SR
	GET_ADDRESS	0x0330                     	| [$eecf: sta $0330, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x8cab                     	| [$eed2: cmp $8cab, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$eed5: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0030                     	| [$eed7: sta $0030, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
brk $34
   ^^^^ TODO: unknown/unsupported instruction brk
	addq.b	#1,d2                           	| [$eedd: iny]
	GET_ADDRESS_Y	0x00                     	| [$eede: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $3d
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	0xd3c9                     	| [$eee4: sty $d3c9]
	move.b	d2,(a0)                         	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x00                       	| [$eeee: adc $00]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x00c4                     	| [$eef2: lda $00c4, y]
	move.b	(a0,d2.w),d0                    	| [...]
brk $4c
   ^^^^ TODO: unknown/unsupported instruction brk
	bpl	l_eefd                             	| [$eef8: bpl $eefd]
	nop                                    	| [$eefa: cld]
	GET_ADDRESS	0x00                       	| [$eefb: cpy $00]
	cmp.b	(a0),d2                          	| [...]
l_eefd:
brk $4c
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0330                     	| [$eeff: sta $0330, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	nop                                    	| [$ef02: cld]
	GET_ADDRESS	0x00                       	| [$ef03: cpy $00]
	cmp.b	(a0),d2                          	| [...]
brk $4c
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0030                     	| [$ef07: sta $0030]
	move.b	d0,(a0)                         	| [...]
	POP_SR
brk $3d
   ^^^^ TODO: unknown/unsupported instruction brk
	illegal   <-- TODO: unsupported transfer to stack register	| [$ef0c: txs]
	move.b	#0xd3,d0                        	| [$ef0d: lda #$d3]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0xa88a                     	| [$ef13: and $a88a, x]
	and.b	(a0,d1.w),d0                     	| [...]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
l_ef1b:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0xb9                     	| [$ef21: ora ($b9, x)]
	or.b	(a0),d0                           	| [...]
	illegal   <-- TODO: unsupported transfer to stack register	| [$ef24: txs]
	move.b	#0xba,d0                        	| [$ef25: lda #$ba]
	bpl	l_ef2d                             	| [$ef28: bpl $ef2d]
	GET_ADDRESS	0x9ccd                     	| [$ef2a: cmp $9ccd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
l_ef2d:
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$ef2d: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0130                     	| [$ef2f: sta $0130, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	CLR_V_FLAG                             	| [$ef32: clv]
	move.b	d1,d0                           	| [$ef34: txa]
	move.b	d0,d2                           	| [$ef35: tay]
tsx
	bpl	l_ef3d                             	| [$ef38: bpl $ef3d]
	GET_ADDRESS	0x9ccd                     	| [$ef3a: cmp $9ccd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
l_ef3d:
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$ef3d: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0130                     	| [$ef3f: sta $0130, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	CLR_V_FLAG                             	| [$ef42: clv]
	PUSH_SR
	GET_ADDRESS	0xbac8                     	| [$ef44: sty $bac8]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	bpl	l_ef4d                             	| [$ef48: bpl $ef4d]
	GET_ADDRESS	0x9ccd                     	| [$ef4a: cmp $9ccd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
l_ef4d:
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$ef4d: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0330                     	| [$ef4f: sta $0330, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	nop                                    	| [$ef52: cld]
	move.b	d1,d0                           	| [$ef54: txa]
	move.b	d0,d2                           	| [$ef55: tay]
tsx
	PUSH_SR
	GET_ADDRESS	0x0330                     	| [$ef57: sta $0330]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x9ccd                     	| [$ef5a: cmp $9ccd, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	cmp.b	#0xdc,d0                         	| [$ef5d: cmp #$dc]
	PUSH_SR
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x0030                     	| [$ef5f: sta $0030, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1b
   ^^^^ TODO: unknown/unsupported instruction brk
	illegal   <-- TODO: unsupported transfer to stack register	| [$ef8c: txs]
	bpl	l_efb9                             	| [$ef8d: bpl $efb9]
	bpl	l_ef93                             	| [$ef90: bpl $ef93]
	GET_ADDRESS	0x71c4                     	| [$ef92: lda $71c4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0xd3,d0                        	| [$ef95: lda #$d3]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x178a                     	| [$ef9b: and $178a, x]
	and.b	(a0,d1.w),d0                     	| [...]
	roxl.b	#1,d0                           	| [$ef9e: rol a]
	bpl	l_efa3                             	| [$efa0: bpl $efa3]
	GET_ADDRESS	0x73c4                     	| [$efa2: lda $73c4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$efa5: iny]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	0x4c30                     	| [$efac: sty $4c30]
	move.b	d2,(a0)                         	| [...]
	POP_SR
	bpl	l_efb3                             	| [$efb0: bpl $efb3]
	GET_ADDRESS	0x03c4                     	| [$efb2: lda $03c4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xd3,d0                         	| [$efb5: cmp #$d3]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
l_efb9:
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x179a                     	| [$efbb: and $179a, x]
	and.b	(a0,d1.w),d0                     	| [...]
	roxl.b	#1,d0                           	| [$efbe: rol a]
	bpl	l_efc3                             	| [$efc0: bpl $efc3]
	GET_ADDRESS	0x73c4                     	| [$efc2: lda $73c4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$efc5: iny]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	move.b	d1,d0                           	| [$efcc: txa]
	jra	l_109b                             	| [$efce: jmp $109b]
	GET_ADDRESS_X	0xb9                     	| [$efd1: ora ($b9, x)]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x03                       	| [$efd3: cpy $03]
	cmp.b	(a0),d2                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	addq.b	#1,d2                           	| [$efd5: iny]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$eff1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_eff3:
	nop                                    	| [$eff3: nop]
	clr.b	d0                               	| [$eff4: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xf3                       	| [$eff6: sta $f3]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$eff8: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$effa: nop]
	clr.b	d0                               	| [$effb: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xed                       	| [$effd: sta $ed]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x36                       	| [$efff: lda $36]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xe4                       	| [$f001: sta $e4]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$f003: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xe5                       	| [$f005: sta $e5]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f007: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f009: nop]
l_f00a:
	move.b	#0x02,d2                        	| [$f00a: ldy #$02]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f00c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f00e: nop]
l_f00f:
	GET_ADDRESS_Y	0xe4                     	| [$f00f: lda ($e4), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x00e7                     	| [$f011: sta $00e7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$f014: dey]
	bpl	l_f00f                             	| [$f015: bpl $f00f]
	GET_ADDRESS	0xe7                       	| [$f017: lda $e7]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$f019: cmp #$ff]
	bne	l_f021                             	| [$f01b: bne $f021]
	rts                                    	| [$f01d: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f01e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f020: nop]
l_f021:
	GET_ADDRESS	0xe4                       	| [$f021: lda $e4]
	move.b	(a0),d0                         	| [...]
	                           	| [$f023: clc]
	add.b	#0x03,d0                        	| [$f024: adc #$03]
	PUSH_SR
	GET_ADDRESS	0xe4                       	| [$f026: sta $e4]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe5                       	| [$f028: lda $e5]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d4	| [$f02a: adc #$00]
	addx.b	d4,d0                        	| [$f02a: adc #$00]
	PUSH_SR
	GET_ADDRESS	0xe5                       	| [$f02c: sta $e5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xed                       	| [$f02e: inc $ed]
	addq.b	#1,(a0)                         	| [...]
	illegal   <-- TODO: unsupported set decimal mode	| [$f030: sed]
	GET_ADDRESS	0xe7                       	| [$f031: lda $e7]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$f033: sec]
	GET_ADDRESS	0xcc                       	| [$f034: sbc $cc]
	sbc	(a0),d0                            	| [...]
	GET_ADDRESS	0xe8                       	| [$f036: lda $e8]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xcd                       	| [$f038: sbc $cd]
	sbc	(a0),d0                            	| [...]
	GET_ADDRESS	0xe9                       	| [$f03a: lda $e9]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xce                       	| [$f03c: sbc $ce]
	sbc	(a0),d0                            	| [...]
	nop                                    	| [$f03e: cld]
	bcs	l_f00a                             	| [$f03f: bcs $f00a]
         ^^^^^^ TODO: warning: review stray bcs test
	GET_ADDRESS	0xed                       	| [$f041: ldx $ed]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf07e                     	| [$f043: lda $f07e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$f046: clc]
	add.b	#0x36,d0                        	| [$f047: adc #$36]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f049: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$f04b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f04d: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x02,d0                        	| [$f04f: lda #$02]
	PUSH_SR
	GET_ADDRESS	0xda                       	| [$f051: sta $da]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_f08c                            	| [$f053: jsr $f08c]
	move.b	#0x02,d1                        	| [$f056: ldx #$02]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f058: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f05a: nop]
l_f05b:
	clr.b	d0                               	| [$f05b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xcc                       	| [$f05d: sta $cc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$f05f: dex]
	bpl	l_f05b                             	| [$f060: bpl $f05b]
	GET_ADDRESS	0xed                       	| [$f062: ldx $ed]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf084                     	| [$f064: lda $f084, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$f067: clc]
	add.b	#0x36,d0                        	| [$f068: adc #$36]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f06a: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$f06c: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f06e: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x02,d0                        	| [$f070: lda #$02]
	PUSH_SR
	GET_ADDRESS	0xda                       	| [$f072: sta $da]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_f08c                            	| [$f074: jsr $f08c]
	jbsr	l_f0d1                            	| [$f077: jsr $f0d1]
	jbsr	l_cbe3                            	| [$f07a: jsr $cbe3]
	rts                                    	| [$f07d: rts]
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x09                       	| [$f081: asl $09]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $12
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x18                       	| [$f086: ora $18, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0xf585                     	| [$f089: asl $f585, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
l_f08c:
	nop                                    	| [$f08c: nop]
l_f08d:
	GET_ADDRESS	0xda                       	| [$f08d: ldy $da]
	move.b	(a0),d2                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f08f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f091: nop]
l_f092:
	GET_ADDRESS_Y	0xd8                     	| [$f092: lda ($d8), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x00ea                     	| [$f094: sta $00ea, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$f097: dey]
	bpl	l_f092                             	| [$f098: bpl $f092]
	GET_ADDRESS	0xea                       	| [$f09a: lda $ea]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$f09c: cmp #$ff]
	bne	l_f0a4                             	| [$f09e: bne $f0a4]
	rts                                    	| [$f0a0: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f0a1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f0a3: nop]
l_f0a4:
	GET_ADDRESS	0xda                       	| [$f0a4: ldy $da]
	move.b	(a0),d2                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f0a6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f0a8: nop]
l_f0a9:
	GET_ADDRESS	0x00cc                     	| [$f0a9: lda $00cc, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0xd8                     	| [$f0ac: sta ($d8), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$f0ae: dey]
	bpl	l_f0a9                             	| [$f0af: bpl $f0a9]
	GET_ADDRESS	0xda                       	| [$f0b1: ldx $da]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f0b3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f0b5: nop]
l_f0b6:
	GET_ADDRESS	0xea                       	| [$f0b6: lda $ea, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xcc                       	| [$f0b8: sta $cc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$f0ba: dex]
	bpl	l_f0b6                             	| [$f0bb: bpl $f0b6]
	GET_ADDRESS	0xda                       	| [$f0bd: ldx $da]
	move.b	(a0),d1                         	| [...]
	addq.b	#1,d1                           	| [$f0bf: inx]
	move.b	d1,d0                           	| [$f0c0: txa]
	CLR_XC_FLAGS                           	| [$f0c1: clc]
	GET_ADDRESS	0xd8                       	| [$f0c2: adc $d8]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f0c4: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd9                       	| [$f0c6: lda $d9]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d4	| [$f0c8: adc #$00]
	addx.b	d4,d0                        	| [$f0c8: adc #$00]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f0ca: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_f08d                             	| [$f0cc: jmp $f08d]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f0cf: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f0d1:
	nop                                    	| [$f0d1: nop]
	jbsr	l_c8a3                            	| [$f0d2: jsr $c8a3]
	jbsr	l_f1dc                            	| [$f0d5: jsr $f1dc]
	jbsr	l_f2f8                            	| [$f0d8: jsr $f2f8]
	move.b	#0x05,d0                        	| [$f0db: lda #$05]
	PUSH_SR
	GET_ADDRESS	0xdc                       	| [$f0dd: sta $dc]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f0df: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f0e1: nop]
l_f0e2:
	GET_ADDRESS	0xdc                       	| [$f0e2: lda $dc]
	move.b	(a0),d0                         	| [...]
	                           	| [$f0e4: clc]
	add.b	#0x03,d0                        	| [$f0e5: adc #$03]
	PUSH_SR
	GET_ADDRESS	0xdd                       	| [$f0e7: sta $dd]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	asl.b	#1,d0                            	| [$f0e9: asl a]
	CLR_XC_FLAGS                           	| [$f0ea: clc]
	GET_ADDRESS	0xdd                       	| [$f0eb: adc $dd]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$f0ed: tax]
	GET_ADDRESS	0xdc                       	| [$f0ee: lda $dc]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$f0f0: asl a]
	                           	| [$f0f1: clc]
	add.b	#0x10,d0                        	| [$f0f2: adc #$10]
	move.b	d0,d2                           	| [$f0f4: tay]
	jbsr	l_c95a                            	| [$f0f5: jsr $c95a]
	GET_ADDRESS	0xdc                       	| [$f0f8: dec $dc]
	subq.b	#1,(a0)                         	| [...]
	bpl	l_f0e2                             	| [$f0fa: bpl $f0e2]
	move.b	#0x04,d0                        	| [$f0fc: lda #$04]
	PUSH_SR
	GET_ADDRESS	0xdc                       	| [$f0fe: sta $dc]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_f1b6                            	| [$f100: jsr $f1b6]
	clr.b	d0                               	| [$f103: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xde                       	| [$f105: sta $de]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x07                       	| [$f107: lda $07]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xdf                       	| [$f109: sta $df]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x06,d0                        	| [$f10b: lda #$06]
	PUSH_SR
	GET_ADDRESS	0xe0                       	| [$f10d: sta $e0]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$f10f: lda $00]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xe1                       	| [$f111: sta $e1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xe2                       	| [$f113: sta $e2]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xe3                     	| [$f115: adc ($e3, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS_X	0xf5                     	| [$f117: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$f119: nop]
l_f11a:
	jbsr	l_f2b8                            	| [$f11a: jsr $f2b8]
	jbsr	l_f2d1                            	| [$f11d: jsr $f2d1]
	GET_ADDRESS	0xe2                       	| [$f120: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$f122: and #$0f]
	cmp.b	#0x0f,d0                         	| [$f124: cmp #$0f]
	bne	l_f134                             	| [$f126: bne $f134]
	jbsr	l_f2b8                            	| [$f128: jsr $f2b8]
	clr.b	d0                               	| [$f12b: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x4003                     	| [$f12d: sta $4003]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$f130: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f131: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f133: nop]
l_f134:
	GET_ADDRESS	0xe2                       	| [$f134: lda $e2]
	move.b	(a0),d0                         	| [...]
	bpl	l_f14d                             	| [$f136: bpl $f14d]
	GET_ADDRESS	0xe3                       	| [$f138: lda $e3]
	move.b	(a0),d0                         	| [...]
	bmi	l_f14d                             	| [$f13a: bmi $f14d]
	st.b	d0                                	| [$f13c: lda #$ff]
	PUSH_SR
	GET_ADDRESS	0xde                       	| [$f13e: sta $de]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe3                       	| [$f140: lda $e3]
	move.b	(a0),d0                         	| [...]
	or.b	#0x80,d0                          	| [$f142: ora #$80]
	PUSH_SR
	GET_ADDRESS	0xe3                       	| [$f144: sta $e3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00                       	| [$f146: lda $00]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xdf                       	| [$f148: sta $df]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f14a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdea5                     	| [$f14c: ldx $dea5]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xdf                       	| [$f14f: ora $df]
	or.b	(a0),d0                           	| [...]
	bne	l_f165                             	| [$f151: bne $f165]
	GET_ADDRESS	0xe2                       	| [$f153: lda $e2]
	move.b	(a0),d0                         	| [...]
	bpl	l_f15e                             	| [$f155: bpl $f15e]
	or.b	#0x0f,d0                          	| [$f157: ora #$0f]
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f159: sta $e2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f15b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x8009                     	| [$f15d: ldx $8009]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f160: sta $e2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f162: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x2f20                     	| [$f164: ldx $2f20]
	move.b	(a0),d1                         	| [...]
	jbsr	l_f37c                            	| [$f168: jsr $f37c]
	jbsr	l_f3e9                            	| [$f16b: jsr $f3e9]
	jbsr	l_f42f                            	| [$f16e: jsr $f42f]
	jbsr	l_f59c                            	| [$f171: jsr $f59c]
	GET_ADDRESS	0xe2                       	| [$f174: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0x20,d0                         	| [$f176: and #$20]
	beq	l_f197                             	| [$f178: beq $f197]
	jbsr	l_f1dc                            	| [$f17a: jsr $f1dc]
	jbsr	l_f1b6                            	| [$f17d: jsr $f1b6]
	jbsr	l_f2f8                            	| [$f180: jsr $f2f8]
	GET_ADDRESS	0xe2                       	| [$f183: lda $e2]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x20,d0                         	| [$f185: eor #$20]
	move.b	d0,d1                           	| [$f187: tax]
	GET_ADDRESS	0xe3                       	| [$f188: lda $e3]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$f18a: and #$40]
	bne	l_f192                             	| [$f18c: bne $f192]
	addq.b	#1,d1                           	| [$f18e: inx]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f18f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f191: nop]
l_f192:
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f192: stx $e2]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$f194: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x3e20                     	| [$f196: ror $3e20]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xa5                       	| [$f199: inc $a5, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	and.b	#0xbf,d0                         	| [$f19c: and #$bf]
	PUSH_SR
	GET_ADDRESS	0xe3                       	| [$f19e: sta $e3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe2                       	| [$f1a0: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$f1a2: and #$0f]
	cmp.b	#0x03,d0                         	| [$f1a4: cmp #$03]
	* bcc=>bcs
	bcs	l_f1b1                             	| [$f1a6: bcc $f1b1]
	GET_ADDRESS	0xe3                       	| [$f1a8: lda $e3]
	move.b	(a0),d0                         	| [...]
	or.b	#0x20,d0                          	| [$f1aa: ora #$20]
	PUSH_SR
	GET_ADDRESS	0xe3                       	| [$f1ac: sta $e3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$f1ae: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$f1b0: nop]
l_f1b1:
	jra	l_f11a                             	| [$f1b1: jmp $f11a]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f1b4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f1b6:
	GET_ADDRESS	0xb4a9                     	| [$f1b6: ldx $b4a9]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$f1b9: sta $1802]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x40                       	| [$f1bc: lda $40]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$f1be: sta $1803]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x47,d0                        	| [$f1c1: lda #$47]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$f1c3: sta $1801]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x01                       	| [$f1c6: lda $01]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1800                     	| [$f1c8: sta $1800]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$f1cb: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1804                     	| [$f1cd: sta $1804]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xee                       	| [$f1d0: sta $ee]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xef                       	| [$f1d2: sta $ef]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x17                       	| [$f1d4: lda $17]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x1805                     	| [$f1d6: sta $1805]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$f1d9: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f1da: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f1dc:
	GET_ADDRESS	0x08a9                     	| [$f1dc: ldx $08a9]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xdd                       	| [$f1df: sta $dd]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f1e1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f1e3: nop]
l_f1e4:
	GET_ADDRESS	0xdd                       	| [$f1e4: lda $dd]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$f1e6: asl a]
	move.b	d0,d1                           	| [$f1e7: tax]
	GET_ADDRESS	0xf212                     	| [$f1e8: lda $f212, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f1eb: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	SBC_X	0x24                             	| [$f1ed: sbc $24, x]
	PUSH_SR
	GET_ADDRESS	0xda                       	| [$f1f0: sta $da]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	addq.b	#1,d1                           	| [$f1f2: inx]
	GET_ADDRESS	0xf212                     	| [$f1f3: lda $f212, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f1f6: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xf224                     	| [$f1f8: lda $f224, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xdb                       	| [$f1fb: sta $db]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdd                       	| [$f1fd: ror $dd]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xf236                     	| [$f1ff: lda $f236, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d2                           	| [$f202: tay]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f203: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f205: nop]
l_f206:
	GET_ADDRESS_Y	0xd8                     	| [$f206: lda ($d8), y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0xda                     	| [$f208: sta ($da), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$f20a: dey]
	bpl	l_f206                             	| [$f20b: bpl $f206]
	GET_ADDRESS	0xdd                       	| [$f20d: dec $dd]
	subq.b	#1,(a0)                         	| [...]
	bpl	l_f1e4                             	| [$f20f: bpl $f1e4]
	rts                                    	| [$f211: rts]
	GET_ADDRESS	0xf2                       	| [$f216: adc $f2]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	SET_I_FLAG                             	| [$f218: sei]
	GET_ADDRESS	0xf2                       	| [$f220: ldy $f2]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0xa8f2                     	| [$f222: lda $a8f2]
	move.b	(a0),d0                         	| [...]
	bpl	l_f22f                             	| [$f225: bpl $f22f]
	GET_ADDRESS_Y	0x68                     	| [$f227: ora ($68), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS_Y	0xc8                     	| [$f229: ora ($c8), y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS_Y	0x4b                     	| [$f22b: ora ($4b), y]
	or.b	(a0,d2.w),d0                      	| [...]
l_f22f:
	CLR_XC_FLAGS                           	| [$f22f: clc]
	asl.b	#1,d0                            	| [$f239: asl a]
	GET_ADDRESS	0x0808                     	| [$f23a: asl $0808]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
brk $0c
   ^^^^ TODO: unknown/unsupported instruction brk
brk $0d
   ^^^^ TODO: unknown/unsupported instruction brk
brk $0e
   ^^^^ TODO: unknown/unsupported instruction brk
brk $0f
   ^^^^ TODO: unknown/unsupported instruction brk
brk $10
   ^^^^ TODO: unknown/unsupported instruction brk
brk $11
   ^^^^ TODO: unknown/unsupported instruction brk
brk $12
   ^^^^ TODO: unknown/unsupported instruction brk
brk timer1_0013
   ^^^^ TODO: unknown/unsupported instruction brk
brk timer1_0014
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x00                       	| [$f252: ora $00, x]
	or.b	(a0,d1.w),d0                      	| [...]
	GET_ADDRESS	0x00                       	| [$f254: asl $00, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
brk $18
   ^^^^ TODO: unknown/unsupported instruction brk
brk $19
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1a
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1b
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1c
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1d
   ^^^^ TODO: unknown/unsupported instruction brk
brk $1e
   ^^^^ TODO: unknown/unsupported instruction brk
brk $20
   ^^^^ TODO: unknown/unsupported instruction brk
brk $21
   ^^^^ TODO: unknown/unsupported instruction brk
brk $22
   ^^^^ TODO: unknown/unsupported instruction brk
brk $23
   ^^^^ TODO: unknown/unsupported instruction brk
brk $24
   ^^^^ TODO: unknown/unsupported instruction brk
brk $cc
   ^^^^ TODO: unknown/unsupported instruction brk
brk $cd
   ^^^^ TODO: unknown/unsupported instruction brk
brk $ce
   ^^^^ TODO: unknown/unsupported instruction brk
brk $cf
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x0b1a                     	| [$f278: ora $0b1a, x]
	or.b	(a0,d1.w),d0                      	| [...]
brk $1c
   ^^^^ TODO: unknown/unsupported instruction brk
brk $0f
   ^^^^ TODO: unknown/unsupported instruction brk
	CLR_XC_FLAGS                           	| [$f281: clc]
	GET_ADDRESS	0x2f3c                     	| [$f282: asl $2f3c]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x31                     	| [$f28d: eor ($31, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x3340                     	| [$f28f: and $3340, x]
	and.b	(a0,d1.w),d0                     	| [...]
	GET_ADDRESS	0x00                       	| [$f292: rol $00]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
brk $28
   ^^^^ TODO: unknown/unsupported instruction brk
brk player_lives_0029
   ^^^^ TODO: unknown/unsupported instruction brk
brk $2a
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS	0x3e00                     	| [$f29b: rol $3e00, x]
	move.b	(a0,d1.w),d4	| [...]
	roxl.b	#1,d4                    	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
brk $3e
   ^^^^ TODO: unknown/unsupported instruction brk
brk $3e
   ^^^^ TODO: unknown/unsupported instruction brk
brk $3e
   ^^^^ TODO: unknown/unsupported instruction brk
brk $42
   ^^^^ TODO: unknown/unsupported instruction brk
brk $42
   ^^^^ TODO: unknown/unsupported instruction brk
brk $42
   ^^^^ TODO: unknown/unsupported instruction brk
brk $42
   ^^^^ TODO: unknown/unsupported instruction brk
	GET_ADDRESS_X	0x00                     	| [$f2ad: eor ($00, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x00                     	| [$f2af: eor ($00, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x00                     	| [$f2b1: eor ($00, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x00                     	| [$f2b3: eor ($00, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS_X	0x85                     	| [$f2b5: eor ($85, x)]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	SBC_X	0xea                             	| [$f2b7: sbc $ea, x]
l_f2b9:
	GET_ADDRESS	0x4003                     	| [$f2b9: lda $4003]
	move.b	(a0),d0                         	| [...]
	bpl	l_f2b9                             	| [$f2bc: bpl $f2b9]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f2be: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f2c0: nop]
l_f2c1:
	GET_ADDRESS	0x4003                     	| [$f2c1: lda $4003]
	move.b	(a0),d0                         	| [...]
	bmi	l_f2c1                             	| [$f2c4: bmi $f2c1]
	CLR_I_FLAG                             	| [$f2c6: cli]
	nop                                    	| [$f2c7: nop]
	nop                                    	| [$f2c8: nop]
	nop                                    	| [$f2c9: nop]
	SET_I_FLAG                             	| [$f2ca: sei]
	jbsr	l_d045                            	| [$f2cb: jsr $d045]
	rts                                    	| [$f2ce: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f2cf: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f2d1:
	nop                                    	| [$f2d1: nop]
	GET_ADDRESS	0xde                       	| [$f2d2: lda $de]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$f2d4: sec]
	SBC_IMM	0x01                           	| [$f2d5: sbc #$01]
	PUSH_SR
	GET_ADDRESS	0xde                       	| [$f2d7: sta $de]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdf                       	| [$f2d9: lda $df]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x00                           	| [$f2db: sbc #$00]
	PUSH_SR
	GET_ADDRESS	0xdf                       	| [$f2dd: sta $df]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe0                       	| [$f2df: dec $e0]
	subq.b	#1,(a0)                         	| [...]
	bpl	l_f2ea                             	| [$f2e1: bpl $f2ea]
	move.b	#0x04,d0                        	| [$f2e3: lda #$04]
	PUSH_SR
	GET_ADDRESS	0xe0                       	| [$f2e5: sta $e0]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f2e7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f2e9: nop]
l_f2ea:
	GET_ADDRESS	0xe1                       	| [$f2ea: dec $e1]
	subq.b	#1,(a0)                         	| [...]
	bpl	l_f2f5                             	| [$f2ec: bpl $f2f5]
	clr.b	d0                               	| [$f2ee: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xe1                       	| [$f2f0: sta $e1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f2f2: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f2f4: nop]
l_f2f5:
	rts                                    	| [$f2f5: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f2f6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f2f8:
	nop                                    	| [$f2f8: nop]
	move.b	#0x8b,d0                        	| [$f2f9: lda #$8b]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f2fb: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x12,d0                        	| [$f2fd: lda #$12]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f2ff: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d1                               	| [$f301: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f303: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00a0                     	| [$f305: ldx $00a0]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f308: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f30a: nop]
l_f30b:
	GET_ADDRESS	0x48                       	| [$f30b: lda $48, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0xd8                     	| [$f30d: sta ($d8), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0x0fe0                     	| [$f30f: ldy $0fe0]
	move.b	(a0),d2                         	| [...]
	bne	l_f318                             	| [$f312: bne $f318]
	rts                                    	| [$f314: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f315: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xc0c8                     	| [$f317: ldx $c0c8]
	move.b	(a0),d1                         	| [...]
	bne	l_f30b                             	| [$f31b: bne $f30b]
	GET_ADDRESS	0xd8                       	| [$f31d: lda $d8]
	move.b	(a0),d0                         	| [...]
	                           	| [$f31f: clc]
	add.b	#0x40,d0                        	| [$f320: adc #$40]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f322: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd9                       	| [$f324: adc $d9]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	#0x00,d4	| [$f326: adc #$00]
	addx.b	d4,d0                        	| [$f326: adc #$00]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f328: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	l_f306                             	| [$f32a: jmp $f306]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f32d: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe0a5                     	| [$f32f: ldx $e0a5]
	move.b	(a0),d1                         	| [...]
	bne	l_f379                             	| [$f332: bne $f379]
	GET_ADDRESS	0xe2                       	| [$f334: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$f336: and #$10]
	lsr.b	#1,d0                            	| [$f338: lsr a]
	lsr.b	#1,d0                            	| [$f339: lsr a]
	lsr.b	#1,d0                            	| [$f33a: lsr a]
	lsr.b	#1,d0                            	| [$f33b: lsr a]
	                           	| [$f33c: clc]
	add.b	#0x43,d0                        	| [$f33d: adc #$43]
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$f33f: sta $1801]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe2                       	| [$f342: lda $e2]
	move.b	(a0),d0                         	| [...]
	bpl	l_f370                             	| [$f344: bpl $f370]
	GET_ADDRESS	0xdc                       	| [$f346: dec $dc]
	subq.b	#1,(a0)                         	| [...]
	beq	l_f351                             	| [$f348: beq $f351]
	move.b	#0x47,d0                        	| [$f34a: lda #$47]
	bne	l_f36a                             	| [$f34c: bne $f36a]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f34e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f350: nop]
l_f351:
	GET_ADDRESS	0xf3                       	| [$f351: inc $f3]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0xf3                       	| [$f353: lda $f3]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$f355: cmp #$01]
	bne	l_f361                             	| [$f357: bne $f361]
	move.b	#0x1e,d0                        	| [$f359: lda #$1e]
	PUSH_SR
	GET_ADDRESS	0x4003                     	| [$f35b: sta $4003]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$f35e: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$f360: nop]
l_f361:
	move.b	#0x03,d0                        	| [$f361: lda #$03]
	PUSH_SR
	GET_ADDRESS	0xdc                       	| [$f363: sta $dc]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x4c                       	| [$f365: lda $4c]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f367: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f369: nop]
l_f36a:
	PUSH_SR
	GET_ADDRESS	0x1801                     	| [$f36a: sta $1801]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$f36d: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0xe2a5                     	| [$f36f: ror $e2a5]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	eor.b	#0x10,d0                         	| [$f372: eor #$10]
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f374: sta $e2]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$f376: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$f378: nop]
l_f379:
	rts                                    	| [$f379: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f37a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f37c:
	GET_ADDRESS	0x02ad                     	| [$f37c: ldx $02ad]
	move.b	(a0),d1                         	| [...]
rti
	not.b	d0                               	| [$f380: eor #$ff]
	and.b	#0x03,d0                         	| [$f382: and #$03]
	beq	l_f38e                             	| [$f384: beq $f38e]
tsx
	addq.b	#1,d1                           	| [$f387: inx]
	addq.b	#1,d1                           	| [$f388: inx]
	illegal   <-- TODO: unsupported transfer to stack register	| [$f389: txs]
	rts                                    	| [$f38a: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f38b: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe0a5                     	| [$f38d: ldx $e0a5]
	move.b	(a0),d1                         	| [...]
	bne	l_f3d4                             	| [$f390: bne $f3d4]
	GET_ADDRESS	0xe2                       	| [$f392: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0xe0,d0                         	| [$f394: and #$e0]
	bne	l_f3d4                             	| [$f396: bne $f3d4]
	GET_ADDRESS	0xcb                       	| [$f398: ldx $cb]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x4003                     	| [$f39a: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$f39d: and #$40]
	bne	l_f3a6                             	| [$f39f: bne $f3a6]
	clr.b	d1                               	| [$f3a1: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f3a3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x00bd                     	| [$f3a5: ldx $00bd]
	move.b	(a0),d1                         	| [...]
rti
	not.b	d0                               	| [$f3a9: eor #$ff]
	and.b	#0x0f,d0                         	| [$f3ab: and #$0f]
	move.b	d0,d1                           	| [$f3ad: tax]
	GET_ADDRESS	0xf3d5                     	| [$f3ae: lda $f3d5, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xef                       	| [$f3b1: cmp $ef]
	cmp.b	(a0),d0                          	| [...]
	beq	l_f3d4                             	| [$f3b3: beq $f3d4]
	PUSH_SR
	GET_ADDRESS	0xef                       	| [$f3b5: sta $ef]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	bcc	l_f41e                             	| [$f3b7: bcc $f41e]
         ^^^^^^ TODO: warning: stray bcc test
	GET_ADDRESS	0x0510                     	| [$f3b9: inc $0510]
	addq.b	#1,(a0)                         	| [...]
	clr.b	d0                               	| [$f3bc: lda #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f3be: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f3c0: nop]
	cmp.b	#0x24,d0                         	| [$f3c1: cmp #$24]
	* bcc=>bcs
	bcs	l_f3ca                             	| [$f3c3: bcc $f3ca]
	move.b	#0x23,d0                        	| [$f3c5: lda #$23]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f3c7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f3c9: nop]
l_f3ca:
	PUSH_SR
	GET_ADDRESS	0xee                       	| [$f3ca: sta $ee]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x15                       	| [$f3cc: lda $15]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0x4003                     	| [$f3ce: sta $4003]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f3d1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f3d3: nop]
l_f3d4:
	rts                                    	| [$f3d4: rts]
brk $01
   ^^^^ TODO: unknown/unsupported instruction brk
brk $f6
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $0a
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $00
   ^^^^ TODO: unknown/unsupported instruction brk
brk $85
   ^^^^ TODO: unknown/unsupported instruction brk
	SBC_X	0xea                             	| [$f3e8: sbc $ea, x]
	GET_ADDRESS	0xe2                       	| [$f3ea: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0xe0,d0                         	| [$f3ec: and #$e0]
	bne	l_f422                             	| [$f3ee: bne $f422]
	move.b	#0x78,d1                        	| [$f3f0: ldx #$78]
	GET_ADDRESS	0xee                       	| [$f3f2: lda $ee]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x1e,d0                         	| [$f3f4: cmp #$1e]
	* bcs=>bcc
	bcc	l_f409                             	| [$f3f6: bcs $f409]
	move.b	#0x60,d1                        	| [$f3f8: ldx #$60]
	cmp.b	#0x14,d0                         	| [$f3fa: cmp #$14]
	* bcs=>bcc
	bcc	l_f409                             	| [$f3fc: bcs $f409]
	move.b	#0x48,d1                        	| [$f3fe: ldx #$48]
	cmp.b	#0x0a,d0                         	| [$f400: cmp #$0a]
	* bcs=>bcc
	bcc	l_f409                             	| [$f402: bcs $f409]
	move.b	#0x30,d1                        	| [$f404: ldx #$30]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f406: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f408: nop]
l_f409:
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$f409: stx $1803]
	move.b	d1,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xee                       	| [$f40c: lda $ee]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$f40e: sec]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f40f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f411: nop]
l_f412:
	SBC_IMM	0x0a                           	| [$f412: sbc #$0a]
	bcs	l_f412                             	| [$f414: bcs $f412]
         ^^^^^^ TODO: warning: review stray bcs test
	move.b	#0x0a,d4	| [$f416: adc #$0a]
	addx.b	d4,d0                        	| [$f416: adc #$0a]
	move.b	d0,d1                           	| [$f418: tax]
	GET_ADDRESS	0xf423                     	| [$f419: lda $f423, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$f41c: sta $1802]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f41f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f421: nop]
l_f422:
	rts                                    	| [$f422: rts]
	GET_ADDRESS	0xa4                       	| [$f423: ldy $a4, x]
	move.b	(a0,d1.w),d2                    	| [...]
	PUSH_SR
	GET_ADDRESS	0x84                       	| [$f425: sty $84, x]
    move.b	d2,(a0,d1.w)                 	| [...]
	POP_SR
	GET_ADDRESS	0x85                       	| [$f42c: bit $85]
	tst.b	(a0)                             	| [...]
	SBC_X	0xea                             	| [$f42e: sbc $ea, x]
	GET_ADDRESS	0xe1                       	| [$f430: lda $e1]
	move.b	(a0),d0                         	| [...]
	bne	l_f483                             	| [$f432: bne $f483]
	GET_ADDRESS	0xe2                       	| [$f434: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0xe0,d0                         	| [$f436: and #$e0]
	bne	l_f483                             	| [$f438: bne $f483]
	GET_ADDRESS	0xcb                       	| [$f43a: ldx $cb]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x4003                     	| [$f43c: lda $4003]
	move.b	(a0),d0                         	| [...]
	and.b	#0x40,d0                         	| [$f43f: and #$40]
	bne	l_f448                             	| [$f441: bne $f448]
	clr.b	d1                               	| [$f443: ldx #$00]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f445: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f447: nop]
l_f448:
	GET_ADDRESS	0x4000                     	| [$f448: lda $4000, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$f44b: eor #$ff]
	and.b	#0x10,d0                         	| [$f44d: and #$10]
	beq	l_f483                             	| [$f44f: beq $f483]
	GET_ADDRESS	0xe2                       	| [$f451: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$f453: and #$03]
	cmp.b	#0x03,d0                         	| [$f455: cmp #$03]
	beq	l_f45f                             	| [$f457: beq $f45f]
	move.b	#0x11,d0                        	| [$f459: lda #$11]
	PUSH_SR
	GET_ADDRESS	0x4003                     	| [$f45b: sta $4003]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f45e: nop]
l_f45f:
	GET_ADDRESS	0xee                       	| [$f45f: lda $ee]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x1e,d0                         	| [$f461: cmp #$1e]
	* bcc=>bcs
	bcs	l_f487                             	| [$f463: bcc $f487]
	SET_XC_FLAGS                           	| [$f465: sec]
	SBC_IMM	0x1e                           	| [$f466: sbc #$1e]
	asl.b	#1,d0                            	| [$f468: asl a]
	move.b	d0,d1                           	| [$f469: tax]
	GET_ADDRESS	0xf4eb                     	| [$f46a: lda $f4eb, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f46d: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xf4ec                     	| [$f46f: lda $f4ec, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f472: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x3f,d0                        	| [$f474: lda #$3f]
	PUSH_SR
	GET_ADDRESS	0xe1                       	| [$f476: sta $e1]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x17,d0                        	| [$f478: lda #$17]
	PUSH_SR
	GET_ADDRESS	0x4003                     	| [$f47a: sta $4003]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jra	(0x00d8)                           	| [$f47d: jmp ($00d8)]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f480: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f482: nop]
l_f483:
	rts                                    	| [$f483: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f484: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f486: nop]
l_f487:
	GET_ADDRESS	0xe3                       	| [$f487: lda $e3]
	move.b	(a0),d0                         	| [...]
	and.b	#0x20,d0                         	| [$f489: and #$20]
	bne	l_f483                             	| [$f48b: bne $f483]
	move.b	#0x60,d0                        	| [$f48d: lda #$60]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f48f: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xee                       	| [$f491: ldx $ee]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x1a,d1                         	| [$f493: cpx #$1a]
	* bcc=>bcs
	bcs	l_f4ac                             	| [$f495: bcc $f4ac]
	cmp.b	#0x1e,d1                         	| [$f497: cpx #$1e]
	* bcs=>bcc
	bcc	l_f4ac                             	| [$f499: bcs $f4ac]
	move.b	d1,d0                           	| [$f49b: txa]
	SBC_IMM	0x18                           	| [$f49c: sbc #$18]
	move.b	d0,d1                           	| [$f49e: tax]
	move.b	#0x50,d0                        	| [$f49f: lda #$50]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f4a1: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x66,d0                        	| [$f4a3: lda #$66]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f4a5: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	bne	l_f4b3                             	| [$f4a7: bne $f4b3]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f4a9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f4ab: nop]
l_f4ac:
	move.b	#0x50,d0                        	| [$f4ac: lda #$50]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f4ae: sta $d8]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f4b0: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f4b2: nop]
l_f4b3:
	GET_ADDRESS	0xd8                       	| [$f4b3: lda $d8]
	move.b	(a0),d0                         	| [...]
	                           	| [$f4b5: clc]
	add.b	#0x08,d0                        	| [$f4b6: adc #$08]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f4b8: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd9                       	| [$f4ba: lda $d9]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d4	| [$f4bc: adc #$00]
	addx.b	d4,d0                        	| [$f4bc: adc #$00]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f4be: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$f4c0: dex]
	bpl	l_f4b3                             	| [$f4c1: bpl $f4b3]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f4c3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f4c5: nop]
	move.b	#0xe0,d0                        	| [$f4c6: lda #$e0]
	PUSH_SR
	GET_ADDRESS	0xda                       	| [$f4c8: sta $da]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	#0x62,d0                        	| [$f4ca: lda #$62]
	PUSH_SR
	GET_ADDRESS	0xdb                       	| [$f4cc: sta $db]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_f54b                            	| [$f4ce: jsr $f54b]
	jbsr	l_f535                            	| [$f4d1: jsr $f535]
	move.b	#0x01,d0                        	| [$f4d4: lda #$01]
	PUSH_SR
	GET_ADDRESS	0x1804                     	| [$f4d6: sta $1804]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jbsr	l_f571                            	| [$f4d9: jsr $f571]
	clr.b	d0                               	| [$f4dc: lda #$00]
	move.b	d0,d2                           	| [$f4de: tay]
	PUSH_SR
	GET_ADDRESS_Y	0xd8                     	| [$f4df: sta ($d8), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	GET_ADDRESS	0xe2                       	| [$f4e1: lda $e2]
	move.b	(a0),d0                         	| [...]
	or.b	#0x40,d0                          	| [$f4e3: ora #$40]
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f4e5: sta $e2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f4e7: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f4e9: nop]
l_f4ea:
	rts                                    	| [$f4ea: rts]
	GET_ADDRESS	dummy_write_00f5           	| [$f4ef: asl dummy_write_00f5, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f4f1: asl dummy_write_00f5, x]
	move.b	(a0,d1.w),d4	| [...]
	asl.b	#1,d4                     	| [...]
	PUSH_SR
	move.b	d4,(a0,d1.w)	| [...]
	POP_SR
	SBC_X	0x0c                             	| [$f4f4: sbc $0c, x]
	SBC_X	0x85                             	| [$f4f6: sbc $85, x]
	SBC_X	0xea                             	| [$f4f8: sbc $ea, x]
	GET_ADDRESS	0xe3                       	| [$f4fa: lda $e3]
	move.b	(a0),d0                         	| [...]
	and.b	#0x20,d0                         	| [$f4fc: and #$20]
	bne	l_f4ea                             	| [$f4fe: bne $f4ea]
	move.b	#0xf5,d0                        	| [$f500: lda #$f5]
	PUSH_SR
	GET_ADDRESS	0xee                       	| [$f502: sta $ee]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xed                       	| [$f504: ror $ed]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	jra	l_f609                             	| [$f506: jmp $f609]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f509: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f50b: nop]
	GET_ADDRESS	0xe2                       	| [$f50c: lda $e2]
	move.b	(a0),d0                         	| [...]
	or.b	#0x80,d0                          	| [$f50e: ora #$80]
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f510: sta $e2]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$f512: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f513: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe2a5                     	| [$f515: ldx $e2a5]
	move.b	(a0),d1                         	| [...]
	and.b	#0x0f,d0                         	| [$f518: and #$0f]
	beq	l_f532                             	| [$f51a: beq $f532]
	GET_ADDRESS	0xe2                       	| [$f51c: dec $e2]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x85f5                     	| [$f51e: eor $85f5]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0xeda6                     	| [$f521: inc $eda6]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_f608                            	| [$f524: jsr $f608]
	GET_ADDRESS	0xe3                       	| [$f527: lda $e3]
	move.b	(a0),d0                         	| [...]
	or.b	#0x40,d0                          	| [$f529: ora #$40]
	and.b	#0xdf,d0                         	| [$f52b: and #$df]
	PUSH_SR
	GET_ADDRESS	0xe3                       	| [$f52d: sta $e3]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS_X	0xf5                     	| [$f52f: adc ($f5, x)]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	nop                                    	| [$f531: nop]
l_f532:
	rts                                    	| [$f532: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f533: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f535:
	GET_ADDRESS	0x02ad                     	| [$f535: ldx $02ad]
	move.b	(a0),d1                         	| [...]
	CLR_XC_FLAGS                           	| [$f538: clc]
	SET_XC_FLAGS                           	| [$f539: sec]
	SBC_IMM	0x04                           	| [$f53a: sbc #$04]
	PUSH_SR
	GET_ADDRESS	0x1806                     	| [$f53c: sta $1806]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x03                       	| [$f53f: sbc $03]
	sbc	(a0),d0                            	| [...]
	CLR_XC_FLAGS                           	| [$f541: clc]
	SET_XC_FLAGS                           	| [$f542: sec]
	SBC_IMM	0x08                           	| [$f543: sbc #$08]
	PUSH_SR
	GET_ADDRESS	0x1807                     	| [$f545: sta $1807]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	rts                                    	| [$f548: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f549: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f54b:
	nop                                    	| [$f54b: nop]
	move.b	#0x02,d1                        	| [$f54c: ldx #$02]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f54e: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f550: nop]
l_f551:
	move.b	#0x07,d2                        	| [$f551: ldy #$07]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f553: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd8b1                     	| [$f555: ldx $d8b1]
	move.b	(a0),d1                         	| [...]
	PUSH_SR
	GET_ADDRESS_Y	0xda                     	| [$f558: sta ($da), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	subq.b	#1,d2                           	| [$f55a: dey]
	bpl	l_f556                             	| [$f55b: bpl $f556]
	GET_ADDRESS	0xd9                       	| [$f55d: lda $d9]
	move.b	(a0),d0                         	| [...]
	                           	| [$f55f: clc]
	add.b	#0x20,d0                        	| [$f560: adc #$20]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f562: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xdb                       	| [$f564: adc $db]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	                           	| [$f566: clc]
	add.b	#0x20,d0                        	| [$f567: adc #$20]
	PUSH_SR
	GET_ADDRESS	0xdb                       	| [$f569: sta $db]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	subq.b	#1,d1                           	| [$f56b: dex]
	bpl	l_f551                             	| [$f56c: bpl $f551]
	rts                                    	| [$f56e: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f56f: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f571:
	nop                                    	| [$f571: nop]
	GET_ADDRESS	0x1807                     	| [$f572: lda $1807]
	move.b	(a0),d0                         	| [...]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f575: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0x06                       	| [$f577: sbc $06]
	sbc	(a0),d0                            	| [...]
	CLR_XC_FLAGS                           	| [$f579: clc]
	not.b	d0                               	| [$f57a: eor #$ff]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f57c: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	lsr.b	#1,d0                            	| [$f57e: lsr a]
	GET_ADDRESS	0xd946                     	| [$f57f: cmp $d946, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0xd9                       	| [$f582: lsr $d9]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	move.b	#0xd9,d1                        	| [$f584: ldx #$d9]
	move.b	d0,d1                           	| [$f586: tax]
	nop                                    	| [$f587: cld]
	GET_ADDRESS	0xd9                       	| [$f588: lsr $d9]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	GET_ADDRESS	0xd8                       	| [$f58a: ror $d8]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	move.b	#0xd9,d1                        	| [$f58c: ldx #$d9]
	move.b	d0,d1                           	| [$f58e: tax]
	nop                                    	| [$f58f: cld]
	GET_ADDRESS	0xd9                       	| [$f590: lda $d9]
	move.b	(a0),d0                         	| [...]
	                           	| [$f592: clc]
	add.b	#0x10,d0                        	| [$f593: adc #$10]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f595: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	roxr.b	#1,d0                           	| [$f597: ror a]
	nop                                    	| [$f598: cld]
	rts                                    	| [$f599: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f59a: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f59c:
	GET_ADDRESS	0xe2a5                     	| [$f59c: ldx $e2a5]
	move.b	(a0),d1                         	| [...]
	and.b	#0xe0,d0                         	| [$f59f: and #$e0]
	cmp.b	#0x40,d0                         	| [$f5a1: cmp #$40]
	beq	l_f5a9                             	| [$f5a3: beq $f5a9]
	rts                                    	| [$f5a5: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f5a6: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f5a8: nop]
l_f5a9:
	move.b	#0x9b,d0                        	| [$f5a9: lda #$9b]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f5ab: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe2                       	| [$f5ad: adc $e2]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	and.b	#0x0f,d0                         	| [$f5af: and #$0f]
	beq	l_f5c4                             	| [$f5b1: beq $f5c4]
	move.b	d0,d1                           	| [$f5b3: tax]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f5b4: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd8a5                     	| [$f5b6: ldx $d8a5]
	move.b	(a0),d1                         	| [...]
	SET_XC_FLAGS                           	| [$f5b9: sec]
	SBC_IMM	0x08                           	| [$f5ba: sbc #$08]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f5bc: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	move.b	d0,d1                           	| [$f5be: tax]
	bne	l_f5b7                             	| [$f5bf: bne $f5b7]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f5c1: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f5c3: nop]
l_f5c4:
	GET_ADDRESS	0xed                       	| [$f5c4: ldx $ed]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf600                     	| [$f5c6: lda $f600, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f5c9: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd8                       	| [$f5cb: lda $d8]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x1802                     	| [$f5cd: cmp $1802]
	cmp.b	(a0),d0                          	| [...]
	beq	l_f5e2                             	| [$f5d0: beq $f5e2]
	bcc	l_f5dc                             	| [$f5d2: bcc $f5dc]
         ^^^^^^ TODO: warning: stray bcc test
	GET_ADDRESS	0x1802                     	| [$f5d4: inc $1802]
	addq.b	#1,(a0)                         	| [...]
	bvs	l_f5e2                             	| [$f5d7: bvs $f5e2]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f5d9: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f5db: nop]
l_f5dc:
	GET_ADDRESS	0x1802                     	| [$f5dc: dec $1802]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS_X	0xf5                     	| [$f5df: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	nop                                    	| [$f5e1: nop]
l_f5e2:
	GET_ADDRESS	0xd9                       	| [$f5e2: lda $d9]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x1803                     	| [$f5e4: cmp $1803]
	cmp.b	(a0),d0                          	| [...]
	beq	l_f5f6                             	| [$f5e7: beq $f5f6]
	GET_ADDRESS	0x1803                     	| [$f5e9: inc $1803]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS_X	0xf5                     	| [$f5ec: cmp ($f5, x)]
	cmp.b	(a0),d0                          	| [...]
          ^^^^^^ TODO: review stray cmp (insert SET_X_FROM_CLEARED_C)
	GET_ADDRESS	0x3520                     	| [$f5ee: ror $3520]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR
	move.b	d4,(a0)	| [...]
	POP_SR
	SBC_X	0x60                             	| [$f5f1: sbc $60, x]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f5f3: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xd8a5                     	| [$f5f5: ldx $d8a5]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x1802                     	| [$f5f8: cmp $1802]
	cmp.b	(a0),d0                          	| [...]
	beq	l_f609                             	| [$f5fb: beq $f609]
	jra	l_f5ef                             	| [$f5fd: jmp $f5ef]
l_F600:
	.byte	0x00
	move.b	d0,d2                           	| [$f601: tay]
	CLR_V_FLAG                             	| [$f602: clv]
	addq.b	#1,d2                           	| [$f603: iny]
	nop                                    	| [$f604: cld]
	addq.b	#1,d1                           	| [$f605: inx]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f606: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
l_f608:
	nop                                    	| [$f608: nop]
l_f609:
	GET_ADDRESS	0xe2                       	| [$f609: lda $e2]
	move.b	(a0),d0                         	| [...]
	or.b	#0x20,d0                          	| [$f60b: ora #$20]
	and.b	#0xbf,d0                         	| [$f60d: and #$bf]
	PUSH_SR
	GET_ADDRESS	0xe2                       	| [$f60f: sta $e2]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xf084                     	| [$f611: lda $f084, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$f614: clc]
	add.b	#0x36,d0                        	| [$f615: adc #$36]
	PUSH_SR
	GET_ADDRESS	0xd8                       	| [$f617: sta $d8]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$f619: lda #$00]
	PUSH_SR
	GET_ADDRESS	0xd9                       	| [$f61b: sta $d9]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xe2                       	| [$f61d: lda $e2]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$f61f: and #$0f]
	move.b	d0,d2                           	| [$f621: tay]
	GET_ADDRESS	0xee                       	| [$f622: lda $ee]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x1a,d0                         	| [$f624: cmp #$1a]
	* bcc=>bcs
	bcs	l_f633                             	| [$f626: bcc $f633]
	cmp.b	#0x1e,d0                         	| [$f628: cmp #$1e]
	* bcs=>bcc
	bcc	l_f633                             	| [$f62a: bcs $f633]
	move.b	#0xb2,d4	| [$f62c: adc #$b2]
	addx.b	d4,d0                        	| [$f62c: adc #$b2]
	bmi	l_f639                             	| [$f62e: bmi $f639]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f630: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f632: nop]
l_f633:
	                           	| [$f633: clc]
	add.b	#0x0b,d0                        	| [$f634: adc #$0b]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f636: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f638: nop]
l_f639:
	PUSH_SR
	GET_ADDRESS_Y	0xd8                     	| [$f639: sta ($d8), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	POP_SR
	rts                                    	| [$f63b: rts]
	PUSH_SR
	GET_ADDRESS	dummy_write_00f5           	| [$f63c: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f63e: nop]
	GET_ADDRESS	0xe2                       	| [$f63f: lda $e2]
	move.b	(a0),d0                         	| [...]
	bpl	l_f65b                             	| [$f641: bpl $f65b]
	move.b	#0xd0,d0                        	| [$f643: lda #$d0]
	PUSH_SR
	GET_ADDRESS	0x1802                     	| [$f645: sta $1802]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	GET_ADDRESS	0xed                       	| [$f648: ldx $ed]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0xf600                     	| [$f64a: lda $f600, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$f64d: sec]
	SBC_IMM	0x0c                           	| [$f64e: sbc #$0c]
	PUSH_SR
	GET_ADDRESS	0x1803                     	| [$f650: sta $1803]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	clr.b	d0                               	| [$f653: lda #$00]
	PUSH_SR
	GET_ADDRESS	0x1804                     	| [$f655: sta $1804]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	dummy_write_00f5           	| [$f658: sta dummy_write_00f5]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	nop                                    	| [$f65a: nop]
l_f65b:
	rts                                    	| [$f65b: rts]
